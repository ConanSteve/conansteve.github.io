<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>loggingr日志模块的使用</title>
      <link href="/2022/04/19/Notebooks/ComputerScience/Language/Python/logging/"/>
      <url>/2022/04/19/Notebooks/ComputerScience/Language/Python/logging/</url>
      
        <content type="html"><![CDATA[<h3 id="日志事件级别">日志事件级别</h3><table><thead><tr><th>级别</th><th>何时使用</th></tr></thead><tbody><tr><td>DEBUG</td><td>细节信息，仅当诊断问题时适用。</td></tr><tr><td>INFO</td><td>确认程序按预期运行</td></tr><tr><td>WARNING</td><td>表明有已经或即将发生的意外（例如：磁盘空间不足）。程序仍按预期进行</td></tr><tr><td>ERROR</td><td>由于严重的问题，程序的某些功能已经不能正常执行</td></tr><tr><td>CRITICAL</td><td>严重的错误，表明程序已不能继续执行</td></tr></tbody></table><p>默认的级别是 “WARNING“，意味着只会追踪该级别及以上的事件，除非更改日志配置。所追踪事件可以以不同形式处理。最简单的方式是输出到控制台。另一种常用的方式是写入磁盘文件。</p><hr><h3 id="basicConfig-设置"><strong>basicConfig()设置</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认的warning级别，只输出warning以上的</span></span><br><span class="line"><span class="comment">#使用basicConfig()来指定日志级别和相关信息</span></span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.DEBUG <span class="comment">#设置日志输出格式</span></span><br><span class="line">                    ,filename=<span class="string">&quot;demo.log&quot;</span> <span class="comment">#log日志输出的文件位置和文件名</span></span><br><span class="line">                    ,filemode=<span class="string">&quot;w&quot;</span> <span class="comment">#文件的写入格式，w为重新写入文件，默认是追加</span></span><br><span class="line">                    ,<span class="built_in">format</span>=<span class="string">&quot;%(asctime)s - %(name)s - %(levelname)-9s - %(filename)-8s : %(lineno)s line - %(message)s&quot;</span> <span class="comment">#日志输出的格式</span></span><br><span class="line">                    <span class="comment"># -8表示占位符，让输出左对齐，输出长度都为8位</span></span><br><span class="line">                    ,datefmt=<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span> <span class="comment">#时间输出的格式</span></span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">logging.debug(<span class="string">&quot;This is  DEBUG !!&quot;</span>)</span><br><span class="line">logging.info(<span class="string">&quot;This is  INFO !!&quot;</span>)w</span><br><span class="line">logging.warning(<span class="string">&quot;This is  WARNING !!&quot;</span>)</span><br><span class="line">logging.error(<span class="string">&quot;This is  ERROR !!&quot;</span>)</span><br><span class="line">logging.critical(<span class="string">&quot;This is  CRITICAL !!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在实际项目中，捕获异常的时候，如果使用logging.error(e)，只提示指定的logging信息，不会出现</span></span><br><span class="line"><span class="comment">#为什么会错的信息，所以要使用logging.exception(e)去记录。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">3</span>/<span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># logging.error(e)</span></span><br><span class="line">    logging.exception(e)</span><br></pre></td></tr></table></figure><p>输出日志如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2021-03-26 02:03:01 - root - DEBUG     - basiclogging : 16 line - This is  DEBUG !!</span><br><span class="line">2021-03-26 02:03:01 - root - INFO      - basiclogging : 17 line - This is  INFO !!</span><br><span class="line">2021-03-26 02:03:01 - root - WARNING   - basiclogging : 18 line - This is  WARNING !!</span><br><span class="line">2021-03-26 02:03:01 - root - ERROR     - basiclogging : 19 line - This is  ERROR !!</span><br><span class="line">2021-03-26 02:03:01 - root - CRITICAL  - basiclogging : 20 line - This is  CRITICAL !!</span><br><span class="line"></span><br><span class="line">2021-03-26 03:16:47 - root - ERROR     - basiclogging : 27 line - division by zero</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;E:/pycharm_project/examples-of-web-crawlers-master/logginng/basiclogging&quot;, line 24, in &lt;module&gt;</span><br><span class="line">    3/0</span><br><span class="line">ZeroDivisionError: division by zero</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用药方</title>
      <link href="/2022/04/18/Notebooks/Medical/qing/"/>
      <url>/2022/04/18/Notebooks/Medical/qing/</url>
      
        <content type="html"><![CDATA[<h4 id="如何治脚臭">如何治脚臭</h4><blockquote><p>每次半瓶碘伏，三片甲硝唑泡脚，晾干涂藿香正气水，再晾干涂兰美抒，然后把甲硝唑磨成粉撒在鞋子里，每三天撒一次，可以消除脚臭</p></blockquote><p>实测2天治好</p>]]></content>
      
      
      <categories>
          
          <category> Medical </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用软件</title>
      <link href="/2022/04/18/Notebooks/ComputerScience/Linux/linux-software/"/>
      <url>/2022/04/18/Notebooks/ComputerScience/Linux/linux-software/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>torch.nn.AdaptiveAvgPool2d() 自适应平均池化函数解析</title>
      <link href="/2022/04/18/Notebooks/ComputerScience/Pytorch/torch-nn-AdaptiveAvgPool2d/"/>
      <url>/2022/04/18/Notebooks/ComputerScience/Pytorch/torch-nn-AdaptiveAvgPool2d/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tools</title>
      <link href="/2022/04/18/Notebooks/ComputerScience/Tools/Tools/"/>
      <url>/2022/04/18/Notebooks/ComputerScience/Tools/Tools/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/7771794c88a1">Markdown介绍及使用教程</a></p><p><a href="https://zhuanlan.zhihu.com/p/38554069?utm_source=qq">如何利用OneNote高效做笔记</a></p><h3 id="Markdown">Markdown</h3><p><a href="https://markdown.com.cn">https://markdown.com.cn</a></p><p><a href="https://www.jianshu.com/p/25f0139637b7">markdown中公式编辑教程</a></p><p><a href="https://www.jianshu.com/p/a0aa94ef8ab2">Markdown写数学公式</a></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>α</mi><mo>+</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha+\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></span></p><p><a href="https://zhuanlan.zhihu.com/p/158156773">https://zhuanlan.zhihu.com/p/158156773</a></p><p><a href="https://zhuanlan.zhihu.com/p/50667788">使用LaTeX语法编写数学公式（持续更新）</a></p><p><a href="https://www.zhihu.com/question/20962496">github写博客</a></p><p><a href="http://www.idejihuo.com/">idea破解</a></p><p>豆沙绿颜色值：RGP值（199，237，204）   色调：85 饱和度：123 亮度：205</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常见文件操作命令</title>
      <link href="/2022/04/15/Notebooks/ComputerScience/Linux/LinuxCmd/file-operation/"/>
      <url>/2022/04/15/Notebooks/ComputerScience/Linux/LinuxCmd/file-operation/</url>
      
        <content type="html"><![CDATA[<h2 id="文件复制拷贝删除">文件复制拷贝删除</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp -i a.c /path/a.c # copy file</span><br><span class="line">rm -rf a.py　   # 删除文件</span><br><span class="line">rm -rf data     # 删除文件夹 </span><br><span class="line">touch a.py/vim a.py      # 创建文件</span><br><span class="line">mkdir data      # 创建文件夹</span><br><span class="line">scp /home/lmc/a.py(local) username@ip:/home/lmc/fuwuqi/(remote)  # copy单个文件到远程</span><br><span class="line">scp -r /home/lmc/test/ xxx@192.168.x.xxx:/home/lmc/fuwuqi/   # copy文件夹到远程</span><br></pre></td></tr></table></figure><h2 id="文件查找">文件查找</h2><p><a href="https://blog.csdn.net/faihung/article/details/84101603">查找软件安装位置</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -name nginx</span><br><span class="line">find . -name &quot;*libc*&quot;</span><br></pre></td></tr></table></figure><p>用于查找文件里符合条件的字符串 <code>grep</code><br><a href="https://blog.51cto.com/nameyjj/557424">查看版本信息</a> <code>lsb_release -a</code><br><a href="https://www.linuxprobe.com/five-command-down-browse.html">终端下载文件</a><br>配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export PATH=&quot;你的路劲/anaconda3/bin:$PATH&quot;</span><br></pre></td></tr></table></figure><p>查看文件夹下文件内容所在位置： <code>grep -r &quot;api/v2&quot;</code></p><p>查找当前用户监听端口</p><p><code>lsof -i |grep LISTEN</code></p><h2 id="移动文件或文件夹">移动文件或文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv 旧文件/目录 新文件名/目录</span><br></pre></td></tr></table></figure><h2 id="重命名文件或文件夹">重命名文件或文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv oldName newName </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过zip命令压缩和解压缩文件</title>
      <link href="/2022/04/15/Notebooks/ComputerScience/Linux/LinuxCmd/zip/"/>
      <url>/2022/04/15/Notebooks/ComputerScience/Linux/LinuxCmd/zip/</url>
      
        <content type="html"><![CDATA[<p>通常 zip 已经安装，但验证下也没坏处。你可以运行以下命令来安装 <code>zip</code> 和 <code>unzip</code>。如果它尚未安装，它将立即安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zip unzip</span><br></pre></td></tr></table></figure><h3 id="zip">zip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip [-dDqrS] [-b path] [zipfile [file ...]]</span><br></pre></td></tr></table></figure><ul><li><p>-d : 从 压缩文件内删除指定的文件</p></li><li><p>-D : 压 缩文件内不建立目录名称</p></li><li><p>-q : 不显 示指令执行过程</p></li><li><p>-r : 递 归处理，将指定目录下的所有文件和子目录一并处理</p></li><li><p>-S : 包 含系统和隐藏文件</p></li><li><p>-&lt;压缩效率&gt; 压 缩效率是一个介于1-9的 数值</p></li><li><p>-b : 创建zip文件临时目录</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zip -r output_file.zip file1 folder1</span><br><span class="line"><span class="comment"># 如果文件过大，建议不显示指令执行过程</span></span><br><span class="line">zip -qr output_file.zip file1 folder1</span><br></pre></td></tr></table></figure><p>分卷压缩和合并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">----- 分卷压缩 -----</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将文件或者文件件打包为zip压缩包，book.zip大小为38.8M</span></span><br><span class="line">zip -r book.zip ./input.pdf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将book.zip分割，每个压缩包不超过20M，生成两个压缩包subbook.zip（17.8M）和subbook.z01（21M）</span></span><br><span class="line">zip -s 20m book.zip --out subbook.zip</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">----- 合并解压 -----</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将上述两个压缩包合并为一个压缩文件single.zip</span></span><br><span class="line">zip subbook.zip -s=0 --out single.zip</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压single.zip</span></span><br><span class="line">unzip -d ./ single.zip</span><br></pre></td></tr></table></figure><h3 id="unzip">unzip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip [-Z] [-cflptTuvz[abjnoqsCDKLMUVWX$/:^]] file[.zip] [file(s) ...] [-d exdir]</span><br></pre></td></tr></table></figure><ul><li>-j : 目录结构不重新创建</li><li>file[.zip]:待解压的包</li><li>[file(s) …]：要解压的文件，默认解压全部文件</li><li>-d : 解压的输出目录,默认当前目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip ***.zip</span><br></pre></td></tr></table></figure><h3 id="zipsplit">zipsplit</h3><p>命令用于将较大的“zip”压缩包分割成各个较小的“zip”压缩包。</p><p>**语法格式：**zipsplit [参数]</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-n</th><th>指定分割后每个zip文件的大小</th></tr></thead><tbody><tr><td>-t</td><td>报告将要产生的较小的zip文件的大小</td></tr><tr><td>-b</td><td>指定分割后的zip文件的存放位置</td></tr></tbody></table><p><strong>参考实例</strong></p><p>分割每个文件为1k：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipsplit -n 1000 file.zip </span><br></pre></td></tr></table></figure><p>指定分割后的zip文件的存放位置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipsplit -b 50 file.zip file1</span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://linux.cn/article-10778-1.html">初级：如何在 Linux 中 zip 压缩文件和文件夹</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装并运行nginx</title>
      <link href="/2022/04/12/Notebooks/ComputerScience/Basic/install-nginx-on-mac/"/>
      <url>/2022/04/12/Notebooks/ComputerScience/Basic/install-nginx-on-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装-brew">1. 安装 brew</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><p><strong>【报错】：</strong> Failed to connect to <a href="http://raw.githubusercontent.com">raw.githubusercontent.com</a> port 443: Connection refused</p><p><strong>换个命令重新安装：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>（参考： _ <a href="https://www.cnblogs.com/jiefangzhe/p/12929078.html">https://www.cnblogs.com/jiefangzhe/p/12929078.html</a>_）</p><p><strong>验证安装成功：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew -v</span><br></pre></td></tr></table></figure><h2 id="2-安装-nginx">2. 安装 nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><p><strong>验证安装成功：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><h2 id="3-修改-nginx配置">3. 修改 nginx配置</h2><p><strong>打开配置文件： <code>/usr/local/etc/nginx/nginx.conf</code></strong><br><strong>1. 定义需要转发的服务地址：</strong></p><p>MacOS 12.1之后的配置存储位置为：<code>/opt/homebrew/etc/nginx/nginx.conf</code></p><p><img src="https://img-blog.csdnimg.cn/20201002161613502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDYxNTE1NQ==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>2. 配置请求转发：</strong><img src="https://img-blog.csdnimg.cn/20201002160855663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDYxNTE1NQ==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="4-运行-nginx">4. 运行 nginx</h2><p><strong>1. 运行 nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx</span><br></pre></td></tr></table></figure><p><strong>2. 重新加载 nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><p><strong>3. 关闭 nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s stop</span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://blog.csdn.net/weixin_40615155/article/details/108901854">https://blog.csdn.net/weixin_40615155/article/details/108901854</a></li><li><a href="https://blog.csdn.net/weixin_45825077/article/details/107134300">https://blog.csdn.net/weixin_45825077/article/details/107134300</a></li><li><a href="https://www.cnblogs.com/taiyonghai/p/6728707.html">Nginx Linux详细安装部署教程</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装并运行nginx</title>
      <link href="/2022/04/12/Notebooks/ComputerScience/Mac/install-nginx-on-mac/"/>
      <url>/2022/04/12/Notebooks/ComputerScience/Mac/install-nginx-on-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装-brew-2">1. 安装 brew</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><p><strong>【报错】：</strong> Failed to connect to <a href="http://raw.githubusercontent.com">raw.githubusercontent.com</a> port 443: Connection refused</p><p><strong>换个命令重新安装：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>（参考： _ <a href="https://www.cnblogs.com/jiefangzhe/p/12929078.html">https://www.cnblogs.com/jiefangzhe/p/12929078.html</a>_）</p><p><strong>验证安装成功：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew -v</span><br></pre></td></tr></table></figure><h2 id="2-安装-nginx-2">2. 安装 nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><p><strong>验证安装成功：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><h2 id="3-修改-nginx配置-2">3. 修改 nginx配置</h2><p><strong>打开配置文件： <code>/usr/local/etc/nginx/nginx.conf</code></strong><br><strong>1. 定义需要转发的服务地址：</strong></p><p>MacOS 12.1之后的配置存储位置为：<code>/opt/homebrew/etc/nginx/nginx.conf</code></p><p><img src="https://img-blog.csdnimg.cn/20201002161613502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDYxNTE1NQ==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>2. 配置请求转发：</strong><img src="https://img-blog.csdnimg.cn/20201002160855663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDYxNTE1NQ==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="4-运行-nginx-2">4. 运行 nginx</h2><p><strong>1. 运行 nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx</span><br></pre></td></tr></table></figure><p><strong>2. 重新加载 nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><p><strong>3. 关闭 nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s stop</span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://blog.csdn.net/weixin_40615155/article/details/108901854">https://blog.csdn.net/weixin_40615155/article/details/108901854</a></li><li><a href="https://blog.csdn.net/weixin_45825077/article/details/107134300">https://blog.csdn.net/weixin_45825077/article/details/107134300</a></li><li><a href="https://www.cnblogs.com/taiyonghai/p/6728707.html">Nginx Linux详细安装部署教程</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在Mac上通过imagemagick压缩gif动图</title>
      <link href="/2022/04/11/Notebooks/ComputerScience/Basic/compress-gif-by-imagemagick/"/>
      <url>/2022/04/11/Notebooks/ComputerScience/Basic/compress-gif-by-imagemagick/</url>
      
        <content type="html"><![CDATA[<h1>安装homebrew</h1><p>参照网络</p><h1>安装imagemagick</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install imagemagick</span><br></pre></td></tr></table></figure><h1>转换</h1><p>终端里输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert old.gif -fuzz 15% -layers Optimize new.gif</span><br></pre></td></tr></table></figure><p>(-fuzz 15%指压缩率15%，你也可以尝试换成别的数值 ， newlsj.gif代表压制后动图的文件名，你可以随便改成别的)</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>导入自定义包的三种导入方式</title>
      <link href="/2022/04/11/Notebooks/ComputerScience/Language/Python/how-to-import-packages/"/>
      <url>/2022/04/11/Notebooks/ComputerScience/Language/Python/how-to-import-packages/</url>
      
        <content type="html"><![CDATA[<h1>1.自定义包</h1><p><code>包</code>就是一个至少包含<code>__init__.py</code>文件的文件夹，这个文件是<strong>必须存在</strong>的，否则，<code>Python</code>就把这个目录当成<strong>普通目录(文件夹)</strong>，而不是一个<code>包</code>。<code>__init__.py</code>可以是<strong>空文件</strong>，也可以有<code>Python代码</code>，因为<code>__init__.py</code><strong>本身就是一个模块</strong>，而它的模块名就是对应包的名字。<strong>调用包就是执行包下的</strong><code>__init__.py</code><strong>文件</strong>。</p><p>以下自定义了一个包，包所在的目录为<code>D:\Code_Sources\Python\Test\</code>，即就是这个目录下有个叫<code>parent</code>的包。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-7042105/wnivgqa3zo.png?imageView2/2/w/1620" alt="img"></p><h2 id="1-1-parent-目录中的文件">1.1. parent 目录中的文件</h2><h3 id="init-py"><strong>init</strong>.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># parent 的 __init__.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;parent 作为主程序运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;parent 初始化&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="1-2-pack-目录中的文件">1.2. pack 目录中的文件</h2><h3 id="init-py-2"><strong>init</strong>.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pack 的 __init__.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;作为主程序运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Pack初始化&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="mod-py"><a href="http://mod.py/">mod.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mod</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;pack.mod.func()&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;mod 作为主程序运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;mod 被另一个模块调用&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="1-3-pack2-目录中的文件">1.3. pack2 目录中的文件</h2><h3 id="init-py-3"><strong>init</strong>.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pack2 的 __init__.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># __all__ 用于当前Pack2包是所包含的模块</span></span><br><span class="line">__all__ = [<span class="string">&quot;mod2_1&quot;</span>, <span class="string">&quot;mod2_2&quot;</span>, <span class="string">&quot;mod2_3&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Pack2作为主程序运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Pack2初始化&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="mod2-1-py">mod2_1.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mod2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;pack2.mod2_1.func()&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;mod2_1 作为主程序运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;mod2_1 被另一个模块调用&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="mod2-2-py">mod2_2.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mod2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;pack2.mod2_2.func()&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;mod2_2 作为主程序运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;mod2_2 被另一个模块调用&#x27;</span>)</span><br></pre></td></tr></table></figure><h1>2.导入（自定义）包的3种方法</h1><p>我在桌面<code>C:\Users\Administrator\Desktop\</code>新建了一个<code>main.py</code>文件**（和自定义的包不在一个目录）**，<strong>自定义包的目录：</strong><code>D:\Code_Sources\Python\Test\</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将包含parent包的路径添加进系统路径</span></span><br><span class="line">sys.path.append(<span class="string">r&quot;D:\Code_Sources\Python\Test&quot;</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-----开始import-----\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> parent.pack2.mod2_1          <span class="comment"># 第1种 引用方法</span></span><br><span class="line"><span class="keyword">import</span> parent.pack2.mod2_2 <span class="keyword">as</span> p2m2  <span class="comment"># 第2种 引用方法</span></span><br><span class="line"><span class="keyword">from</span> parent.pack.mod <span class="keyword">import</span> *       <span class="comment"># 第3种 引用方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----开始main-----\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第1种 引用的调用方法</span></span><br><span class="line">    parent.pack2.mod2_1.func() </span><br><span class="line">    <span class="comment"># 第2种 引用的调用方法</span></span><br><span class="line">    p2m2.func()</span><br><span class="line">    <span class="comment"># 第3种 引用的调用方法</span></span><br><span class="line">    func()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#  import就会把注册在包 __init__.py 文件中 __all__列表中的子模块和子包导入到当前作用域中</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\npack2包中的模块有：&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(parent.pack2.__all__)</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-----开始import-----</span><br><span class="line"></span><br><span class="line">parent 初始化</span><br><span class="line">Pack2初始化</span><br><span class="line">mod2_1 被另一个模块调用</span><br><span class="line">mod2_2 被另一个模块调用</span><br><span class="line">Pack初始化</span><br><span class="line">mod 被另一个模块调用</span><br><span class="line">-----开始main-----</span><br><span class="line"></span><br><span class="line">pack2.mod2_1.func()</span><br><span class="line">pack2.mod2_2.func()</span><br><span class="line">pack.mod.func()</span><br><span class="line"></span><br><span class="line">pack2包中的模块有：</span><br><span class="line">[&#x27;mod2_1&#x27;, &#x27;mod2_2&#x27;, &#x27;mod2_3&#x27;]</span><br><span class="line"></span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://cloud.tencent.com/developer/article/1596466">原文转载</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将jupyter notebook转成Markdown文件</title>
      <link href="/2022/04/08/Notebooks/ComputerScience/Language/Python/convert-jupyter-to-markdown/"/>
      <url>/2022/04/08/Notebooks/ComputerScience/Language/Python/convert-jupyter-to-markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备工作">一、准备工作</h2><p>安装nbconverter: <a href="https://link.zhihu.com/?target=https%3A//nbconvert.readthedocs.io/en/latest/">nbconvert: Convert Notebooks to other formats</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nbconvert</span><br></pre></td></tr></table></figure><p><strong>注意依赖项：</strong></p><ul><li><strong>基本依赖：pandoc</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pandoc</span><br></pre></td></tr></table></figure><ul><li><strong>如果需要转tex：</strong><a href="https://link.zhihu.com/?target=http%3A//tug.org/texlive/">http://tug.org/texlive/</a></li><li>如果需要转pdf: Chromium <a href="https://link.zhihu.com/?target=https%3A//github.com/pyppeteer/pyppeteer">pyppeteer/pyppeteer</a></li></ul><p><img src="https://pic4.zhimg.com/80/v2-ca3061832df5003c5afbcdc20a06bdc3_1440w.jpg" alt="img"></p><h2 id="二、使用方法">二、使用方法</h2><p>命令行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter nbconvert --to FORMAT notebook.ipynb</span><br></pre></td></tr></table></figure><p>这里<code>FORMAT</code> 用具体的格式替换，如 <code>markdown</code>, <code>html</code>等。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter nbconvert --to markdown notebook.ipynb</span><br></pre></td></tr></table></figure><p>可以将别名添加进zshrc文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias nb2md=&quot;jupyter nbconvert --to markdown&quot;</span><br></pre></td></tr></table></figure><h2 id="三、测试">三、测试</h2><p>准备一个<code>ipynb</code>文件：</p><p><img src="https://pic1.zhimg.com/v2-504b4ce2a7050186d851c528b532b1e8_b.jpg" alt="img"></p><p>这里为了测试它的性能，特意画了一个图。</p><p>用上述命令转格式，在<code>Typora</code>打开：</p><p><img src="https://pic4.zhimg.com/v2-51f77e331b6ce419a88b4749c9c83eb3_b.jpg" alt="img"></p><p>对比内容：</p><p><img src="https://pic2.zhimg.com/v2-239bc117b705dd6aec187c3990225e79_b.jpg" alt="img"></p><p>一模一样。</p><h2 id="四、其它问题">四、其它问题</h2><ul><li>1、支持的其它类型文件：</li></ul><p><img src="https://pic2.zhimg.com/80/v2-1b985561f9fa9412c23ba89f54ffc855_1440w.jpg" alt="img"></p><ul><li>2、 可以在命令行实现多个文件导出</li></ul><p><img src="https://pic2.zhimg.com/80/v2-984c7cc19f54f7082d969529a2521d75_1440w.jpg" alt="img"></p><p>只需要写一个<code>py</code>文件即可，如上图第二个cell。</p><ul><li>3、<code>nbconverter</code>还可以直接作为 <code>python</code>库来使用</li></ul><p>详见官网：<a href="https://link.zhihu.com/?target=https%3A//nbconvert.readthedocs.io/en/latest/nbconvert_library.html">Using nbconvert as a library</a></p><h1>Reference</h1><ol><li>转载自<a href="https://zhuanlan.zhihu.com/p/371132826">Jupyter Notebook文件转markdown</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pymysql的基本用法</title>
      <link href="/2022/04/08/Notebooks/ComputerScience/Language/Python/pymysql/"/>
      <url>/2022/04/08/Notebooks/ComputerScience/Language/Python/pymysql/</url>
      
        <content type="html"><![CDATA[<h1>安装pymysql</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><h1>连接数据库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db = pymysql.connect(host=IP_address, user=username, password=password, database=database_name, charset=<span class="string">&quot;utf8&quot;</span>)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>host：数据库IP地址，本地可以为<code>localhost</code></li><li>user：数据库用户名</li><li>password：数据库用户名对应的密码</li><li>password：要连接的数据库名称</li></ul><h1>增删改查</h1><p>操作都要通过一个游标执行，所以，创建连接的时候，直接创建一个cursor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor = db.cursor()</span><br></pre></td></tr></table></figure><h2 id="执行语句">执行语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(command, params=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><code>command</code>：str类型，sql语句字符串</li><li><code>params</code>：tuple类型，当command使用占位符<code>%s</code>时，可传入占位符对应的字符值</li></ul><h1>关闭数据库连接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.close() <span class="comment"># 需要先关闭游标</span></span><br><span class="line">db.close() </span><br></pre></td></tr></table></figure><h1>实例说明</h1><h2 id="测试环境">测试环境</h2><ul><li>数据库版本：5.6.41</li><li>系统：MacOS 10.13.6</li></ul><p>下面的数据库被用来作实例说明</p><p>创建脚本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Source Server         : 127.0.0.1-root</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 50641</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : test</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 50641</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Date: 08/04/2022 20:03:35</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` (</span><br><span class="line">  `id` <span class="type">varchar</span>(<span class="number">12</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>latin1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="string">&#x27;id_001&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">23</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="string">&#x27;id_002&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">25</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="string">&#x27;id_003&#x27;</span>, <span class="string">&#x27;Rose&#x27;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204081959090.png" alt=""></p><h3 id="连接数据库">连接数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">&quot;localhost&quot;</span>, user=<span class="string">&quot;root&quot;</span>, password=<span class="string">&quot;&quot;</span>, database=<span class="string">&quot;test&quot;</span>)</span><br><span class="line">cursor= db.cursor()</span><br></pre></td></tr></table></figure><h3 id="查询">查询</h3><p>查询返回的数据为二维tuple类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd = <span class="string">&quot;select * from user&quot;</span></span><br><span class="line">result=cursor.execute(cmd)</span><br><span class="line">data = cursor.fetchmany(result)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> data: <span class="built_in">print</span>(_)</span><br></pre></td></tr></table></figure><p>​    (‘id_001’, ‘Tom’, 23)<br>​    (‘id_002’, ‘Jack’, 25)<br>​    (‘id_003’, ‘Rose’, 18)</p><h3 id="增加数据">增加数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmd = <span class="string">&quot;insert into `user` values (%s,%s,%s)&quot;</span></span><br><span class="line">param=(<span class="string">&quot;id_004&quot;</span>, <span class="string">&quot;Lucy&quot;</span>, <span class="built_in">str</span>(<span class="number">21</span>))</span><br><span class="line">r = cursor.execute(cmd, param)</span><br><span class="line"><span class="built_in">print</span>(r)</span><br><span class="line">cmd = <span class="string">&quot;select * from user&quot;</span></span><br><span class="line">result=cursor.execute(cmd)</span><br><span class="line">data = cursor.fetchmany(result)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> data: <span class="built_in">print</span>(_)</span><br></pre></td></tr></table></figure><p>​    1<br>​    (‘id_001’, ‘Tom’, 23)<br>​    (‘id_002’, ‘Jack’, 25)<br>​    (‘id_003’, ‘Rose’, 18)<br>​    (‘id_004’, ‘Lucy’, 21)</p><h3 id="删除数据库">删除数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmd = <span class="string">&quot;delete from user where username=%s&quot;</span></span><br><span class="line">param=(<span class="string">&quot;Lucy&quot;</span>,)</span><br><span class="line">r = cursor.execute(cmd, param)</span><br><span class="line"><span class="built_in">print</span>(r)</span><br><span class="line">cmd = <span class="string">&quot;select * from user&quot;</span></span><br><span class="line">result=cursor.execute(cmd)</span><br><span class="line">data = cursor.fetchmany(result)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> data: <span class="built_in">print</span>(_)</span><br></pre></td></tr></table></figure><p>​    1<br>​    (‘id_001’, ‘Tom’, 23)<br>​    (‘id_002’, ‘Jack’, 25)<br>​    (‘id_003’, ‘Rose’, 18)</p><h3 id="关闭数据库连接">关闭数据库连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.close()</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><h3 id="提交数据库">提交数据库</h3><p>对数据库做了改变之后，必须提交，否则数据库不会更新</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.commit()</span><br></pre></td></tr></table></figure><h1>封装</h1><p>下面的包直接进一步封装了pymysql包，根据个人需求可以自己更改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql, os, json</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MySQL</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 打开数据库连接</span></span><br><span class="line">        self.db = pymysql.connect(host = <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">                                  user = <span class="string">&quot;root&quot;</span>, </span><br><span class="line">                                  password = <span class="string">&quot;&quot;</span>, </span><br><span class="line">                                  database = <span class="string">&quot;test&quot;</span>)</span><br><span class="line">        <span class="comment"># 使用 cursor() 方法创建一个游标对象 cursor</span></span><br><span class="line">        self.cursor = self.db.cursor()</span><br><span class="line">        self.<span class="built_in">open</span> = <span class="literal">True</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;数据库连接成功！ connect database succeed!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">connect</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">execute</span>(<span class="params">self, command, params=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># 使用 execute()  方法执行 SQL 查询</span></span><br><span class="line">        r = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> params <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            r = self.cursor.execute(command)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = self.cursor.execute(command, params)</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">      </span><br><span class="line"><span class="comment">#  返回的是一个二维的tuple</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, command, params=<span class="literal">None</span></span>):</span><br><span class="line">        result = self.cursor.execute(command, params)</span><br><span class="line">        <span class="comment"># 使用 fetchone() 方法获取单条数据.</span></span><br><span class="line">        data = self.cursor.fetchmany(result)</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">commit</span>(<span class="params">self</span>):</span><br><span class="line">        self.db.commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">close</span>(<span class="params">self</span>):</span><br><span class="line">      <span class="keyword">if</span> self.<span class="built_in">open</span>:</span><br><span class="line">          self.cursor.close()</span><br><span class="line">          self.db.close()</span><br><span class="line">          self.<span class="built_in">open</span> = <span class="literal">False</span></span><br><span class="line">          <span class="built_in">print</span>(<span class="string">&quot;数据库成功关闭！&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">      self.close()</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    sql = MySQL()</span><br><span class="line">    <span class="comment"># cmd = &quot;select * from person where code =12345&quot;</span></span><br><span class="line">    <span class="comment"># r = sql.query(cmd)</span></span><br><span class="line">    <span class="comment"># import_customers(sql)</span></span><br><span class="line">    r= sql.query(<span class="string">&quot;show tables&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(r)</span><br><span class="line">    sql.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;completed!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://www.cnblogs.com/xfxing/p/9322199.html">pymysql的基本使用</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过hexo搭建个人博客</title>
      <link href="/2022/04/01/Notebooks/ComputerScience/Tools/BlogWebsite/build-my-blog-by-hexo/"/>
      <url>/2022/04/01/Notebooks/ComputerScience/Tools/BlogWebsite/build-my-blog-by-hexo/</url>
      
        <content type="html"><![CDATA[<h1>Hexo</h1><h2 id="搭建自己的个人博客总体来说有三种选择">搭建自己的个人博客总体来说有三种选择</h2><h3 id="1-使用现有的">1. 使用现有的</h3><p>现在市面上的博客有很多，如CSDN，博客园，简书等平台。都可以直接在上面发表自己的博客，用户交互也做的很好，写的文章在各大搜索引擎下也能搜索的到，比如百度、搜狗等。但是缺点是不太自由，会受到平台的各种限制和很多烦人的广告。</p><h3 id="2-自己购买域名和服务器">2. 自己购买域名和服务器</h3><p>这种方式搭建博客的成本比较高，购买成本，还有花费力气自己搭这么一个网站，并且需要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。</p><h3 id="3-使用GitHub-Page平台">3. 使用GitHub Page平台</h3><p>第三种选择，直接在GitHub Page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p><h2 id="本教程分三个部分">本教程分三个部分</h2><p>本教程大部分是通过网络进行收集，并结合我个人的一些理解编写的。</p><ul><li>第一部分：hexo的搭建并部署到GitHub Page上，以及个人域名的绑定。</li><li>第二部分：hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流</li><li>第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</li></ul><h2 id="第一部分">第一部分</h2><p>hexo的搭建并部署到GitHub Page上，以及个人域名的绑定。</p><h3 id="hexo-简介">hexo 简介</h3><p>hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h3 id="Hexo搭建步骤">Hexo搭建步骤</h3><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li><li>设置个人域名</li><li>发布文章</li></ol><h4 id="1-安装Git">1. 安装Git</h4><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去<a href="https://git-scm.com/">Git官网</a>了解一下。</p><ul><li>windows：到git官网上下载，<a href="https://git-scm.com/downloads">Download git</a>，下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</li><li>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>安装好后，用 <code>git --version</code> 来查看一下版本</p><h4 id="2-安装nodejs">2. 安装nodejs</h4><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><ul><li>windows：nodejs选择LTS版本就行了。<a href="https://nodejs.org/en/download/">node.js LTS Download</a></li><li>linux：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejssudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完后，打开命令行查看版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -vnpm -v</span><br></pre></td></tr></table></figure><p>检查一下有没有安装成功</p><p>顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p><h4 id="3-安装hexo">3. 安装hexo</h4><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p><p>输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依旧用 <code>hexo -v</code>查看一下版本</p><p>至此hexo的环境就部署完了。</p><p>接下来初始化一下hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br></pre></td></tr></table></figure><p>这个myBlog可以自己取什么名字都行，然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd myBlog //进入这个myBlog文件夹npm install</span><br></pre></td></tr></table></figure><p>新建完成后，文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml：config.yml: 博客的配置文件</li></ul><p>启动hexo服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo server</span><br></pre></td></tr></table></figure><p>打开hexo的服务，在浏览器输入localhost:4000 就可以看到你生成的博客了。</p><p>使用ctrl+c可以把服务关掉。</p><h4 id="4-GitHub创建个人仓库">4. GitHub创建个人仓库</h4><p>首先，你先要有一个GitHub账户，没有请注册。<a href="https://github.com/">GitHub官网</a></p><p>注册完登录后，在GitHub.com中看到一个New repository，新建仓库</p><p>创建一个和你用户名相同的仓库，<a href="http://xn--yfr16an19l.github.io">后面加.github.io</a>，比如你注册的用户名叫 zhangsan，那么你创建的仓库名就叫 <a href="http://zhangsan.github.io">zhangsan.github.io</a>，只有这样，将来要部署到GitHub Page的时候，才会被识别，<a href="http://xn--xxxx-4m5f354ev5p.github.io">也就是xxxx.github.io</a>，其中xxx就是你注册GitHub的用户名。</p><p>点击create repository。</p><h4 id="5-生成SSH添加到GitHub">5. 生成SSH添加到GitHub</h4><p>回到你的git bash中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p><p>可以用以下两条，检查一下你有没有输对</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config user.namegit config user.email</span><br></pre></td></tr></table></figure><p>然后输入下面的命令，创建SSH,一路回车就可以了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key<br>把你的id_rsa.pub里面的信息复制进去。</p><p>在gitbash中，查看是否成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h4 id="6-将hexo部署到GitHub">6. 将hexo部署到GitHub</h4><p>这一步，我们将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件_config.yml，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:  type: git  repo: https://github.com/**YourgithubName**/**YourgithubName**.github.io.git  branch: master</span><br></pre></td></tr></table></figure><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>其中 hexo clean清除了你之前生成的东西，也可以不加。<br>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>hexo deploy 部署文章，可以用hexo d缩写<br>此处命令可以用一条命令代替，然后等它全部执行完就部署到网站上了，不用在哪里等着输下一条命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>注意：第一次使用deploy时会让你你输入GitHub的username和password。</p><p>得到下图就说明部署成功了，过一会儿就可以在<a href="http://yourname.github.io">http://yourname.github.io</a> 这个网站看到你的博客了！！</p><h4 id="7-设置个人域名">7. 设置个人域名</h4><p>现在你的个人网站的地址是 <a href="http://yourname.github.io">yourname.github.io</a>，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><p>注册一个阿里云账户,在阿里云上买一个域名，我买的是 fangzh.top，各个后缀的价格不太一样，比如最广泛的.com就比较贵，看个人喜好咯。</p><p>你需要先去进行实名认证,然后在域名控制台中，看到你购买的域名。</p><p>点解析进去，添加解析。</p><p>其中，192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。<br>注意，解析线路选择默认，不要像我一样选境外。这个境外是后面来做国内外分流用的,在后面的博客中会讲到。记得现在选择默认！！</p><p>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名fangzh.top</p><p>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。</p><p>最后，在gitbash中，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p><p>接下来你就可以正式开始写文章了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new newpapername</span><br></pre></td></tr></table></figure><p>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再更新一下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>就可以看到更新了。</p><h4 id="8-其他设置">8. 其他设置</h4><p>指定服务器端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 5000</span><br></pre></td></tr></table></figure><h1>总结</h1><p>教程总体来说还是比较简单的，用心花费点时间就能搭建好。当然如果你有什么不理解的，可以通过在线聊天找到我！</p><h1>Reference</h1><ol><li><a href="http://hekun97@github.io/2020/02/16/shi-yong-hexo-da-jian-zi-ji-de-ge-ren-bo-ke-yi/index.html">使用Hexo搭建博客</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>transformer之BertModel</title>
      <link href="/2022/03/31/Notebooks/ComputerScience/Pytorch/2022-04-19-BertModel/"/>
      <url>/2022/03/31/Notebooks/ComputerScience/Pytorch/2022-04-19-BertModel/</url>
      
        <content type="html"><![CDATA[<h1>输出</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sequence_output = encoder_outputs[<span class="number">0</span>]</span><br><span class="line">    pooled_output = self.pooler(sequence_output) <span class="keyword">if</span> self.pooler <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> return_dict:</span><br><span class="line">        <span class="keyword">return</span> (sequence_output, pooled_output) + encoder_outputs[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> BaseModelOutputWithPoolingAndCrossAttentions(</span><br><span class="line">        last_hidden_state=sequence_output,</span><br><span class="line">        pooler_output=pooled_output,</span><br><span class="line">        past_key_values=encoder_outputs.past_key_values,</span><br><span class="line">        hidden_states=encoder_outputs.hidden_states,</span><br><span class="line">        attentions=encoder_outputs.attentions,</span><br><span class="line">        cross_attentions=encoder_outputs.cross_attentions,</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>默认输出为<br><code>sequence_output</code>:最后一层特征 output[0]<br><code>hidden_states</code>: 隐藏层特征 outputs[3]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hidden_states = outputs[<span class="number">3</span>]</span><br><span class="line">hidden_states = outputs[<span class="string">&quot;hidden_states&quot;</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> transformer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python中json文件的读写</title>
      <link href="/2022/03/31/Notebooks/ComputerScience/Language/Python/json-read-and-write/"/>
      <url>/2022/03/31/Notebooks/ComputerScience/Language/Python/json-read-and-write/</url>
      
        <content type="html"><![CDATA[<h2 id="输入json">输入json</h2><p>将json文件读取为dict类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/data.json&quot;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">  json_data = json.load(fp)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;这是文件中的json数据：&#x27;</span>,json_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;这是读取到文件数据的数据类型：&#x27;</span>, <span class="built_in">type</span>(json_data))</span><br></pre></td></tr></table></figure><h2 id="输出json">输出json</h2><h3 id="输出到文件">输出到文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dic=&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/output.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">json.dump(dic, f, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h3 id="输出到终端">输出到终端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(json.dumps(dic, sort_keys=<span class="literal">True</span>, indent=<span class="number">4</span>, separators=(<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)))</span><br></pre></td></tr></table></figure><h3 id="参数详解">参数详解</h3><ul><li>sort_keys：是否按照字典排序（a-z）输出，True代表是，False代表否。</li><li>indent=4：设置缩进格数，一般由于Linux的习惯，这里会设置为4。</li><li>separators：设置分隔符，在<code>dic = &#123;'a': 1, 'b': 2, 'c': 3&#125;</code>这行代码里可以看到冒号和逗号后面都带了个空格，这也是因为Python的默认格式也是如此，如果不想后面带有空格输出，那就可以设置成<code>separators=(',', ':')</code>，如果想保持原样，可以写成<code>separators=(', ', ': ')</code>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas常用用法</title>
      <link href="/2022/03/31/Notebooks/ComputerScience/Language/Python/pandas/"/>
      <url>/2022/03/31/Notebooks/ComputerScience/Language/Python/pandas/</url>
      
        <content type="html"><![CDATA[<h2 id="读取文件">读取文件</h2><h3 id="读取excel文件">读取excel文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(file_path, sheet_name)</span><br></pre></td></tr></table></figure><h3 id="读取csv文件">读取csv文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_csv(file_path)</span><br></pre></td></tr></table></figure><h2 id="写入文件">写入文件</h2><p>创建一个DataFrame对象，设置列名，data可为二维数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(data=<span class="literal">None</span>, columns = [<span class="string">&quot;disease&quot;</span>, <span class="string">&quot;relation&quot;</span>, <span class="string">&quot;object&quot;</span>])</span><br></pre></td></tr></table></figure><p>写入文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.to_csv(file_path, index = <span class="literal">False</span>, sep=<span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="循环迭代数据">循环迭代数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(df.shape[<span class="number">0</span>]):</span><br><span class="line">  data = df.loc[row, <span class="string">&quot;Month_No&quot;</span>] </span><br></pre></td></tr></table></figure><h2 id="尾部插入数据">尾部插入数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">s = pd.Series([<span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">12</span>])</span><br><span class="line">df = pd.DataFrame(s,columns=[<span class="string">&#x27;Month_No&#x27;</span>])</span><br><span class="line">df.insert(<span class="number">1</span>,<span class="string">&quot;No_of_days&quot;</span>,[<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">31</span>],<span class="literal">True</span>)<span class="comment"># 插入列</span></span><br><span class="line"><span class="built_in">print</span> (df)</span><br></pre></td></tr></table></figure><blockquote><pre><code>  Month_No  No_of_days   0         6          30   1         8          31   2         3          31   3         1          31   4        12          31</code></pre></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = df.append(&#123;<span class="string">&quot;Month_No&quot;</span>:<span class="number">7</span>,<span class="string">&quot;No_of_days&quot;</span>:<span class="number">31</span>&#125;,ignore_index=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><blockquote><pre><code>  Month_No  No_of_days   0         6          30   1         8          31   2         3          31   3         1          31   4        12          31  5         7          31</code></pre></blockquote><h3 id="concat插入">concat插入</h3><p>append方法已经废弃，推荐使用concat方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_tmp=pd.DataFrame([[<span class="number">7</span>,<span class="number">31</span>]], columns=[<span class="string">&quot;Month_No&quot;</span>, <span class="string">&quot;No_of_days&quot;</span>])</span><br><span class="line">df = pd.concat([df_tmp, df], ignore_index = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="修改列名">修改列名</h2><h3 id="暴力修改">暴力修改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.columns=[<span class="string">&#x27;MonthNo&#x27;</span>,<span class="string">&#x27;NoOfDays&#x27;</span>]  </span><br><span class="line">df</span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>MonthNo</th>      <th>NoOfDays</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>6</td>      <td>30</td>    </tr>    <tr>      <th>1</th>      <td>8</td>      <td>31</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>31</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>31</td>    </tr>    <tr>      <th>4</th>      <td>12</td>      <td>31</td>    </tr>  </tbody></table><h3 id="利用rename修改">利用rename修改</h3><p>注意：<code>inplace</code>参数不能省略</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.rename(columns=&#123;<span class="string">&#x27;MonthNo&#x27;</span>:<span class="string">&#x27;Month_No&#x27;</span>,<span class="string">&#x27;NoOfDays&#x27;</span>:<span class="string">&#x27;No_of_days&#x27;</span>&#125;,inplace=<span class="literal">True</span>) </span><br><span class="line">df</span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Month_No</th>      <th>No_of_days</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>6</td>      <td>30</td>    </tr>    <tr>      <th>1</th>      <td>8</td>      <td>31</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>31</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>31</td>    </tr>    <tr>      <th>4</th>      <td>12</td>      <td>31</td>    </tr>  </tbody></table># Reference<ol><li><a href="https://www.cnblogs.com/jm7612/p/12495020.html">pandas尾部追加行记录append</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人喜欢的hexo主题</title>
      <link href="/2022/03/31/Notebooks/ComputerScience/Tools/BlogWebsite/hexo-theme/"/>
      <url>/2022/03/31/Notebooks/ComputerScience/Tools/BlogWebsite/hexo-theme/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/themes/">Themes | Hexo</a></p><h1>butterfly</h1><p>install command:  <code>npm i hexo-theme-butterfly</code></p><p>upgrade:  <code>npm update hexo-theme-butterfly</code></p><p>[Demo&amp;Docs](<a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a>)</p><h2 id="推荐实例">推荐实例</h2><ul><li><a href="https://bravey.github.io">https://bravey.github.io</a></li></ul><h1>matery</h1><h3 id="install">install</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd themes</span><br><span class="line">git clone git@github.com:blinkfox/hexo-theme-matery.git</span><br><span class="line">mv hexo-theme-matery matery</span><br><span class="line">cd ../</span><br></pre></td></tr></table></figure><p>them copy it to theme folder</p><p><a href="https://github.com/blinkfox/hexo-theme-matery">Github</a></p><p><a href="http://blinkfox.com">Demo&amp;Docs</a></p><h1>yun</h1><p>install&amp;upgrade command: <code>npm install hexo-theme-yun@latest</code></p><p><a href="https://github.com/YunYouJun/hexo-theme-yun">Github</a></p><h2 id="推荐实例-2">推荐实例</h2><ul><li><a href="https://www.yunyoujun.cn/">https://www.yunyoujun.cn/</a></li></ul><h1>fluid</h1><p>install command</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-theme-fluid</span><br></pre></td></tr></table></figure><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">github</a></p><h1>Claudia</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd themes</span><br><span class="line">git clone git@github.com:Haojen/hexo-theme-Claudia.git</span><br><span class="line">mv hexo-theme-Claudia Claudia</span><br><span class="line">cd ../</span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://www.zhihu.com/question/24422335">https://www.zhihu.com/question/24422335</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>终端统计文件夹信息</title>
      <link href="/2022/03/30/Notebooks/ComputerScience/Linux/LinuxCmd/calc-file-size-and-num/"/>
      <url>/2022/03/30/Notebooks/ComputerScience/Linux/LinuxCmd/calc-file-size-and-num/</url>
      
        <content type="html"><![CDATA[<p><code>wc</code>命令参数</p><ul><li>-l：仅列出行</li></ul><h3 id="统计文件夹数量">统计文件夹数量</h3><p>包括子目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./ -type d |wc -l</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/26/hello-world/"/>
      <url>/2022/03/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><ol><li>111111</li><li>22222</li><li>33333</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>常用字体配置</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/CommonFont/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/CommonFont/</url>
      
        <content type="html"><![CDATA[<h1>常用字体配置</h1><h2 id="Hack-Nerd-Regular">Hack Nerd Regular</h2><p>终端必备字体</p><h3 id="Typora">Typora</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">--monospace</span>: <span class="string">&#x27;Hack Nerd Font Mono&#x27;</span>, <span class="string">&quot;DejaVu Sans Mono&quot;</span>, <span class="string">&#x27;Consolas&#x27;</span>, <span class="string">&quot;Lucida Console&quot;</span>, monospace;</span><br></pre></td></tr></table></figure><h3 id="Hyper">Hyper</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fontFamily: <span class="string">&#x27;Hack Nerd Font Mono, &quot;DejaVu Sans Mono&quot;, Consolas, &quot;Lucida Console&quot;, monospace&#x27;</span>,</span><br></pre></td></tr></table></figure><h3 id="VS-Code">VS Code</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hack Nerd <span class="attribute">Font</span> Mono, Monaco, &#x27;Courier New&#x27;, monospace</span><br></pre></td></tr></table></figure><h2 id="Monaco">Monaco</h2><p>适合英文显示的字体，iterm2默认字体</p><h3 id="Typora-2">Typora</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">--font-family</span>: -apple-system, BlinkMacSystemFont, <span class="string">&quot;Segoe UI&quot;</span>, Helvetica, <span class="string">&quot;Apple Color Emoji&quot;</span>, Arial, sans-serif, <span class="string">&quot;Segoe UI Emoji&quot;</span>, <span class="string">&quot;Segoe UI Symbol&quot;</span>;</span><br><span class="line"><span class="attr">--monospace</span>: <span class="string">&#x27;Monaco&#x27;</span>, <span class="string">&quot;DejaVu Sans Mono&quot;</span>, <span class="string">&#x27;Consolas&#x27;</span>, <span class="string">&quot;Lucida Console&quot;</span>, monospace;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--font-family);</span><br><span class="line">    -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--text-color);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关系数据库的基本使用</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/Database/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/Database/</url>
      
        <content type="html"><![CDATA[<h1>MySQL</h1><h2 id="安装">安装</h2><p><a href="https://www.cnblogs.com/alan-lin/p/9966917.html">Windows 安装并配置 MySQL 5.6/5.7</a></p><p><a href="https://blog.csdn.net/wudinaniya/article/details/82455431">windows上同时安装两个版本的mysql数据库</a></p><p><a href="https://dev.mysql.com/downloads/mysql/">mac版mysql下载地址</a></p><h3 id="ubunut安装mysql">ubunut安装mysql</h3><p><a href="https://blog.csdn.net/ac_dao_di/article/details/48932729">手动安装mysql5.6</a></p><p><a href="https://www.cnblogs.com/livelab/p/12808150.html">Mysql8</a></p><p><a href="https://www.iplayio.cn/post/9225021">如何从命令行管理MySQL数据库和用户</a></p><p><a href="https://www.cnblogs.com/lzwangshubo/p/9977997.html">安装MariaDB</a></p><p><a href="https://blog.csdn.net/silence_xiang/article/details/103472888">Mysql-mysql8创建用户用户并授权-远程访问</a></p><p><a href="https://www.cnblogs.com/xiaojf/p/11107934.html">远程主机无法访问</a></p><p><a href="https://blog.csdn.net/yeya24/article/details/81836218">修改字符集</a></p><h2 id="管理Mysql">管理Mysql</h2><h3 id="创建用户">创建用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> if <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">&#x27;fan&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;12121212&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="修改用户密码">修改用户密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;fanfan&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="授予数据库权限">授予数据库权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span><span class="operator">*</span>.<span class="operator">*</span><span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;fan&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>5.5本地访问需要单独添加localhost权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> fan<span class="variable">@localhost</span>; </span><br><span class="line">flush privileges; </span><br></pre></td></tr></table></figure><h3 id="访问数据库">访问数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 172.18.32.92 -u root -p</span><br></pre></td></tr></table></figure><h3 id="授予用户管理指定数据库权限">授予用户管理指定数据库权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> databaseName.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;zhuanzhi_shuqi&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h1>Reference</h1><p>[<a href="https://www.cnblogs.com/hxlinux/p/12900503.html">https://www.cnblogs.com/hxlinux/p/12900503.html</a>]</p><p><a href="https://www.cnblogs.com/yaradish/p/10078640.html">查看mysql数据库是否存在某张表及某张表是否存在某个字段</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git的常用命令</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/Git/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/Git/</url>
      
        <content type="html"><![CDATA[<h1>添加提交</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;xxx&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h1>从本地创建仓库并上传</h1><p>简易的命令行入门教程:<br>Git 全局设置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;ConanSteve&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;270523124@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>创建 git 仓库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> gittest</span><br><span class="line"><span class="built_in">cd</span> gittest</span><br><span class="line">git init</span><br><span class="line"><span class="built_in">touch</span> README.md</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin git@gitee.com:conansteve/gittest.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>已有仓库?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> existing_git_repo</span><br><span class="line">git remote add origin git@gitee.com:conansteve/gittest.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>以后可以直接 <code>git push</code>当前分支到远端</p><h1>stash 暂存</h1><ol><li><strong>git stash save “save message”</strong>  : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</li><li><strong>git stash list</strong>  ：查看stash了哪些存储</li><li>git stash show ：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}</li><li>git stash show -p : 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show  stash@{$num}  -p ，比如第二个：git stash show  stash@{1}  -p</li><li>git stash apply :应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，git stash apply stash@{$num} ， 比如第二个</li><li><strong>git stash pop</strong> ：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop stash@{$num} ，比如应用并删除第二个：git stash pop stash@{1}</li><li>git stash drop stash@{$num} ，丢弃存储，从列表中删除这个存储</li><li>git stash clear ：删除所有缓存的stash</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash save <span class="string">&quot;xxx&quot;</span></span><br><span class="line">git checkout BRANCH_NAME</span><br><span class="line">//do ...</span><br></pre></td></tr></table></figure><h1>修改分支名</h1><p><strong>The default branch has been renamed!</strong></p><p>main is now named master</p><p>If you have a local clone, you can update it by running the following commands.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git branch -m main master</span><br><span class="line">git fetch origin</span><br><span class="line">git branch -u origin/master master</span><br><span class="line">git remote set-head origin -a</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011536538.png" alt="image-20220329123703987"></p><h1>本地库与远程库关联</h1><p>本来只在本地使用git，有了很多条提交之后，希望保存到远程上：先在github或者gitlab上面创建一个空库，记住什么文件也不要创建</p><p>查看本地库与远程库映射</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -vv</span><br></pre></td></tr></table></figure><p>建立当前分支与远程分支的映射关系:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -u origin/master</span><br></pre></td></tr></table></figure><p>或者使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to origin/master</span><br></pre></td></tr></table></figure><h1>疑难杂症</h1><h2 id="git-error-remote-origin-already-exists">git error: remote origin already exists.</h2><p>解决方案</p><ol><li><p>先删除远程 Git 仓库<br><code>$ git remote rm origin</code></p></li><li><p>再添加远程 Git 仓库</p></li></ol><p><code>git remote add origin xxx</code>（xxx是克隆地址）</p><h2 id="Git-status显示乱码">Git status显示乱码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure><h1>参考文献</h1><ol><li><a href="https://segmentfault.com/a/1190000012081004">git本地仓库关联远程仓库的方法</a></li><li><a href="https://www.cnblogs.com/MrSaver/p/12127996.html">合并本地仓库与远程仓库</a></li><li><a href="https://blog.csdn.net/qq_32035241/article/details/105013510">git 使用强制本地仓库和远程仓库合并</a></li><li><a href="https://www.jianshu.com/p/5adc552323ca">git 查看所有远程分支以及同步</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图数据库的基本使用</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/GraphDatabase/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/GraphDatabase/</url>
      
        <content type="html"><![CDATA[<h1>简介</h1><p>图数据与关系数据库对比</p><table><thead><tr><th><strong>分类</strong></th><th>模型</th><th>优势</th><th>劣势</th><th>举例</th></tr></thead><tbody><tr><td>关系数据库</td><td>表结构</td><td>数据高度结构化，一致性强，软件成熟度高</td><td>面向多跳的关联关系查询低效或不支持</td><td>MySql Oracle SqlServer</td></tr><tr><td>图数据库</td><td>图结构</td><td>针对关联关系的建模，操作非常高效</td><td>高度结构化的数据处理能力不及关系型数据库</td><td>Neo4j TuGraph OrientDB</td></tr></tbody></table><blockquote><p>面对海量数据的存储和处理问题，传统的关系数据库已经无法满足大部分的日常数据储存的需求。图数据库技术可以将关系信息储存为实体、灵活拓展数据模型。由于提供了对关联数据最直接的表达，以及图模型对异构数据天然的包容力。未来，图数据库技术必将成为最为热点的技术之一，为企业存储和分析大规模图数据提供强有力的支持。</p></blockquote><h1>Orient DB</h1><p><a href="https://orientdb.org/">官网org</a></p><p>官方<a href="http://orientdb.com/docs/3.0.x/">DOC</a></p><p><a href="https://www.tutorialspoint.com/orientdb/index.htm">English tutorial</a></p><p><a href="https://www.yiibai.com/orientdb/orientdb_overview.html">OrientDB 中文教程</a></p><p><a href="https://www.w3cschool.cn/orientdb/orientdb_installation.html">中文教程 2</a></p><h1>gremlim</h1><h2 id="简介">简介</h2><p>什么是Gremlin？</p><p>Gremlin是一种图数据遍历的接口封装或者框架，类似于关系数据库中的Mybatis，将对于书库的访问操作封装到一套接口当中，使应用开发人员不用关心底层数据库的操作。</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011535193.jpg" alt=""></p><h2 id="连接">连接</h2><p><a href="http://tinkerpop.apache.org/docs/current/reference/">doc</a></p><p><a href="http://tinkerpop-gremlin.cn/">gremlin中文文档</a></p><p><a href="https://help.aliyun.com/knowledge_detail/92204.html">gremlin安装</a></p><p><a href="https://blog.csdn.net/javeme/article/details/82631834">深入学习图数据库语言Gremlin 系列文章链接汇总</a></p><ul><li>通过配置文件连接任意图数据库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:remote connect tinkerpop.server conf/remote.yaml session</span><br><span class="line">:remote console</span><br><span class="line">connect remote:localhost/demodb admin admin</span><br></pre></td></tr></table></figure><ul><li>通过接口连接OrientDB</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g = org.apache.tinkerpop.gremlin.orientdb.OrientGraph.open(&quot;remote:localhost/mkg&quot;,&quot;admin&quot;,&quot;admin&quot;);</span><br><span class="line">gt = g.traversal()</span><br></pre></td></tr></table></figure><h2 id="管理">管理</h2><p><a href="https://blog.csdn.net/weixin_33895695/article/details/88678857?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4.control">gremlin入门</a></p><p><a href="https://blog.csdn.net/weixin_42076409/article/details/80856911">gremlin语句详解</a></p><h1>管理</h1><p>OrientDB控制台模式：执行<code>sh console.sh</code> ，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connect remote:localhost/test admin admin</span><br></pre></td></tr></table></figure><p>然后执行SQL语句</p><h2 id="CRUD">CRUD</h2><ul><li>创建实体类</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> class Entity extends V</span><br><span class="line"><span class="keyword">create</span> property Entity.name String</span><br></pre></td></tr></table></figure><ul><li>插入记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> CLASS Customer </span><br><span class="line"><span class="keyword">CREATE</span> PROPERTY Customer.id <span class="type">integer</span> </span><br><span class="line"><span class="keyword">CREATE</span> PROPERTY Customer.name String </span><br><span class="line"><span class="keyword">CREATE</span> PROPERTY Customer.age <span class="type">integer</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Customer (id, name, age) <span class="keyword">VALUES</span> (<span class="number">01</span>,<span class="string">&#x27;satish&#x27;</span>, <span class="number">25</span>)</span><br></pre></td></tr></table></figure><ul><li>查询实体</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">from</span> V limit <span class="number">5</span> # <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name limit <span class="number">5</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">from</span> #<span class="number">34</span>:<span class="number">823</span>  # <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>删除实体记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> VERTEX <span class="keyword">from</span> x_class_name</span><br></pre></td></tr></table></figure><ul><li>删除边</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> edge where @<span class="keyword">class</span>=<span class="string">&#x27;belong_to&#x27;</span></span><br></pre></td></tr></table></figure><h1>实战</h1><p>将关系数据库数据导入图数据库</p><h1>PythonGremlin</h1><h2 id="Basic">Basic</h2><p>如何修改pythongremlin连接指定的数据库？</p><p>修改 ‘config’ 目录下的demodb.properties文件中的 ‘orient-db-name’的值即可</p><blockquote><p>注意：必须先将数据库关闭，再改文件，再重新启动数据库</p></blockquote><h2 id="CRUD-2">CRUD</h2><p><a href="https://www.it610.com/article/1280837636361043968.htm">python 操作gremlin</a></p><p><a href="https://pypi.org/project/gremlinpython/">gremlinpython包使用</a></p><p><a href="https://blog.csdn.net/jackandsnow/article/details/100572659">gremlin_python使用及增删查改方法封装</a></p><h2 id="Demo">Demo</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gremlinpython==3.5.0</span></span><br><span class="line"><span class="keyword">from</span> gremlin_python <span class="keyword">import</span> statics</span><br><span class="line"><span class="keyword">from</span> gremlin_python.structure.graph <span class="keyword">import</span> Graph</span><br><span class="line"><span class="keyword">from</span> gremlin_python.process.graph_traversal <span class="keyword">import</span> __</span><br><span class="line"><span class="keyword">from</span> gremlin_python.driver.driver_remote_connection <span class="keyword">import</span> DriverRemoteConnection</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">graph = Graph()</span><br><span class="line">connection = DriverRemoteConnection(<span class="string">&#x27;ws://localhost:8182/gremlin&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, username=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">g = graph.traversal().withRemote(connection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process</span>():</span><br><span class="line">    read_xlsx()</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addV</span>(<span class="params">vertexType, name</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> == <span class="built_in">len</span>(g.V().hasLabel(vertexType).has(<span class="string">&quot;name&quot;</span>,name).valueMap().toList()):</span><br><span class="line">        vertHead = g.addV(vertexType).<span class="built_in">property</span>(<span class="string">&quot;name&quot;</span>,name).<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addE</span>(<span class="params">edgeType, vheadId, vTailId, properties=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    add edge</span></span><br><span class="line"><span class="string">    :param properties: property dict, like &#123;&#x27;p1&#x27;: &#x27;value1&#x27;, &#x27;p2&#x27;: &#x27;value2&#x27;&#125;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    index_key = vheadId+vTailId</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> == <span class="built_in">len</span>(g.E().hasLabel(edgeType).has(<span class="string">&quot;index_key&quot;</span>,index_key).valueMap().toList()):</span><br><span class="line">        edge = g.V(vTailId).as_(<span class="string">&quot;t&quot;</span>).V(vheadId).addE(edgeType).to(<span class="string">&quot;t&quot;</span>).<span class="built_in">property</span>(<span class="string">&quot;index_key&quot;</span>,index_key)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> properties:</span><br><span class="line">            <span class="keyword">for</span> key <span class="keyword">in</span> properties.keys():</span><br><span class="line">                edge.<span class="built_in">property</span>(key, properties.get(key))        </span><br><span class="line">        edge.<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_vertex_id</span>(<span class="params">vertexType, name</span>):</span><br><span class="line">    <span class="keyword">return</span> g.V().hasLabel(vertexType).has(<span class="string">&quot;name&quot;</span>,name).<span class="built_in">id</span>().<span class="built_in">next</span>()[<span class="string">&quot;@value&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_xlsx</span>():</span><br><span class="line">    data = xlrd.open_workbook(<span class="string">&quot;triple0707.xlsx&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#handle first sheet</span></span><br><span class="line">    table0 = data.sheets()[<span class="number">0</span>]</span><br><span class="line">    nrow0 = table0.nrows</span><br><span class="line">    <span class="keyword">for</span> row_index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,nrow0-<span class="number">1</span>):</span><br><span class="line">        olympics = table0.cell_value(row_index,<span class="number">0</span>)</span><br><span class="line">        tech_name = table0.cell_value(row_index,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        addV(<span class="string">&quot;olympics&quot;</span>, olympics)</span><br><span class="line">        addV(<span class="string">&quot;technology&quot;</span>,tech_name)</span><br><span class="line">        vHeadId = get_vertex_id(<span class="string">&quot;olympics&quot;</span>, olympics)</span><br><span class="line">        vTailId = get_vertex_id(<span class="string">&quot;technology&quot;</span>, tech_name)</span><br><span class="line">        addE(<span class="string">&quot;apply&quot;</span>, vHeadId, vTailId)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#handle second sheet</span></span><br><span class="line">    table1 = data.sheets()[<span class="number">1</span>]</span><br><span class="line">    nrow1 = table1.nrows</span><br><span class="line">    <span class="keyword">for</span> row_index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,nrow0-<span class="number">1</span>):</span><br><span class="line">        tech_name = table1.cell_value(row_index,<span class="number">0</span>)</span><br><span class="line">        olympics_aspect_2 = table1.cell_value(row_index,<span class="number">2</span>)</span><br><span class="line">        olympics_aspect_1 = table1.cell_value(row_index,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        addV(<span class="string">&quot;technology&quot;</span>,tech_name)</span><br><span class="line">        addV(<span class="string">&quot;olympics_aspect_2&quot;</span>, olympics_aspect_2)</span><br><span class="line">        addV(<span class="string">&quot;olympics_aspect_1&quot;</span>, olympics_aspect_1)</span><br><span class="line">        vHeadId = get_vertex_id(<span class="string">&quot;technology&quot;</span>, tech_name)</span><br><span class="line">        vTailId = get_vertex_id(<span class="string">&quot;olympics_aspect_2&quot;</span>, olympics_aspect_2)</span><br><span class="line">        addE(<span class="string">&quot;support&quot;</span>, vHeadId, vTailId)</span><br><span class="line"></span><br><span class="line">        vHeadId = vTailId</span><br><span class="line">        vTailId = get_vertex_id(<span class="string">&quot;olympics_aspect_1&quot;</span>, olympics_aspect_1)</span><br><span class="line">        addE(<span class="string">&quot;contain&quot;</span>, vHeadId, vTailId)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># handle third sheet</span></span><br><span class="line">    table2 = data.sheets()[<span class="number">2</span>]</span><br><span class="line">    nrow2 = table2.nrows</span><br><span class="line">    <span class="keyword">for</span> row_index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,nrow2-<span class="number">1</span>):</span><br><span class="line">        tech_name = table2.cell_value(row_index,<span class="number">0</span>)</span><br><span class="line">        domain_name = table2.cell_value(row_index,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        addV(<span class="string">&quot;technology&quot;</span>, tech_name)</span><br><span class="line">        addV(<span class="string">&quot;technology_domain&quot;</span>,domain_name)</span><br><span class="line">        vHeadId = get_vertex_id(<span class="string">&quot;technology&quot;</span>, tech_name)</span><br><span class="line">        vTailId = get_vertex_id(<span class="string">&quot;technology_domain&quot;</span>, domain_name)</span><br><span class="line">        addE(<span class="string">&quot;belong_to&quot;</span>, vHeadId, vTailId)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># handle fourth sheet</span></span><br><span class="line">    table3 = data.sheets()[<span class="number">3</span>]</span><br><span class="line">    nrow3 = table3.nrows</span><br><span class="line">    <span class="keyword">for</span> row_index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,nrow3-<span class="number">1</span>):</span><br><span class="line">        domain_name = table3.cell_value(row_index,<span class="number">0</span>)</span><br><span class="line">        olympics = table3.cell_value(row_index,<span class="number">2</span>)</span><br><span class="line">        weight = table3.cell_value(row_index,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        addV(<span class="string">&quot;technology_domain&quot;</span>,domain_name)</span><br><span class="line">        addV(<span class="string">&quot;olympics&quot;</span>, olympics)</span><br><span class="line">        vHeadId = get_vertex_id(<span class="string">&quot;technology_domain&quot;</span>, domain_name)</span><br><span class="line">        vTailId = get_vertex_id(<span class="string">&quot;olympics&quot;</span>, olympics)</span><br><span class="line">        addE(<span class="string">&quot;support&quot;</span>, vHeadId, vTailId, properties=&#123;<span class="string">&quot;weight&quot;</span>:weight&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    process()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    connection.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gremlinpython==3.5.0</span></span><br><span class="line"><span class="keyword">from</span> gremlin_python <span class="keyword">import</span> statics</span><br><span class="line"><span class="keyword">from</span> gremlin_python.structure.graph <span class="keyword">import</span> Graph</span><br><span class="line"><span class="keyword">from</span> gremlin_python.process.graph_traversal <span class="keyword">import</span> __</span><br><span class="line"><span class="keyword">from</span> gremlin_python.driver.driver_remote_connection <span class="keyword">import</span> DriverRemoteConnection</span><br><span class="line"></span><br><span class="line">graph = Graph()</span><br><span class="line">connection = DriverRemoteConnection(<span class="string">&#x27;ws://localhost:8182/gremlin&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, username=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">g = graph.traversal().withRemote(connection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wiping_out_graph</span>():</span><br><span class="line">    <span class="built_in">print</span>(g.V().count().<span class="built_in">next</span>())</span><br><span class="line">    <span class="built_in">print</span>(g.E().count().<span class="built_in">next</span>())</span><br><span class="line">    g.V().drop().hasNext()</span><br><span class="line">    g.E().drop().hasNext()</span><br><span class="line">    <span class="built_in">print</span>(g.V().count().<span class="built_in">next</span>())</span><br><span class="line">    <span class="built_in">print</span>(g.E().count().<span class="built_in">next</span>())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;graph cleared!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process</span>():</span><br><span class="line">    <span class="comment"># test_addV()</span></span><br><span class="line">    test_addE()</span><br><span class="line">    <span class="comment"># wiping_out_graph()</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;count of vertex:&quot;</span>+<span class="built_in">str</span>(g.V().count().<span class="built_in">next</span>()))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;count of edge:&quot;</span>+<span class="built_in">str</span>(g.E().count().<span class="built_in">next</span>()))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_vertex</span>(<span class="params">label, filters = <span class="literal">None</span>, properties=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    add vertex</span></span><br><span class="line"><span class="string">    :param label: label, type: str</span></span><br><span class="line"><span class="string">    :param filters: filters , type: dict</span></span><br><span class="line"><span class="string">    :param properties: property dict, like &#123;&#x27;p1&#x27;: &#x27;value1&#x27;, &#x27;p2&#x27;: &#x27;value2&#x27;&#125;</span></span><br><span class="line"><span class="string">    :return: vertex, Vertex(id, label)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    travel = g.V().hasLabel(label)</span><br><span class="line">    <span class="keyword">if</span> filters:</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> filters.keys():</span><br><span class="line">            travel = travel.has(key, filters.get(key))</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> == travel.count().<span class="built_in">next</span>():</span><br><span class="line">        travel = g.addV(label)</span><br><span class="line">        <span class="keyword">if</span> properties:</span><br><span class="line">            <span class="keyword">for</span> key <span class="keyword">in</span> properties.keys():</span><br><span class="line">                travel.<span class="built_in">property</span>(key, properties.get(key))</span><br><span class="line">        <span class="keyword">return</span> travel.<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_edge</span>(<span class="params">label, vheadId, vTailId, properties=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    add edge</span></span><br><span class="line"><span class="string">    :param properties: property dict, like &#123;&#x27;p1&#x27;: &#x27;value1&#x27;, &#x27;p2&#x27;: &#x27;value2&#x27;&#125;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    index_key = vheadId+vTailId</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> == g.E().hasLabel(label).has(<span class="string">&quot;index_key&quot;</span>,index_key).count().<span class="built_in">next</span>():</span><br><span class="line">        edge = g.V(vTailId).as_(<span class="string">&quot;t&quot;</span>).V(vheadId).addE(label).to(<span class="string">&quot;t&quot;</span>).<span class="built_in">property</span>(<span class="string">&quot;index_key&quot;</span>,index_key)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> properties:</span><br><span class="line">            <span class="keyword">for</span> key <span class="keyword">in</span> properties.keys():</span><br><span class="line">                edge.<span class="built_in">property</span>(key, properties.get(key))        </span><br><span class="line">        edge.<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drop_vertex</span>(<span class="params">v_id=<span class="literal">None</span>, label=<span class="literal">None</span>, properties=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    drop all vertex or specific vertex</span></span><br><span class="line"><span class="string">    :param v_id: long vertex id or Vertex(id, label)</span></span><br><span class="line"><span class="string">    :param label: label, type: str</span></span><br><span class="line"><span class="string">    :param properties: property list, like [&#x27;p1&#x27;, &#x27;p2&#x27;, &#123;&#x27;p3&#x27;: &#x27;value&#x27;&#125;]</span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    travel = g.V()</span><br><span class="line">    <span class="keyword">if</span> v_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        travel = travel.hasId(v_id).<span class="built_in">next</span>()</span><br><span class="line">    <span class="keyword">if</span> label:</span><br><span class="line">        travel = travel.hasLabel(label)</span><br><span class="line">    <span class="keyword">if</span> properties:</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> properties:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(p, <span class="built_in">dict</span>):</span><br><span class="line">                <span class="keyword">for</span> key <span class="keyword">in</span> p.keys():</span><br><span class="line">                    travel = travel.has(key, p.get(key))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                travel = travel.has(p)</span><br><span class="line">    travel.drop().hasNext()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drop_edge</span>(<span class="params">e_id=<span class="literal">None</span>, label=<span class="literal">None</span>, properties=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    drop all edges or specific edge</span></span><br><span class="line"><span class="string">    :param e_id: edge id, type str</span></span><br><span class="line"><span class="string">    :param label: label, type: str</span></span><br><span class="line"><span class="string">    :param properties: property list, like [&#x27;p1&#x27;, &#x27;p2&#x27;, &#123;&#x27;p3&#x27;: &#x27;value&#x27;&#125;]</span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    travel = g.E()</span><br><span class="line">    <span class="keyword">if</span> e_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        travel = travel.hasId(e_id)</span><br><span class="line">    <span class="keyword">if</span> label:</span><br><span class="line">        travel = travel.hasLabel(label)</span><br><span class="line">    <span class="keyword">if</span> properties:</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> properties:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(p, <span class="built_in">dict</span>):</span><br><span class="line">                <span class="keyword">for</span> key <span class="keyword">in</span> p.keys():</span><br><span class="line">                    travel = travel.has(key, p.get(key))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                travel = travel.has(p)</span><br><span class="line">    travel.drop().hasNext()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_vertex_id</span>(<span class="params">label, properties=<span class="literal">None</span></span>):</span><br><span class="line">    travel = g.V().hasLabel(label)</span><br><span class="line">    <span class="keyword">if</span> properties:</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> properties.keys():</span><br><span class="line">            travel = travel.has(key, properties.get(key))</span><br><span class="line">    <span class="keyword">return</span> travel.<span class="built_in">id</span>().<span class="built_in">next</span>()[<span class="string">&quot;@value&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_addV</span>():</span><br><span class="line">    add_vertex(<span class="string">&quot;person&quot;</span>,filters=&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Bob&quot;</span>&#125;, properties = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">15</span>, <span class="string">&quot;gender&quot;</span>: <span class="string">&quot;male&quot;</span>&#125;)</span><br><span class="line">    add_vertex(<span class="string">&quot;person&quot;</span>,filters=&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>&#125;, properties = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">15</span>, <span class="string">&quot;gender&quot;</span>: <span class="string">&quot;male&quot;</span>&#125;)</span><br><span class="line">    <span class="comment"># drop_vertex(label = &quot;person&quot;,properties=[&#123;&quot;name&quot;: &quot;Bob&quot;&#125;])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_addE</span>():</span><br><span class="line">    vHeadId = get_vertex_id(<span class="string">&quot;person&quot;</span>, properties = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Bob&quot;</span>&#125; )</span><br><span class="line">    vTailId = get_vertex_id(<span class="string">&quot;person&quot;</span>, properties = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>&#125; )</span><br><span class="line">    add_edge(<span class="string">&quot;friend&quot;</span>,vHeadId,vTailId)</span><br><span class="line">    <span class="comment"># drop_edge(e_id=&#x27;#137:0&#x27;)</span></span><br><span class="line">    <span class="comment"># drop_edge(label=&#x27;friend&#x27;,properties=[&#123;&quot;index_key&quot;:vHeadId+vTailId&#125;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># process()</span></span><br><span class="line"><span class="comment"># connection.close()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    process()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    connection.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jupyter入门</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/Jupyter/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/Jupyter/</url>
      
        <content type="html"><![CDATA[<h3 id="入门">入门</h3><p><a href="https://www.jianshu.com/p/91365f343585">Jupyter Notebook介绍、安装及使用教程</a></p><h3 id="安装-2">安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install jupyter notebook</span><br></pre></td></tr></table></figure><h3 id="进入笔记">进入笔记</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><h3 id="增删虚拟环境">增删虚拟环境</h3><blockquote><p><a href="https://blog.csdn.net/wj1066/article/details/72891667">Jupyter Notebook 增加kernel的方法</a><br><a href="https://blog.csdn.net/liuestcjun/article/details/101981269">Jupyter Notebook导入和删除虚拟环境</a><br><a href="https://blog.csdn.net/liminwang0311/article/details/86565111">在Jupyter Notebook中选择特定的虚拟环境</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda install -n pytorch ipykernel</span><br><span class="line">conda activate pytorch</span><br><span class="line">python -m ipykernel install --user --name pytorch --display-name pytorch3.7</span><br></pre></td></tr></table></figure><p>删除 <code>jupyter kernelspec remove pytorch</code></p><p>显示列表 <code>jupyter kernelspec list</code></p><h1>Reference</h1><p><a href="https://blog.csdn.net/weixin_41923658/article/details/103356336?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">关于 Jupyter Notebook 中 No module named ‘torch’ 的解决办法</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SSH</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/SSH/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/SSH/</url>
      
        <content type="html"><![CDATA[<h2 id="自动生成key">自动生成key</h2><ul><li>linux/mac： <code>ssh-keygen -t rsa</code>            <code>ssh-keygen -t rsa -b 4096 </code></li><li>windows：<code>ssh-keygen.exe -t rsa</code></li></ul><h2 id="拷贝key到主机">拷贝key到主机</h2><p>linux:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i  &quot;key_path&quot;  &quot;user_name&quot;``@ip_address</span><br><span class="line">ssh-copy-id -i .ssh/id_rsa.pub zhangfan@172.18.32.92</span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><p><a href="https://blog.csdn.net/qq_38476684/article/details/100028507">vscode remote ssh 多重跳接配置内网穿透</a></p></li><li><p><a href="https://blog.csdn.net/dcz1994/article/details/103120254?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.control">vscode通过跳板机(堡垒机)连接remote服务器</a></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装Homebrew</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/install-hombrew-on-mac/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/install-hombrew-on-mac/</url>
      
        <content type="html"><![CDATA[<h1>安装homebrew</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">已废弃</span></span><br><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建议</span></span><br><span class="line">/bin/bash -c &quot;$(curl -fsSL https://gitee.com/ineo6/homebrew-install/raw/master/install.sh)&quot;</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure><h1>Reference</h1><p><a href="https://cloud.tencent.com/developer/article/1853162">如何安装homebrew</a></p><p><a href="https://blog.csdn.net/sinat_38184748/article/details/114115441">配置环境变量</a></p><p><a href="https://blog.csdn.net/NBDwo/article/details/121322116">M1芯片的MacOS 上安装wget的具体过程-图文教程</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/">清华镜像安装</a></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终端工具配置</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/terminal-configuration/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/terminal-configuration/</url>
      
        <content type="html"><![CDATA[<h1>终端工具配置</h1><h1>zsh安装</h1><p>如果你用 Mac，就可以直接看下一节</p><p>如果你用 Redhat Linux，执行：<code>sudo yum install zsh</code></p><p>如果你用 Ubuntu Linux，执行：<code>sudo apt-get install zsh</code></p><p>如果你用 Windows……去洗洗睡吧。</p><p>安装完成后设置当前用户使用 zsh：<code>chsh -s /bin/zsh</code>，根据提示输入当前用户的密码就可以了。</p><h1>oh-my-zsh</h1><p>oh-my-zsh可能会影响速度，所以，可以不安装，如果不安装，插件的安装，建议使用”一步安装“</p><p>安装「oh my zsh」可以自动安装也可以手动安装。</p><p>自动安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><p>手动安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</span><br><span class="line"><span class="built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br></pre></td></tr></table></figure><p>都不复杂，安装完成之后退出当前会话重新打开一个终端窗口，你就可以见到这个彩色的提示了：</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011530511.png" alt=""></p><p><strong>默认推荐配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export ZSH=&quot;$HOME/.oh-my-zsh&quot;</span><br><span class="line">ZSH_THEME=&quot;robbyrussell&quot;</span><br><span class="line">source $ZSH/oh-my-zsh.sh</span><br><span class="line">plugins=(git history vscode sublime sudo)</span><br></pre></td></tr></table></figure><h1>主题安装</h1><h2 id="Powerlevel10k">Powerlevel10k</h2><p>官网：<a href="https://github.com/romkatv/powerlevel10k">https://github.com/romkatv/powerlevel10k</a></p><p>可以选择pure主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git ~/.zsh/plugins/powerlevel10k</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source ~/.zsh/plugins/powerlevel10k/powerlevel10k.zsh-theme&#x27;</span> &gt;&gt;~/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="p10k-configure">p10k configure</h3><h3 id="安装Hack-Nerd字体"><a href="https://www.nerdfonts.com/font-downloads">安装Hack Nerd字体</a></h3><h3 id="VSCode字体设置">VSCode字体设置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Hack</span> Nerd Font Mono, Monaco, <span class="string">&#x27;Courier New&#x27;</span>, monospace</span><br></pre></td></tr></table></figure><h2 id="Pure">Pure</h2><p>官网：<a href="https://github.com/sindresorhus/pure">https://github.com/sindresorhus/pure</a></p><p>建议通过使用Powerlevel10k安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install pure</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/URmyLucky/pure2020.git ~/.zsh/plugins/pure</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;(q-)PWD&#125;</span>/.zsh/plugins/pure/pure.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>.zshrc文件中添加</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">autoload -U promptinit; promptinit</span><br><span class="line">prompt pure</span><br></pre></td></tr></table></figure><h1>必备插件安装</h1><h2 id="安装自动补全功能">安装自动补全功能</h2><h3 id="方法一">方法一</h3><p>使用 <code>zsh</code> 我认为第一个吸引我的重要插件就是 <a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a>。它会自动为你的终端命令提供补全建议，让你能更加快速的完成命令输入，有了它，你再也不用一遍遍的按 <code>tab</code> 来加快你的命令输入了。</p><p><code>zsh-autosuggestions</code> 安装文档你可以点击这个<a href="https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md">链接</a> 进入查看，比如使用 Git 安装步骤如下：</p><p>使用 Git 把项目从仓库 Clone 下来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/plugins/zsh-autosuggestions</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br></pre></td></tr></table></figure><p>或者手动将以下内容添加到 <code>.zshrc</code> 文件内：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure><p>生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>重新开启终端会话，你就可以享受 <code>zsh-autosuggestions</code> 给你带来的便利了。</p><h4 id="一步安装：">一步安装：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/plugins/zsh-autosuggestions</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line">//gitee</span><br><span class="line">git <span class="built_in">clone</span> git@gitee.com:lhaisu/zsh-autosuggestions.git ~/.zsh/plugins/zsh-autosuggestions</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="方法二：推荐">方法二：推荐</h3><ol><li>把插件仓库克隆到<code>$ZSH_CUSTOM/plugins</code> (默认位置是 ~/.oh-my-zsh/custom/plugins)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://dev.azure.com/conansteve/87be1d78-05d4-41bd-87b2-a023d463dcd2/_apis/git/repositories/075c6005-9f0d-4b8c-97a7-60d87486d3f4/items?path=%2F1648455923125_2748.png&versionDescriptor%5BversionOptions%5D=0&versionDescriptor%5BversionType%5D=0&versionDescriptor%5Bversion%5D=master&resolveLfs=true&%24format=octetStream&api-version=5.0" style="zoom:50%;" /><ol><li>设置<code>~/.zshrc</code>，把<code>zsh-autosuggestions</code>添加到 Oh My Zsh 要加载的插件列表中</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git zsh-autosuggestions)</span><br></pre></td></tr></table></figure><ol><li>使配置生效 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li></ol><h2 id="语法高亮插件">语法高亮插件</h2><p>安装zsh-syntax-highlighting语法高亮插件</p><p>官网：<a href="https://link.jianshu.com/?t=https://github.com/zsh-users/zsh-syntax-highlighting">https://github.com/zsh-users/zsh-syntax-highlighting</a></p><h3 id="一步安装：-2">一步安装：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.zsh/plugins/zsh-syntax-highlighting</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">//gitee</span><br><span class="line">git <span class="built_in">clone</span> git@gitee.com:jklash1996/zsh-syntax-highlighting.git ~/.zsh/plugins/zsh-syntax-highlighting</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="自动跳转插件autojump">自动跳转插件autojump</h2><p>地址：<a href="https://github.com/wting/autojump">https://github.com/wting/autojump</a></p><p>它的用法是输入 <code>j 目录名</code> 或 <code>j 目录名包含的字符</code>（这个目录必须是之前 cd 访问过的），就可直接切换到相应的目录。不用再各种<code>cd</code>啦～具体看下面截图示例。</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011530512.png" alt=""></p><h4 id="方法一：推荐">方法一：推荐</h4><ol><li><h5 id="Mac安装">Mac安装</h5></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install autojump</span><br></pre></td></tr></table></figure><blockquote><p>Add the following line to your ~/.bash_profile or ~/.zshrc file:<br><code> [ -f /opt/homebrew/etc/profile.d/autojump.sh ] &amp;&amp; . /opt/homebrew/etc/profile.d/autojump.sh</code><br>If you use the Fish shell then add the following line to your ~/.config/fish/config.fish:<br><code> [ -f /opt/homebrew/share/autojump/autojump.fish ]; and source /opt/homebrew/share/autojump/autojump.fish</code><br>Restart your terminal for the settings to take effect.</p></blockquote><ol><li><h5 id="Linux-一步安装">Linux 一步安装</h5></li></ol><p>首先下载 autojump 源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:wting/autojump.git ~/.zsh/plugins/autojump</span><br><span class="line"><span class="built_in">cd</span> ~/.zsh/plugins/autojump</span><br><span class="line">./install.py</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; source ~/.autojump/etc/profile.d/autojump.sh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@gitee.com:gentlecp/autojump.git ~/.zsh/plugins/autojump</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/.zsh/plugins/autojump</span><br><span class="line"></span><br><span class="line">./install.py</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; source ~/.autojump/etc/profile.d/autojump.sh&quot;</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-<span class="variable">$HOME</span>&#125;</span>/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>安装完成后，使用查看autojump版本。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>autojump --version</span><br><span class="line">autojump release-v21.<span class="number">1.2</span></span><br></pre></td></tr></table></figure><h2 id="colorls">colorls</h2><p>官网：<a href="https://github.com/athityakumar/colorls">https://github.com/athityakumar/colorls</a></p><h3 id="homebrew安装：">homebrew安装：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install ruby</span><br><span class="line">sudo gem install colorls</span><br></pre></td></tr></table></figure><h3 id="WSL-apt安装">WSL apt安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ruby-dev  //切记用官方源，阿里云源会出问题，会出错，其他源暂时没试过</span><br><span class="line">sudo gem install colorls</span><br></pre></td></tr></table></figure><h3 id="MacOS-13-6源码安装：">MacOS 13.6源码安装：</h3><p>安装ruby(version&gt;2.5)  <a href="https://www.ruby-lang.org/en/downloads/">https://www.ruby-lang.org/en/downloads/</a></p><p><a href="https://blog.csdn.net/baidu_38432732/article/details/106573806">源码安装ruby</a></p><p><a href="https://blog.csdn.net/baidu_38432732/article/details/106573806">https://blog.csdn.net/baidu_38432732/article/details/106573806</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/ruby-3.0.3</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br><span class="line">esource ~/.zshrc</span><br><span class="line">ruby -v</span><br><span class="line">gem install colorls</span><br></pre></td></tr></table></figure><p>如果安装colorls失败，需要安装openssl，命令为<code>brew install openssl@1.1</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">./config --prefix=<span class="regexp">/usr/</span>local/opt/openssl/</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br><span class="line">cd  ~<span class="regexp">/Desktop/</span>ruby-<span class="number">2.7</span><span class="number">.5</span>/  </span><br><span class="line"></span><br><span class="line"><span class="comment">//下面功能都是生成makefile</span></span><br><span class="line">./configure --prefix=<span class="regexp">/usr/</span>local/opt/ruby-<span class="number">2.7</span><span class="number">.5</span> --<span class="keyword">with</span>-openssl-dir=<span class="regexp">/usr/</span>local/opt/openssl</span><br><span class="line">./configure --prefix=<span class="regexp">/usr/</span>local/opt/ruby-<span class="number">2.7</span><span class="number">.5</span> --<span class="keyword">with</span>-openssl-include=<span class="regexp">/usr/</span>local/opt/openssl/include/ --<span class="keyword">with</span>-openssl-lib=<span class="regexp">/usr/</span>local/opt/openssl/lib</span><br><span class="line"><span class="comment">//测试成功</span></span><br><span class="line">cd ./ext/openssl/</span><br><span class="line">ruby extconf.<span class="property">rb</span> --prefix=<span class="regexp">/usr/</span>local/opt/ruby-<span class="number">2.7</span><span class="number">.5</span> --<span class="keyword">with</span>-openssl-include=<span class="regexp">/usr/</span>local/opt/openssl/include/ --<span class="keyword">with</span>-openssl-lib=<span class="regexp">/usr/</span>local/opt/openssl/lib</span><br><span class="line"><span class="comment">//end</span></span><br><span class="line"> sudo make </span><br><span class="line"> sudo make install</span><br></pre></td></tr></table></figure><p>将下面代码添加进.zshrc文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RUBY_HOME=/usr/local/opt/ruby-2.7.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$RUBY_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=“RUBY_HOME/lib”</span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=“RUBY_HOME/include”</span><br></pre></td></tr></table></figure><h3 id="别名配置文件">别名配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># colorls别名start</span></span><br><span class="line"><span class="comment"># --sd 排序 </span></span><br><span class="line"><span class="comment"># --gs git状态 Shows git status for each entry</span></span><br><span class="line"><span class="comment"># -r(or)  --report 显示报告</span></span><br><span class="line"><span class="comment"># -d (or) --dirs : Shows only directories</span></span><br><span class="line"><span class="comment"># -f (or) --files : Shows only files</span></span><br><span class="line"><span class="comment"># -h (or) --help : Prints a very helpful help menu</span></span><br><span class="line"><span class="comment"># --sd (or) --sort-dirs or --group-directories-first : Shows directories first, followed by files</span></span><br><span class="line"><span class="built_in">alias</span> lla=<span class="string">&#x27;colorls -lA --sd --sf --gs --group-directories-first&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">&#x27;colorls --sd --gs&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> lsa=<span class="string">&#x27;colorls -A --sd --sf --gs --group-directories-first&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;colorls -l --gs --group-directories-first&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> lst2=<span class="string">&quot;colorls --tree=2&quot;</span></span><br><span class="line"><span class="built_in">alias</span> lst=<span class="string">&quot;colorls --tree=1&quot;</span></span><br><span class="line"><span class="comment"># colorls别名end</span></span><br></pre></td></tr></table></figure><h1>其他插件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git history vscode sublime sudo)</span><br></pre></td></tr></table></figure><ul><li>vscode</li><li>Sublime</li><li>Sudo</li></ul><h1>Hyper</h1><img src="https://dev.azure.com/conansteve/87be1d78-05d4-41bd-87b2-a023d463dcd2/_apis/git/repositories/075c6005-9f0d-4b8c-97a7-60d87486d3f4/items?path=%2F1648455784134_8713.png&versionDescriptor%5BversionOptions%5D=0&versionDescriptor%5BversionType%5D=0&versionDescriptor%5Bversion%5D=master&resolveLfs=true&%24format=octetStream&api-version=5.0" style="zoom:50%;" /><h2 id="安装方法">安装方法</h2><ol><li>通过Macwk网站安装</li><li>MacOS可通过homebrew安装 <code>brew install hyper</code></li><li><a href="https://hyper.is">官网下载</a></li></ol><h2 id="配置">配置</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">copyOnSelect:</span> <span class="literal">true</span>,<span class="regexp">//</span>自动复制被选择区域</span><br><span class="line"><span class="symbol">shell:</span> <span class="string">&#x27;zsh&#x27;</span>,</span><br><span class="line"><span class="symbol">fontFamily:</span> <span class="string">&#x27;Hack Nerd Font Mono, &quot;DejaVu Sans Mono&quot;, Consolas, &quot;Lucida Console&quot;, monospace&#x27;</span>,<span class="regexp">//</span>MacOS  <span class="symbol">https:</span>/<span class="regexp">/www.nerdfonts.com/font</span>-downloads</span><br><span class="line"><span class="string">&quot;editor.fontFamily&quot;</span>: <span class="string">&quot;Hack Nerd Font Mono,Lucida Console, &#x27; Lucida Console&#x27;, Lucida Console，&quot;</span>,  <span class="regexp">//windows</span></span><br></pre></td></tr></table></figure><p>这里我们会用到两个插件：</p><ul><li>hyper-snazzy：提供终端颜色主题</li><li>hyper-transparent-dynamic：提供终端窗口毛玻璃半透明效果</li></ul><p>具体配置代码如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins<span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;hyper-snazzy&quot;</span><span class="punctuation">,</span> <span class="string">&quot;hyper-transparent-dynamic&quot;</span><span class="punctuation">,</span> <span class="string">&quot;hyperpower&quot;</span><span class="punctuation">,</span><span class="string">&quot;hyper-pane&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="窗口透明度调整">窗口透明度调整</h3><p>同样是在 Hyper 的配置文件中，添加如下代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hyperTransparentDynamic<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    alpha<span class="punctuation">:</span> <span class="number">0.5</span> <span class="comment">// 默认 50% 透明度</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//节点config的子节点</span></span><br></pre></td></tr></table></figure><h2 id="主题">主题</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hyper i hyper-npm-theme</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011530513.png" alt="image (1642×986) (hyper.is)"></p><h1>iterm2</h1><p><a href="https://blog.csdn.net/ClownG/article/details/107849908">Mac终端工具iTerm2的多个ssh链接保存设置（类似Xshell的使用方法）</a></p><h1>别名配置</h1><h2 id="colorls-2"><a href="#colorls">colorls</a></h2><h2 id="通用必备配置">通用必备配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git 别名</span></span><br><span class="line"><span class="built_in">alias</span> gta=<span class="string">&quot;git add .&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtam=<span class="string">&quot;git add .  &amp;&amp; git commit -m&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtb=<span class="string">&quot;git branch&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtck=<span class="string">&quot;git checkout&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtcl=<span class="string">&quot;git clone&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtm=<span class="string">&quot;git commit -m&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtl=<span class="string">&quot;git log --graph --all&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtlo=<span class="string">&quot;git log --oneline --graph --all&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtrh=<span class="string">&quot;git reset --hard HEAD&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtrs=<span class="string">&quot;git reset --soft HEAD&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtps=<span class="string">&quot;git push&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gts=<span class="string">&quot;git status&quot;</span></span><br><span class="line"><span class="built_in">alias</span> gtst=<span class="string">&quot;git stash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># convert web page to markdown</span></span><br><span class="line"><span class="built_in">alias</span> cm=<span class="string">&quot;clean-mark&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> src=<span class="string">&quot;source ~/.zshrc&quot;</span></span><br><span class="line"><span class="built_in">alias</span> strc=<span class="string">&quot;subl ~/.zshrc&quot;</span></span><br><span class="line"><span class="built_in">alias</span> als=<span class="string">&quot;alias&quot;</span></span><br><span class="line"><span class="built_in">alias</span> alsg=<span class="string">&quot;alias |grep&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># convert jupyter notebook to markdown </span></span><br><span class="line"><span class="built_in">alias</span> nb2md=<span class="string">&quot;jupyter nbconvert --to markdown&quot;</span> </span><br><span class="line"><span class="comment"># conda alias</span></span><br><span class="line"><span class="built_in">alias</span> cda=<span class="string">&quot;conda activate&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cdd=<span class="string">&quot;conda deactivate&quot;</span></span><br></pre></td></tr></table></figure><h2 id="其他配置">其他配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">普通别名</span></span><br><span class="line">alias l=&#x27;ls -CF&#x27;</span><br><span class="line">alias la=&#x27;ls -AF &#x27;</span><br><span class="line">alias lsa=&#x27;ls -AF &#x27;</span><br><span class="line">alias ll=&#x27;ls -lF &#x27;</span><br><span class="line">alias lla=&#x27;ls -lAF &#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>参考文件</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/19556676">终极 Shell——ZSH</a></li><li><a href="https://www.dazhuanlan.com/franco109/topics/1314003">玩转终端软件 Hyper</a></li><li><a href="https://sspai.com/post/56081#!">打造高颜值终端——Hyper</a></li><li><a href="https://www.jianshu.com/p/43c1b6e40c69">zsh 命令自动补全插件 zsh-autosuggestions 安装和配置</a></li><li><a href="https://www.jianshu.com/p/15f0ffaa88d7">Linux 懒人工具 - autojump</a></li><li><a href="https://www.cnblogs.com/himonkey/p/11853487.html">Mac终端窗口配置oh-my-zsh</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Linux/Linux/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Linux/Linux/</url>
      
        <content type="html"><![CDATA[<h1>unix系统发展分支图</h1><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011530839.png" alt=""></p><h1>shell 命令</h1><p><a href="https://www.runoob.com/linux/linux-command-manual.html">linux命令大全</a></p><p><a href="https://blog.csdn.net/sun___shy/article/details/80917092">windows商店安装ubuntu教程</a></p><p><a href="https://blog.csdn.net/saisai_in_csdn/article/details/106610039">wsl安装</a></p><p><a href="https://www.cnblogs.com/zhang-jun-jie/p/9266858.html">shell 脚本编程</a></p><h2 id="wget命令详解"><a href="https://www.cnblogs.com/sx66/p/11887022.html">wget命令详解</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -O 保存文件名</span></span><br><span class="line">wget -O <span class="variable">$fileName</span> <span class="string">&#x27;$url&#x27;</span></span><br></pre></td></tr></table></figure><p>查看系统信息：<code> neofetch</code></p><h2 id="查看文件夹大小"><a href="https://blog.csdn.net/qq_27003337/article/details/108282745">查看文件夹大小</a></h2><p><a href="https://blog.csdn.net/qq_27003337/article/details/108282745">shell 查看文件夹/文件大小、目录/文件数量</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># du -sh $folderpath </span></span><br><span class="line"><span class="built_in">du</span> -sh ./.git</span><br></pre></td></tr></table></figure><h1>必装软件</h1><p><a href="https://blog.csdn.net/qq_43126480/article/details/102957219">windows10 WSL初体验（含vim、makefile）_qq_43126480的博客-CSDN博客</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install neofetch</span><br><span class="line">sudo apt install zsh</span><br><span class="line">sudo apt-get install openssh-server  ip</span><br><span class="line">sudo apt-get install g++</span><br></pre></td></tr></table></figure><p>[sshserver](<a href="https://cloud.tencent.com/developer/article/1751149#:~:text=Ubuntu%E7%BC%BA%E7%9C%81%E6%B2%A1%E6%9C%89%E5%AE%89%E8%A3%85SSH">https://cloud.tencent.com/developer/article/1751149#:~:text=Ubuntu缺省没有安装SSH</a> Server，使用以下命令安装： sudo apt-get,install openssh-server 然后确认sshserver是否启动了：（或用“netstat -tlp”命令）)</p><p>更换git源</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp <span class="regexp">/etc/</span>apt<span class="regexp">/sources.list /</span>etc<span class="regexp">/apt/</span>sources.list<span class="number">.20211128</span></span><br><span class="line">sudo vim <span class="regexp">/etc/</span>apt/sources.list</span><br><span class="line">:set nu</span><br><span class="line">gg</span><br><span class="line">dG</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/sigmarising/article/details/84778296">Ubuntu 更换 apt 源为阿里云_sigmarising的博客-CSDN博客_ubuntu换源阿里云</a></p><h2 id="开机启动">开机启动</h2><p><a href="https://www.cnblogs.com/dhcn/p/11523914.html">ubuntu start</a></p><h2 id="用户管理">用户管理</h2><p><a href="https://blog.csdn.net/qq_31456593/article/details/79247366">用户管理</a></p><p>修改用户密码 <code>passwd username </code></p><h3 id="idea">idea</h3><p><a href="https://www.jianshu.com/p/302dc10217c0">远程调试</a></p><h1>服务器桌面</h1><p><a href="https://blog.csdn.net/qq_24253277/article/details/103943848">Win10子系统-Ubuntu安装及配置VNC访问XFCE4桌面</a></p><p><a href="https://www.linuxidc.com/linux/2018-01/150471.htm">给Ubuntu服务器版安装GNOME桌面</a></p><p><a href="https://blog.csdn.net/m0_37622530/article/details/102632151">在服务器上安装图形化桌面</a></p><h2 id="VNC">VNC</h2><p><a href="https://www.cnblogs.com/wangyuehan/p/9807628.html">配置</a></p><p><a href="https://blog.csdn.net/techsupporter/article/details/52887199">常用命令</a></p><p><a href="https://jingyan.baidu.com/article/cbcede077f59bf02f40b4ddb.html">白屏</a></p><h1>Others</h1><h2 id="深度学习相关">深度学习相关</h2><p>Linux 查看显卡信息</p><p><code>lspci | grep -i vga</code></p><p><code>lspci | grep -i nvidia</code></p><p>查看 GPU 使用情况</p><p>静态查看 <code>nvidia-smi</code></p><p>周期性查看 <code>watch -n 10 nvidia-smi </code>命令行参数-n 后边跟的是执行命令的周期，以 s 为单位</p><p><a href="https://www.jianshu.com/p/deb91cc253ea">在Linux服务器上跑机器学习代码相关操作</a></p><h2 id="后台运行程序">后台运行程序</h2><p><a href="https://blog.csdn.net/weixin_43269020/article/details/83819687">后台跑代码</a></p><p>python <a href="http://test.py">test.py</a> &gt; test.log 2&gt;&amp;1 &amp;</p><p>nohup python <a href="http://src.py">src.py</a> &gt;src.log 2&gt;&amp;1 &amp;</p><p><strong>实现屏幕输出记录到日志文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup yourcommand 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p># 0 – stdin (standard input)，1 – stdout (standard output)，2 – stderr (standard error) ；</p><p># 2&gt;&amp;1是将标准错误（2）重定向到标准输出（&amp;1），标准输出（&amp;1）再被重定向输入到<a href="https://so.csdn.net/so/search?q=%E6%97%A5%E5%BF%97&amp;spm=1001.2101.3001.7020">日志</a>文件中。</p><p>如果希望将日志输出到别的文件中，可以增加一个文件路径参数。如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup yourcommand &gt; myout.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>其中myout.log是保存输出的文件名称；</p><p><a href="https://blog.csdn.net/cxu123321/article/details/108727075">参考</a></p><p><strong>实时监测日志输出内容命令：tail</strong></p><h2 id="发行版">发行版</h2><h3 id="ubuntu">ubuntu</h3><p><a href="https://www.jb51.net/os/Ubuntu/421276.html">截图</a></p><p><a href="https://blog.csdn.net/qq183837971/article/details/78235144">修改苹果字体</a></p><p><a href="https://www.linuxmi.com/ubuntu-20-04-mac-os-catalina.html">安装苹果主题</a></p><p><a href="https://zhuanlan.zhihu.com/p/35362159">系统美化1</a></p><p><a href="https://zhuanlan.zhihu.com/p/68921091">系统美化2</a></p><p><a href="https://www.cnblogs.com/spqin/p/13061508.html">ubuntu 安装 火狐浏览器（中国版本）</a></p><p><a href="https://blog.csdn.net/qq_33733970/article/details/84326110?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">/mnt/hgfs/下不显示共享文件夹的处理办法</a></p><p><a href="https://blog.csdn.net/u012442845/article/details/78855573">Ubuntu 16.04 禁用 nouveau 安装 nvidia显卡驱动</a></p><blockquote><p>要先安装 gcc，make 包</p></blockquote><blockquote><p><a href="https://www.cnblogs.com/xuyaowen/p/linux-secure-boot-disable.html">reference1</a></p></blockquote><blockquote><p>（ <a href="https://blog.csdn.net/wangyjfrecky/article/details/84029668?utm_medium=distribute.pc_relevant.none-task-blog-title-4&amp;spm=1001.2101.3001.4242%EF%BC%89">https://blog.csdn.net/wangyjfrecky/article/details/84029668?utm_medium=distribute.pc_relevant.none-task-blog-title-4&amp;spm=1001.2101.3001.4242）</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/tsq292978891/article/details/84503718">挂载磁盘</a></p></blockquote><h3 id="idea-安装">idea 安装</h3><p><a href="https://www.cnblogs.com/doggod/p/11892899.html">idea安装</a></p><p><a href="https://blog.csdn.net/weixx3/article/details/81136822">Ubuntu18.04 安装 Idea 2018.2 Ultimate</a></p><p><a href="https://blog.csdn.net/weixin_31484477/article/details/81133590">ubuntu中PyCharm的安装与卸载</a></p><h3 id="deepwine">deepwine</h3><p><a href="https://www.cnblogs.com/mrwuzs/p/13200462.html">ubuntu20.04安装微信</a></p><p><a href="https://www.deep-os.com/?id=18">Deepin-wine的相关操作</a></p><p><a href="https://blog.csdn.net/w851685279/article/details/105892373/">调整微信分辨率</a></p><h3 id="java">java</h3><p><a href="https://www.cnblogs.com/powerwu/articles/12028350.html">install</a></p><p><a href="https://www.cnblogs.com/kxm87/p/9686097.html">Maven</a></p><h1>WSL</h1><p><a href="https://blog.csdn.net/qq_18625805/article/details/104779056">重置管理员密码</a></p><h4 id="问题">问题</h4>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac常用软件</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Mac/mac-software/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Mac/mac-software/</url>
      
        <content type="html"><![CDATA[<h1>系统优化</h1><h4 id="必备软件">必备软件</h4><ul><li>BetterAndBetter</li><li>Alfred</li><li>Bartender</li><li>MacZip</li></ul><h4 id="状态栏软件">状态栏软件</h4><h5 id="MenuBarX">MenuBarX</h5><h5 id="HandMirror">HandMirror</h5><h5 id="pomodore-me"><a href="http://pomodore.me">pomodore.me</a></h5><p>番茄钟软件</p><h4 id="清理软件">清理软件</h4><ul><li>腾讯Lemon</li><li>CleanMyMacX</li><li>App Cleaner &amp;&amp; Uninstaller</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>维特比算法</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/ViterbiAlgorithm/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/ViterbiAlgorithm/</url>
      
        <content type="html"><![CDATA[<p>Viterbi:DP搜索最优状态序列<br>定义：Viterbi变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">δ_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>是在时间t时，模型沿着某一条路径到达<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,输出观察序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">O</mi><mo>=</mo><msub><mi>O</mi><mn>1</mn></msub><msub><mi>O</mi><mn>2</mn></msub><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>O</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">Ο=O_1O_2···O_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最大概率为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><msub><mi>q</mi><mn>1</mn></msub><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>q</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>q</mi><mi>t</mi></msub><mo>=</mo><msub><mi>S</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>O</mi><mn>1</mn></msub><msub><mi>O</mi><mn>2</mn></msub><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>O</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">δ_t(i)=\max_{q_1q_2···q_{t-1}} P(q_1q_2···q_t=S_i, O_1O_2···O_t|i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5918em;vertical-align:-0.8418em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">⋅⋅⋅</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8418em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></span></p><p><a href="https://blog.csdn.net/StarLib/article/details/106904606">维特比算法实现</a></p><p><a href="https://www.zhihu.com/question/20136144">如何通俗地讲解 viterbi 算法？</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">argmax</span>(<span class="params">vec</span>):</span><br><span class="line">    <span class="comment"># return the argmax as a python int</span></span><br><span class="line">    _, idx = torch.<span class="built_in">max</span>(vec, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> idx.item()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">log_sum_exp</span>(<span class="params">vec</span>):</span><br><span class="line">    max_score = vec[<span class="number">0</span>, argmax(vec)]</span><br><span class="line">    max_score_broadcast = max_score.view(<span class="number">1</span>, -<span class="number">1</span>).expand(<span class="number">1</span>, vec.size()[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> max_score + \</span><br><span class="line">           torch.log(torch.<span class="built_in">sum</span>(torch.exp(vec - max_score_broadcast)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Viterbi</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, s_to_idx, v_to_idx, tran_matrix, emit_matrix</span>):</span><br><span class="line">        self.s_to_idx = s_to_idx</span><br><span class="line">        self.v_to_idx = v_to_idx</span><br><span class="line">        self.tran_matrix = torch.Tensor(tran_matrix).transpose(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        self.emit_matrix = torch.Tensor(emit_matrix).transpose(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        self.state_size = <span class="built_in">len</span>(s_to_idx)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">viterbi</span>(<span class="params">self, init_state, v_seq</span>):</span><br><span class="line">        backpointers = []</span><br><span class="line">        <span class="comment"># 在对数空间初始化维特比变量</span></span><br><span class="line">        res = []</span><br><span class="line">        init_state = torch.Tensor(init_state)</span><br><span class="line">        <span class="keyword">for</span> i, s <span class="keyword">in</span> <span class="built_in">enumerate</span>(init_state):</span><br><span class="line">            v = self.v_to_idx[v_seq[<span class="number">0</span>]]</span><br><span class="line">            tmp = torch.log(s) + torch.log(self.emit_matrix[v][i])</span><br><span class="line">            res.append(tmp)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">del</span> init_state</span><br><span class="line">        init_vvars = torch.stack(res)</span><br><span class="line"></span><br><span class="line">        forward_var = init_vvars</span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> v_seq[<span class="number">1</span>:]:</span><br><span class="line">            bptrs_t = []</span><br><span class="line">            viterbivars_t = []</span><br><span class="line">            v_index = self.v_to_idx[v]</span><br><span class="line">            <span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">range</span>(self.state_size):</span><br><span class="line">                next_tag_var = forward_var + torch.log(self.tran_matrix[s])</span><br><span class="line">                best_tag_id = argmax(next_tag_var)</span><br><span class="line">                bptrs_t.append(best_tag_id)</span><br><span class="line">                viterbivars_t.append(next_tag_var[best_tag_id])</span><br><span class="line">            forward_var = (torch.Tensor(viterbivars_t) + torch.log(self.emit_matrix[v_index]))</span><br><span class="line">            backpointers.append(bptrs_t)</span><br><span class="line">        <span class="comment"># 终结</span></span><br><span class="line">        terminal_var = forward_var</span><br><span class="line">        best_tag_id = argmax(terminal_var)</span><br><span class="line">        path_score = terminal_var[best_tag_id]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 回溯解码</span></span><br><span class="line">        best_path = [best_tag_id]</span><br><span class="line">        <span class="keyword">for</span> bptrs_t <span class="keyword">in</span> <span class="built_in">reversed</span>(backpointers):</span><br><span class="line">            best_tag_id = bptrs_t[best_tag_id]</span><br><span class="line">            best_path.append(best_tag_id)</span><br><span class="line"></span><br><span class="line">        best_path.reverse()</span><br><span class="line">        <span class="keyword">return</span> torch.exp(path_score), best_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">toIdx</span>(<span class="params">l: <span class="type">List</span></span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;e: i <span class="keyword">for</span> i, e <span class="keyword">in</span> <span class="built_in">enumerate</span>(l)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    states = [<span class="string">&quot;健康&quot;</span>, <span class="string">&quot;发烧&quot;</span>] <span class="comment"># tags</span></span><br><span class="line">    observations = [<span class="string">&quot;正常&quot;</span>, <span class="string">&quot;冷&quot;</span>, <span class="string">&quot;头晕&quot;</span>]<span class="comment"># </span></span><br><span class="line">    tran_matrix = torch.Tensor([[<span class="number">0.7</span>, <span class="number">0.3</span>], [<span class="number">0.4</span>, <span class="number">0.6</span>]])  <span class="comment"># A_ij tagsNum*tagsNum 状态转移矩阵</span></span><br><span class="line">    emit_matrix = torch.Tensor([[<span class="number">0.5</span>, <span class="number">0.4</span>, <span class="number">0.1</span>], [<span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">0.6</span>]]) <span class="comment">#tagsNum* obsStates 观测状态矩阵</span></span><br><span class="line">    init_state = [<span class="number">0.6</span>, <span class="number">0.4</span>]</span><br><span class="line">    observation_seq = [<span class="string">&quot;正常&quot;</span>, <span class="string">&quot;冷&quot;</span>, <span class="string">&quot;头晕&quot;</span>]</span><br><span class="line">    viterbi = Viterbi(toIdx(states), toIdx(observations), tran_matrix, emit_matrix)</span><br><span class="line">    maxpro, path = viterbi.viterbi(init_state, observation_seq)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最大概率为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(maxpro))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最大概率下路径为：&quot;</span>)</span><br><span class="line">    pt = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> path:</span><br><span class="line">        pt += states[i] + <span class="string">&quot;-&gt;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(pt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/algorithm/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/algorithm/</url>
      
        <content type="html"><![CDATA[<h1>经典算法</h1><p><a href="https://zhuanlan.zhihu.com/p/126124250">动态规划</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>决策树</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/decision-tree/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/decision-tree/</url>
      
        <content type="html"><![CDATA[<h1>决策树</h1><p>决策树是一种机器学习的方法。决策树的生成算法有ID3, C4.5和C5.0等。决策树是一种树形结构，其中每个内部节点表示一个属性上的判断，每个分支代表一个判断结果的输出，最后每个叶节点代表一种分类结果。</p><p>决策树是一种十分常用的分类方法，需要监管学习（有教师的Supervised Learning），监管学习就是给出一堆样本，每个样本都有一组属性和一个分类结果，也就是分类结果已知，那么通过学习这些样本得到一个决策树，这个决策树能够对新的数据给出正确的分类。这里通过一个简单的例子来说明决策树的构成思路：</p><p>给出如下的一组数据，一共有十个样本（学生数量），每个样本有分数，出勤率，回答问题次数，作业提交率四个属性，最后判断这些学生是否是好学生。最后一列给出了人工分类结果。</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011543972.png" alt=""></p><p>然后用这一组附带分类结果的样本可以训练出多种多样的决策树，这里为了简化过程，我们假设决策树为二叉树，且类似于下图：</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011543697.png" alt=""></p><p>通过学习上表的数据，可以设置A，B，C，D，E的具体值，而A，B，C，D，E则称为阈值。当然也可以有和上图完全不同的树形，比如下图这种的：</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011545723.png" alt=""></p><p>所以决策树的生成主要分以下两步，这两步通常通过学习已经知道分类结果的样本来实现。</p><ol><li>节点的分裂：一般当一个节点所代表的属性无法给出判断时，则选择将这一节点分成2个子节点（如不是二叉树的情况会分成n个子节点）</li><li>阈值的确定：选择适当的阈值使得分类错误率最小 （Training Error）。</li></ol><p>比较常用的决策树有ID3，C4.5和CART（Classification And Regression Tree），CART的分类效果一般优于其他决策树。下面介绍具体步骤。</p><p>ID3: 由增熵（Entropy）原理来决定那个做父节点，那个节点需要分裂。对于一组数据，熵越小说明分类结果越好。熵定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mo>−</mo><mo>∑</mo><mo stretchy="false">[</mo><msub><mi>p</mi><msub><mi>x</mi><mi>i</mi></msub></msub><mo>∗</mo><mi>l</mi><mi>o</mi><msubsup><mi>g</mi><mn>2</mn><msub><mi>p</mi><msub><mi>x</mi><mi>i</mi></msub></msub></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Entropy=−\sum [p_{x_i}∗log_2^{p_{x_i}}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.17em;vertical-align:-0.2663em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9037em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.3023em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p>其中p(x_i) 为x_i出现的概率。假如是2分类问题，当A类和B类各占50%的时候，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mn>0.5</mn><mo>∗</mo><mi>l</mi><mi>o</mi><msubsup><mi>g</mi><mn>2</mn><mn>0.5</mn></msubsup><mo>+</mo><mn>0.5</mn><mo>∗</mo><mi>l</mi><mi>o</mi><msubsup><mi>g</mi><mn>2</mn><mn>0.5</mn></msubsup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Entropy=−(0.5∗log_2^{0.5}+0.5*log_2^{0.5})=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0.5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0.5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>当只有A类，或只有B类的时候，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mo>−</mo><mtext>（</mtext><mn>1</mn><mo>∗</mo><mi>l</mi><mi>o</mi><msubsup><mi>g</mi><mn>2</mn><mn>1</mn></msubsup><mo>+</mo><mn>0</mn><mtext>）</mtext><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Entropy=−（1∗log_2^1+0）=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">0</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>所以当Entropy最大为1的时候，是分类效果最差的状态，当它最小为0的时候，是完全分类的状态。因为熵等于零是理想状态，一般实际情况下，熵介于0和1之间。</p><p>熵的不断最小化，实际上就是提高分类正确率的过程。<br>比如上表中的4个属性：单一地通过以下语句分类：</p><ol><li>分数小于70为【不是好学生】：分错1个</li><li>出勤率大于70为【好学生】：分错3个</li><li>问题回答次数大于9为【好学生】：分错2个</li><li>作业提交率大于80%为【好学生】：分错2个</li></ol><p>最后发现 分数小于70为【不是好学生】这条分错最少，也就是熵最小，所以应该选择这条为父节点进行树的生成，当然分数也可以选择大于71，大于72等等，出勤率也可以选择小于60，65等等，总之会有很多类似上述1~4的条件，最后选择分类错最少即熵最小的那个条件。而当分裂父节点时道理也一样，分裂有很多选择，针对每一个选择，与分裂前的分类错误率比较，留下那个提高最大的选择，即熵减最大的选择。</p><p>C4.5：通过对ID3的学习，可以知道ID3存在一个问题，那就是越细小的分割分类错误率越小，所以ID3会越分越细，比如以第一个属性为例：设阈值小于70可将样本分为2组，但是分错了1个。如果设阈值小于70，再加上阈值等于95，那么分错率降到了0，但是这种分割显然只对训练数据有用，对于新的数据没有意义，这就是所说的过度学习（Overfitting）。</p><p>分割太细了，训练数据的分类可以达到0错误率，但是因为新的数据和训练数据不同，所以面对新的数据分错率反倒上升了。决策树是通过分析训练数据，得到数据的统计信息，而不是专为训练数据量身定做。</p><p>就比如给男人做衣服，叫来10个人做参考，做出一件10个人都能穿的衣服，然后叫来另外5个和前面10个人身高差不多的，这件衣服也能穿。但是当你为10个人每人做一件正好合身的衣服，那么这10件衣服除了那个量身定做的人，别人都穿不了。</p><p>所以为了避免分割太细，c4.5对ID3进行了改进，C4.5中，优化项要除以分割太细的代价，这个比值叫做信息增益率，显然分割太细分母增加，信息增益率会降低。除此之外，其他的原理和ID3相同。</p><p>CART：分类回归树<br>CART是一个二叉树，也是回归树，同时也是分类树，CART的构成简单明了。<br>CART只能将一个父节点分为2个子节点。CART用GINI指数来决定如何分裂：<br>GINI指数：总体内包含的类别越杂乱，GINI指数就越大（跟熵的概念很相似）。</p><p>a. 比如出勤率大于70%这个条件将训练数据分成两组：大于70%里面有两类：【好学生】和【不是好学生】，而小于等于70%里也有两类：【好学生】和【不是好学生】。</p><p>b. 如果用分数小于70分来分：则小于70分只有【不是好学生】一类，而大于等于70分有【好学生】和【不是好学生】两类。</p><p>比较a和b，发现b的凌乱程度比a要小，即GINI指数b比a小，所以选择b的方案。以此为例，将所有条件列出来，选择GINI指数最小的方案，这个和熵的概念很类似。</p><p>CART还是一个回归树，回归解析用来决定分布是否终止。理想地说每一个叶节点里都只有一个类别时分类应该停止，但是很多数据并不容易完全划分，或者完全划分需要很多次分裂，必然造成很长的运行时间，所以CART可以对每个叶节点里的数据分析其均值方差，当方差小于一定值可以终止分裂，以换取计算成本的降低。</p><p>CART和ID3一样，存在偏向细小分割，即过度学习（过度拟合的问题），为了解决这一问题，对特别长的树进行剪枝处理，直接剪掉。</p><p>以上的决策树训练的时候，一般会采取Cross-Validation法：比如一共有10组数据：</p><p>第一次. 1到9做训练数据， 10做测试数据<br>第二次. 2到10做训练数据，1做测试数据<br>第三次. 1，3到10做训练数据，2做测试数据，以此类推<br>做10次，然后大平均错误率。这样称为 10 folds Cross-Validation。<br>比如 3 folds Cross-Validation 指的是数据分3份，2份做训练，1份做测试。</p><p>转载自：<a href="https://zhuanlan.zhihu.com/p/30059442">https://zhuanlan.zhihu.com/p/30059442</a></p>]]></content>
      
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>深度学习理论</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/deep-learning-theories/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/deep-learning-theories/</url>
      
        <content type="html"><![CDATA[<h1>基础</h1><p><a href="https://zhuanlan.zhihu.com/p/262697114">计算机视觉基本任务综述</a></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011542238.png" alt=""></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011542239.png" alt=""></p><p>卷积层输出尺寸计算公式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mfrac><mrow><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>+</mo><mn>2</mn><mo>×</mo><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>k</mi><mi>e</mi><mi>r</mi><mi>n</mi><mi>e</mi><mi>l</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi></mrow></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">output\_size = \cfrac{input\_size+2\times padding- kernel\_size}{stride}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">tp</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.276em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.59em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">in</span><span class="mord mathnormal">p</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>N是输入图片长度，K是滤波器长度（卷积核大小），S是步长</p><h2 id="干货集锦">干货集锦</h2><p><a href="https://www.cntofu.com/book/85/index.html">机器学习原理</a></p><p><a href="https://datawhalechina.github.io/leeml-notes/#/">李宏毅机器学习笔记</a></p><p><a href="https://www.bilibili.com/video/av59538266">李宏毅Bilibili</a></p><p><a href="https://blog.csdn.net/qq_41485273/article/details/111563979">白板推导</a></p><h2 id="信息论">信息论</h2><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011542240.png" alt=""></p><blockquote><p>I(X;Y) = I(Y;X) = H(Y)-H(Y/X) = H(X) – H(X/Y)<br>H(X) + H(Y) = H(X,Y) + I(X;Y)<br>I(X;Y)=H(X) + H(Y) – H(X,Y)</p></blockquote><h2 id="基础概念">基础概念</h2><p><a href="https://zhuanlan.zhihu.com/p/42706477">详解残差网络</a></p><p><a href="https://zhuanlan.zhihu.com/p/68386882">Singular Value Decomposition（SVD奇异值分解）</a></p><p><a href="https://zhuanlan.zhihu.com/p/22751416">数据挖掘|概率图模型（一）</a></p><p><a href="https://www.zhihu.com/question/19645541">查准率，准确率，查全率</a></p><p><a href="https://zhuanlan.zhihu.com/p/97870600">F1值</a></p><p><a href="https://zhuanlan.zhihu.com/p/66063089">自监督学习</a></p><p><a href="https://mp.weixin.qq.com/s/b2q3nexPR7Amx5ficdBh-Q">超详细的NLP预训练语言模型总结清单</a></p><p><a href="https://blog.csdn.net/asialee_bird/article/details/81486700">TF-IDF算法介绍及实现</a></p><p><a href="https://www.zhihu.com/question/20446337">马尔可夫毯（Markov Blanket）</a></p><p><a href="https://www.cnblogs.com/wisir/p/12556353.html">端到端学习</a></p><p><a href="https://zhuanlan.zhihu.com/p/41521695">特征工程与表示学习</a></p><p><a href="https://zhuanlan.zhihu.com/p/62629465">图嵌入</a></p><p><a href="https://zhuanlan.zhihu.com/p/75307407?from_voters_page=true">图神经网络</a></p><p><a href="https://blog.csdn.net/weixin_48629412/article/details/111174968">多模态特征表示和融合</a></p><p><a href="https://blog.csdn.net/tingzhiyi/article/details/114368433">上采样和下采样</a></p><h2 id="Normalization">Normalization</h2><p><a href="https://www.zhihu.com/question/20455227/answer/370658612">特征工程中的「归一化」有什么作用？</a></p><p><a href="https://blog.csdn.net/weixin_36604953/article/details/102652160">标准化和归一化，请勿混为一谈，透彻理解数据变换</a></p><p><a href="https://zhuanlan.zhihu.com/p/24810318">什么是批标准化 (Batch Normalization)</a></p><p><a href="https://www.zhihu.com/question/20467170">标准化和归一化什么区别？</a></p><blockquote><ol><li>缩放到均值为0，方差为1（**Standardization——**StandardScaler()）</li><li>缩放到0和1之间（**Standardization——**MinMaxScaler()）</li><li>缩放到-1和1之间（**Standardization——**MaxAbsScaler()）</li><li>缩放到0和1之间，保留原始数据的分布（**Normalization——**Normalizer()</li></ol></blockquote><p><a href="https://blog.csdn.net/liuxiao214/article/details/81037416">BatchNormalization、LayerNormalization、InstanceNorm、GroupNorm、SwitchableNorm总结</a></p><h1>经典算法</h1><h2 id="机器学习算法">机器学习算法</h2><p><a href="https://blog.csdn.net/v_july_v/category_9261611.html">机器学习十大算法系列</a></p><h3 id="感知机">感知机</h3><p><a href="https://www.zhihu.com/question/320426826">感知机</a></p><h3 id="logistic回归">logistic回归</h3><p><a href="https://www.cnblogs.com/geo-will/p/10468356.html">logistic回归</a></p><h3 id="EM">EM</h3><blockquote><p><a href="https://blog.csdn.net/u010834867/article/details/90762296">EM算法</a><br><a href="https://blog.csdn.net/v_july_v/article/details/81708386">如何通俗理解EM算法</a><br><a href="https://zhuanlan.zhihu.com/p/32925505">从EM到Variational EM</a><br><a href="https://blog.csdn.net/u012771351/article/details/53032365">LDA-隐狄利克雷分布-主题模型</a></p></blockquote><h3 id="贝叶斯">贝叶斯</h3><p><a href="https://www.cnblogs.com/geo-will/p/10468401.html">机器学习|算法笔记-朴素贝叶斯（Naive Bayesian）</a></p><p><a href="https://blog.csdn.net/v_july_v/article/details/40984699">从贝叶斯谈到贝叶斯网络</a></p><p><a href="https://blog.csdn.net/cjneo/article/details/45167223">朴素贝叶斯 VS 逻辑回归 区别</a></p><h3 id="支持向量机（SVM）">支持向量机（SVM）</h3><p><a href="https://zhuanlan.zhihu.com/p/35755150">推导 | SVM详解（1）SVM基本型</a></p><p><a href="https://www.cnblogs.com/geo-will/p/10503218.html">算法笔记-支持向量机</a></p><h3 id="HMM"><strong>HMM</strong></h3><blockquote><p><strong><a href="https://zhuanlan.zhihu.com/p/29938926">HMM隐马尔科夫模型</a></strong><br><strong><a href="https://www.cnblogs.com/pinard/p/6945257.html">HMM</a></strong><br><strong><a href="https://blog.csdn.net/weixin_42175217/article/details/105442777?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&amp;spm=1001.2101.3001.4242">HMM2</a></strong><br><strong><a href="https://blog.csdn.net/hudashi/article/details/87867916">隐马尔科夫模型</a></strong></p></blockquote><p><strong>隐马尔可夫模型是 先生成状态序列，然后由状态序列生成观测序列，即是先 P(Z) , 再 P(O|Z), 所以拟合的是 P(O, Z)也就是联合概率分布而判别模型拟合的是条件概率分布。HMM在数据量较少的时候，会脑补数据，性能更好。</strong></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011542241.png" alt=""></p><blockquote><p>条件随机场是一种判别式无向图模型，生成式模型是直接对联合分布进行建模，而判别式模型则是对条件分布进行建模，隐马尔科夫模型（HMM）和马尔科夫随机场都是生成模型，而条件随机场(CRF)是判别式模型。CRF可看作给定观测值的马尔科夫随机场。</p></blockquote><p>维特比算法</p><p><a href="https://ah0aangfha.feishu.cn/docs/doccnoVrVCsrIzCEWkxvUlW30hN">Viterbi维特比算法</a></p><h3 id="CRF">CRF</h3><p><a href="https://ah0aangfha.feishu.cn/docs/doccnkchwwM1mp9wrcy9NybCgyg">CRF-条件随机场</a></p><p>为了建一个条件随机场，我们首先要定义一个特征函数集，每个特征函数都以整个句子s，当前位置i，位置i和i-1的标签为输入。然后为每一个特征函数赋予一个权重，然后针对每一个标注序列l，对所有的特征函数加权求和，必要的话，可以把求和的值转化为一个概率值。</p><p><a href="https://www.jianshu.com/p/da49f9a5468c">CRF-条件随机场</a></p><p><a href="https://zhuanlan.zhihu.com/p/70067113">一文理解条件随机场CRF</a></p><p><a href="https://zhuanlan.zhihu.com/p/383307632">机器学习 – 条件随机场 (CRF)</a></p><p><a href="https://zhuanlan.zhihu.com/p/112980214">马尔可夫随机场以及条件随机场</a></p><p><a href="https://www.sohu.com/a/341284906_787107">最通俗易懂的BiLSTM-CRF模型中的CRF层讲</a></p><p><a href="https://anxiang1836.github.io/2019/11/05/NLP_From_HMM_to_CRF/">从隐马尔科夫到条件随机场</a></p><h3 id="决策树">决策树</h3><p><a href="https://zhuanlan.zhihu.com/p/30059442">决策树(Decision Tree)：通俗易懂之介绍</a></p><p><a href="https://www.cnblogs.com/muzixi/p/6566803.html">决策树–信息增益，信息增益比，Geni指数的理解</a></p><h2 id="其他算法">其他算法</h2><p><a href="https://blog.csdn.net/yangyin007/article/details/82385967">随机森林算法及其实现（Random Forest）</a></p><h1>神经网络概念详解</h1><h2 id="基础概念-2">基础概念</h2><h3 id="bottleneck">bottleneck</h3><p><a href="https://blog.csdn.net/duan19920101/article/details/104349188">bottleneck</a></p><h2 id="RNN">RNN</h2><p><a href="https://www.jianshu.com/p/87aa03352eb9">循环神经网络（RNN）浅析</a></p><p><a href="https://www.jianshu.com/p/b2b95f945a98">Seq2Seq模型概述</a></p><p><a href="https://zhuanlan.zhihu.com/p/32085405">人人都能看懂的LSTM</a></p><h2 id="Transformer">Transformer</h2><h3 id="Attention">Attention</h3><p><a href="https://zhuanlan.zhihu.com/p/358206572">MultiHeadAttention实现详解</a></p><p><a href="http://nlp.seas.harvard.edu/2018/04/03/attention.html">The Annotated Transformer</a></p><p><a href="https://www.jianshu.com/p/5a5bcfe5c185">序列标注</a></p><p><a href="https://www.jianshu.com/p/c7c3ace12044">序列标注和中文命名实体识别</a></p><p><a href="https://www.jianshu.com/p/1d67638139da">attention机制原理及简单实现</a></p><p><a href="https://blog.csdn.net/baidu_29571167/article/details/89012223">深入理解shortcut</a></p><p><a href="https://blog.csdn.net/qq_38906523/article/details/79838000">Encoder-Decoder</a></p><h3 id="Bert">Bert</h3><p><a href="https://zhuanlan.zhihu.com/p/54356280">Bert详解</a></p><p><a href="https://zhuanlan.zhihu.com/p/48612853">词向量之BERT</a></p><p><a href="https://zhuanlan.zhihu.com/p/248017234">bert的输入输出是什么</a></p><p><a href="https://zhuanlan.zhihu.com/p/338817680">Transformer模型详解（图解最完整版）</a></p><p><a href="https://blog.csdn.net/Sakura55/article/details/86679826">深度学习----Transformer模型之图示进阶篇</a></p><p><a href="https://www.bilibili.com/video/BV1J441137V6">李宏毅-Transformer</a></p><p><a href="https://www.bilibili.com/video/BV1H441187js?p=1">60分钟带你掌握NLP BERT理论与实战</a></p><p><a href="https://www.bilibili.com/video/BV17441137fa/?spm_id_from=333.788.videocard.11">李宏毅-ELMO, BERT, GPT讲解</a></p><p><a href="https://zhuanlan.zhihu.com/p/53682800">nlp中的Attention注意力机制+Transformer详解</a></p><p><a href="https://zhuanlan.zhihu.com/p/52119092">NLP中的RNN、Seq2Seq与attention注意力机制</a></p><p><a href="https://zhuanlan.zhihu.com/p/53682800">nlp中的Attention注意力机制+Transformer详解</a></p><p><a href="https://zhuanlan.zhihu.com/p/48508221">详解Transformer （Attention Is All You Need）</a></p><h3 id="VisionTransformer">VisionTransformer</h3><p><a href="https://zhuanlan.zhihu.com/p/348593638">Vision Transformer , Vision MLP 超详细解读 (原理分析+代码解读) (目录)</a></p><p><a href="https://blog.csdn.net/weixin_44966641/article/details/118733341">Vision Transformer（ViT）PyTorch代码全解析（附图解）</a></p><h1>经典模型</h1><h2 id="VGG16">VGG16</h2><p><a href="https://www.cnblogs.com/lfri/p/10493408.html">VGG16详解</a></p><h2 id="ResNet">ResNet</h2><p><a href="https://zhuanlan.zhihu.com/p/91385516">一文读懂残差网络ResNet</a></p><p><a href="https://zhuanlan.zhihu.com/p/79378841">ResNet网络结构分析</a></p><h1>实战任务</h1><h2 id="文本分类">文本分类</h2><p><a href="https://www.cnblogs.com/jiangxinyang/p/10207273.html">文本分类实战</a></p><h2 id="NER">NER</h2><h3 id="数据集">数据集</h3><p><a href="https://www.datafountain.cn/datasets/5684">命名实体识别学习-数据集介绍-conll03</a></p><p><a href="https://blog.csdn.net/StarLib/article/details/106933974">LSTM+CRF序列标注</a></p><h2 id="关系抽取">关系抽取</h2><p><a href="https://www.cnblogs.com/sandwichnlp/p/12049829.html">简介</a></p><p><a href="https://zhuanlan.zhihu.com/p/74886839">实体关系联合抽取总结</a></p><p><a href="https://blog.csdn.net/dugudaibo/article/details/79120627">结构学习：序列标注</a></p><h1>多模态</h1><p><a href="https://blog.csdn.net/qq_39388410/article/details/105907097">跨模态检索</a></p><p><a href="https://blog.csdn.net/qq_39388410/article/details/105145074">多模态融合</a></p><h1>问答</h1><p><a href="https://www.zhihu.com/question/20446337">生成模型和判别模型的区别</a></p><ul><li>生成模型数据量小时更优，判别模型数据量越大越好</li><li>生成模型要求数据独立同分布，判别模型没有要求</li></ul><h1>TEMP</h1><h1>Others</h1><p><a href="https://blog.csdn.net/moxibingdao/article/details/106667760">自监督、半监督、无监督学习，傻傻分不清楚？最新综述来帮你！</a></p><p><a href="https://blog.csdn.net/weixin_39612677/article/details/110394322">有监督学习和无监督学习举例_对比自监督学习</a></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011542242.png" alt=""></p><p>建议路线，ng课程入门，知道有哪些算法，大致怎么做，然后去kaggle打个入门赛，别做特征工程，把会的算法全用上。然后放下比赛，开始读这本书，同时看机器学习基石或其他比较数学化的进阶课程，这一步不需要你敲代码，你要会的是滚瓜烂熟的推导，做到这一步，再去kaggle参加奖金赛，阅读kernel，学习state of the art 模型，学习特征工程，再在学习过程中阅读最新的论文或者经典的论文，不断迭代这个过程，别淹死在什么机器学习实战上，有现成的轮子不用，非得费那个劲，除非你科班毕业，代码能力扎实，不然你能不能从头实现一遍决策树对你找不找到工作没有任何一毛钱关系。笔试不会考你如何实现hmm，只会考数据结构与算法，面试只会让你推导。</p>]]></content>
      
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>目标检测</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1>数据集</h1><p><a href="https://blog.csdn.net/qq_41185868/article/details/82939959">COOC</a></p><h1>算法</h1><p><a href="https://blog.csdn.net/shenxiaolu1984/article/details/51066975">RCNN算法详解</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>知识图谱</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</url>
      
        <content type="html"><![CDATA[<h1>基础</h1><h3 id="入门-2">入门</h3><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011540036.png" alt=""></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2OTA0NzE2NA==&amp;mid=2247520757&amp;idx=1&amp;sn=b2142d51162be1a7cd630623d3a5c7fc&amp;chksm=fc8670e6cbf1f9f06b2e32468e3109202268b74965e36c1c7a98cf6e5c4c99e195a9c3d483b8&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1582011815888&amp;sharer_shareid=c73d81b0370cc4a939bc9898cb9ca485&amp;key=0b4875c6227cfa50ef3708eb15d4ec4cb98b5d8bbb54f86c9fa3b46820dfca11663e96eb4e6a4b178ec2250c4bb5748342c95a236af7465b5feec5d85dc84b967a3676828a7654dcddb04d4652ba5ab7f658154d844964b9ac321371a0f45b7c9801b19a418822c09207ee24c11a8418f9e67995d28a3ceac46b08e7d4d4335d&amp;ascene=1&amp;uin=MjkwMTY1ODIzMw==&amp;devicetype=Windows+10+x64&amp;version=6300002f&amp;lang=zh_CN&amp;exportkey=A+RxICSniseW5jejXRKFTRU=&amp;pass_ticket=0RH8B4gIIB4Lo+uaoUXRwutVMQCH1DZpMpAT7TQ6kCkstYyHUtZIs74ekPcxbpMW&amp;wx_header=0">综述</a></p><p><a href="https://mp.weixin.qq.com/s/bDsJFK3LFZjwaMxJiiBUcg">【综述专栏】什么是知识图谱｜知识图谱入门｜概述</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTc4ODE0Mw==&amp;mid=2247515135&amp;idx=1&amp;sn=e1b9a4f8155cc5f27113ec7d1004095a&amp;chksm=96ea647fa19ded69e43302da581c91486430acba9525925354f9b6e7a12a1d7a69beb0d5766b&amp;mpshare=1&amp;scene=1&amp;srcid=1214xRFBwrGRRe8mLwzm63yu&amp;sharer_sharetime=1607934829013&amp;sharer_shareid=17ccc67fa19a9e5072981fc1f40eec60&amp;key=53f955594eae8e1b1532bea5c139a3b43c773f9910ae9af3f3179769ea972f44786fbcb3e81ed3cc8536a698b542f30d0038950c0585b673ca310cdebdff06b09db173671f9f7772049afbc7278f495e298677c3a224105ccb3b3e256e90db69da2fc1359ae7e65c1980ecfda1d6265a4a0cc711db98ea618c29116249cfdd53&amp;ascene=1&amp;uin=MjkwMTY1ODIzMw==&amp;devicetype=Windows+10+x64&amp;version=63000039&amp;lang=zh_CN&amp;exportkey=A4CgOZJ0s9nCDDFN6Iw+dk4=&amp;pass_ticket=Q6YMzN1QllFrS0nE4D/7EGMoGjbyZHskrvM/O1f2U9Omx91MBQm3o8YWgsSjdgZB&amp;wx_header=0">行业知识图谱构建综述</a></p><p><a href="https://blog.csdn.net/weixin_44343544/article/details/107548092">知识图谱嵌入内容整理</a></p><p><a href="https://weizhixiaoyi.com/archives/463.html">知识图谱嵌入(KGE)主流模型简介</a></p><p><a href="https://blog.csdn.net/qq_40006058/article/details/89432773">推荐算法常用评价指标：NDCG、MAP、MRR、HR、ILS、ROC、AUC、F1等</a></p><h3 id="基础知识">基础知识</h3><h4 id="知识表示">知识表示</h4><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011540037.png" alt=""></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011540038.png" alt=""></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011540039.png" alt=""></p><h2 id="问答">问答</h2><p><a href="https://blog.csdn.net/broccoli2/article/details/102531077">什么是实体对齐、实体消歧、属性对齐？</a></p><h1>Others</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>transformers篇-BertTokenizer.encode_plus()方法</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Pytorch/BertTokenizer.encode_plus/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Pytorch/BertTokenizer.encode_plus/</url>
      
        <content type="html"><![CDATA[<h3 id="🖥定义">🖥定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">encode_plus</span>(<span class="params"></span></span><br><span class="line"><span class="params">    self,</span></span><br><span class="line"><span class="params">    text: <span class="type">Union</span>[TextInput, PreTokenizedInput, EncodedInput],</span></span><br><span class="line"><span class="params">    text_pair: <span class="type">Optional</span>[<span class="type">Union</span>[TextInput, PreTokenizedInput, EncodedInput]] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    add_special_tokens: <span class="built_in">bool</span> = <span class="literal">True</span>,</span></span><br><span class="line"><span class="params">    padding: <span class="type">Union</span>[<span class="built_in">bool</span>, <span class="built_in">str</span>, PaddingStrategy] = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    truncation: <span class="type">Union</span>[<span class="built_in">bool</span>, <span class="built_in">str</span>, TruncationStrategy] = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    max_length: <span class="type">Optional</span>[<span class="built_in">int</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    stride: <span class="built_in">int</span> = <span class="number">0</span>,</span></span><br><span class="line"><span class="params">    is_split_into_words: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    pad_to_multiple_of: <span class="type">Optional</span>[<span class="built_in">int</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    return_tensors: <span class="type">Optional</span>[<span class="type">Union</span>[<span class="built_in">str</span>, TensorType]] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    return_token_type_ids: <span class="type">Optional</span>[<span class="built_in">bool</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    return_attention_mask: <span class="type">Optional</span>[<span class="built_in">bool</span>] = <span class="literal">None</span>,</span></span><br><span class="line"><span class="params">    return_overflowing_tokens: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    return_special_tokens_mask: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    return_offsets_mapping: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    return_length: <span class="built_in">bool</span> = <span class="literal">False</span>,</span></span><br><span class="line"><span class="params">    verbose: <span class="built_in">bool</span> = <span class="literal">True</span>,</span></span><br><span class="line"><span class="params">    **kwargs</span></span><br><span class="line"><span class="params"></span>) -&gt; BatchEncoding:</span><br></pre></td></tr></table></figure><h3 id="🖥作用">🖥作用</h3><p>用于将文本转化为bert的输入编码</p><h3 id="🖥参数说明">🖥参数说明</h3><p><code>text</code> 需要tokenize的文本</p><p><code>max_length</code> 接受文本的最大长度，默认512</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">encoded_inputs = self.encode_plus(text,</span><br><span class="line">                                  text_pair=text_pair,</span><br><span class="line">                                  max_length=max_length,</span><br><span class="line">                                  add_special_tokens=add_special_tokens,</span><br><span class="line">                                  stride=stride,</span><br><span class="line">                                  truncation_strategy=truncation_strategy,</span><br><span class="line">                                  return_tensors=return_tensors,</span><br><span class="line">                                  **kwargs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> encoded_inputs[<span class="string">&quot;input_ids&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="🖥常用">🖥常用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">encoded_input = tokenizer.encode_plus(_, max_length=<span class="number">512</span>, add_special_tokens=<span class="literal">True</span>, pad_to_max_length=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>,  truncation=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="🖥返回值">🖥返回值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">encode_input[<span class="string">&quot;input_ids&quot;</span>].shape=[<span class="number">1</span>, max_length]<span class="keyword">or</span>[<span class="number">2</span>, max_length]</span><br></pre></td></tr></table></figure><h1>Reference</h1><p><a href="https://blog.csdn.net/qq_33293040/article/details/105439750">Transformers包tokenizer.encode()方法源码阅读笔记</a></p>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> transformer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>torch.nn.LSTM()详解</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Pytorch/torch.nn.lstm/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Pytorch/torch.nn.lstm/</url>
      
        <content type="html"><![CDATA[<h3 id="输入的参数列表包括">输入的参数列表包括:</h3><ul><li><code>input_size</code> 输入数据的特征维数，通常就是<code>embedding_dim</code>(词向量的维度)</li><li><code>hidden_size</code> LSTM中隐层的维度，<code>bidirectional</code> =True时，<code>hidden_size</code> 减半</li><li><code>num_layers</code> 循环神经网络的层数</li><li><code>bias</code> 用不用偏置，default=True</li><li><code>batch_first</code> 这个要注意，通常我们输入的数据shape=(<code>batch_size</code>, <code>seq_length</code>, <code>embedding_dim</code>),而<code>batch_first</code>默认是False,所以我们的输入数据最好送进LSTM之前将<code>batch_size</code>与<code>seq_length</code>这两个维度调换</li><li><code>dropout</code> 默认是0，代表不用dropout</li><li><code>bidirectional</code>默认是false，代表不用双向LSTM</li></ul><h3 id="输入数据包括input-h-0-c-0">输入数据包括input,(h_0,c_0):</h3><ul><li><code>input</code>就是shape=(<code>seq_length</code>, <code>batch_size</code>, <code>input_size</code>)的张量</li><li><code>h_0</code>是shape=(<code>num_layers</code>*<code>num_directions</code>, <code>batch_size</code>, <code>hidden_size</code>)的张量，它包含了在当前这个batch_size中每个句子的初始隐藏状态。其中num_layers就是LSTM的层数。如果<code>bidirectional</code>=True, num_directions=2,否则就是１，表示只有一个方向。如果<code>bidirectional</code>=True，<code>hidden_size</code> //2</li><li><code>c_0</code>和<code>h_0</code>的形状相同，它包含的是在当前这个batch_size中的每个句子的初始细胞状态。<code>h_0</code>,<code>c_0</code>如果不提供，那么默认是０。</li></ul><h3 id="输出数据包括output-h-n-c-n">输出数据包括output,(h_n, c_n):</h3><ul><li><code>output</code>的shape=(<code>seq_length</code>, <code>batch_size</code>, <code>num_directions</code>*<code>hidden_size</code>),<br>它包含的是LSTM的最后一时间步的输出特征(h_t),ｔ是batch_size中每个句子的长度。</li><li><code>h_n.shape</code>==(num_directions * num_layers, batch, hidden_size)</li><li><code>c_n.shape</code>==<code>h_n.shape</code></li><li>h_n包含的是句子的最后一个单词（也就是最后一个时间步）的隐藏状态，c_n包含的是句子的最后一个单词的细胞状态，所以 <strong>它们都与句子的长度seq_length无关</strong>。</li><li><code>output[-1]</code>与<code>h_n</code>是相等的，(<strong>只有当<code>bidirectional</code>=False时才相等，否则<code>output[-1]</code>是<code>h_n</code>拼接起来的)</strong>，因为<code>output[-1]</code>包含的正是<code>batch_size</code>个句子中每一个句子的最后一个单词的隐藏状态，注意LSTM中的隐藏状态其实就是输出，cell state细胞状态才是LSTM中一直隐藏的，记录着信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">batch_size=<span class="number">3</span></span><br><span class="line">hidden_size=<span class="number">5</span></span><br><span class="line">embedding_dim=<span class="number">6</span></span><br><span class="line">seq_length=<span class="number">4</span></span><br><span class="line">num_layers=<span class="number">1</span></span><br><span class="line">num_directions=<span class="number">1</span></span><br><span class="line">vocab_size=<span class="number">20</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">input_data=np.random.uniform(<span class="number">0</span>,<span class="number">19</span>,size=(batch_size,seq_length))</span><br><span class="line">input_data=torch.from_numpy(input_data).long()</span><br><span class="line">embedding_layer=torch.nn.Embedding(vocab_size,embedding_dim)</span><br><span class="line">lstm_layer=torch.nn.LSTM(input_size=embedding_dim,hidden_size=hidden_size,num_layers=num_layers,</span><br><span class="line">                        bias=<span class="literal">True</span>,batch_first=<span class="literal">False</span>,dropout=<span class="number">0.5</span>,bidirectional=<span class="literal">False</span>)</span><br><span class="line">lstm_input=embedding_layer(input_data)</span><br><span class="line"><span class="keyword">assert</span> lstm_input.shape==(batch_size,seq_length,embedding_dim)</span><br><span class="line">lstm_input.transpose_(<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">assert</span> lstm_input.shape==(seq_length,batch_size,embedding_dim)</span><br><span class="line">output,(h_n,c_n)=lstm_layer(lstm_input)</span><br><span class="line"><span class="keyword">assert</span> output.shape==(seq_length,batch_size,hidden_size)</span><br><span class="line"><span class="keyword">assert</span> h_n.shape==c_n.shape==(num_layers*num_directions,batch_size,hidden_size)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200223114310501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ1NDc4ODY1,size_16,color_FFFFFF,t_70" alt="https://img-blog.csdnimg.cn/20200223114310501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ1NDc4ODY1,size_16,color_FFFFFF,t_70"></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011539699.png" alt=""></p><h1>参考资料</h1><ol><li><a href="https://blog.csdn.net/m0_45478865/article/details/104455978">torch.nn.LSTM()详解</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hacintosh Tutorial</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Tools/Hackintosh/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Tools/Hackintosh/</url>
      
        <content type="html"><![CDATA[<ul><li><h1>Vmware</h1><h2 id="MacOS-11">MacOS 11</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smbios.reflectHost= &quot;TRUE&quot;</span><br><span class="line">hw.model = &quot;MacBookPro16,1&quot;</span><br><span class="line">board-id=&quot;Mac-E1008331FDC96864&quot;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wangchao_cn/article/details/109755360">vm安装11.15教程</a></p><p><a href="https://heipg.cn/tutorial/basic-install-hackintosh-walkthrough.html">教程</a></p><p><a href="https://www.jianshu.com/p/342b322e3841">这可能是对“小白”最友好的黑苹果安装教程（Catalina 10.15.5 安装记录）</a></p><p><a href="https://blog.csdn.net/Su_Yi/article/details/93773558">关于黑苹果的EFI该如何的配置和Config Configuration工具的使用</a></p><p><a href="https://www.jianshu.com/p/22b5e9db1780">黑苹果安装过程（10.13.617G7024）</a></p><p><a href="https://blog.daliansky.net/macOS-BigSur-11.5.2-20G95-Release-version-with-OC-0.7.1-and-Clover-5138-and-PE-original-image.html#more">黑果小兵教程</a></p><p><a href="https://blog.daliansky.net/categories/%E4%B8%8B%E8%BD%BD/">黑果小兵镜像</a></p><p><a href="https://www.apple114.com/pages/macos/">系统下载</a></p><p><a href="https://blog.daliansky.net/Hackintosh-long-term-maintenance-model-checklist.html">黑果小兵机型efi清单</a></p><p>镜像损坏</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig en0 down</span><br><span class="line">date 022208102015.20</span><br></pre></td></tr></table></figure><p><a href="https://www.intel.cn/content/www/cn/zh/support/articles/000023781/graphics.html">如何确定英特尔®显卡支持的最大分辨率</a></p><h1><a href="https://heipg.cn/">黑苹果星球</a></h1><h1>OpenCore 文件生成</h1><p><a href="https://www.mfpud.com/opencore/ocgenx/">OC Gen-X下载</a></p><h1><a href="https://heipg.cn/tutorial/install-macos-via-internet-recovery.html">恢复版安装教程</a></h1><ol><li>保证PC能联网，不管是有线还是无线都可以</li><li>将一块硬盘扇区全部删除，用DiskGenius在硬盘的最前端创建1个3G的ESP分区，并格式化。将系统恢复文件和EFI文件拷贝进去。</li><li>用EasyUEFI创建EFI引导，引导到第二部的ESP分区的路径/EFI/OC/opencore.efi文件，保存重启</li><li>进入BIOS，将第三部设置的引导设置为第一位。重启</li><li>安装盘名为<code>NONAME</code></li><li>其他正常安装。</li></ol><p><a href="https://macoshome.com/hackintosh/hcourse/6103.html">https://macoshome.com/hackintosh/hcourse/6103.html</a></p><h1>i5 4690k+GTX970</h1><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011445612.png" alt=""></p><h1>惠普战66G1Pro双系统</h1><ol><li>划分2个独立的磁盘，一个用DiskGenius创建ESP盘格式化，大约2G，另外一个用windows磁盘管理工具，创建一个盘，不要格式化。（<a href="https://blog.csdn.net/weixin_43971764/article/details/106075438">双系统磁盘创建</a>）</li><li>将EFI文件和恢复版系统拷贝进ESP分区</li><li>用EasyEFI工具创建EFI引导</li><li>其他一样</li></ol><h1>OpenCore Configurator</h1><p><a href="https://macoshome.com/hackintosh/htools/2100.html#Down">下载地址</a></p><p><a href="https://gitee.com/shuiyunxc/OpenCore-Configurator">版本说明</a></p><p><a href="https://macx.top/8780.html">使用教程</a></p><p><a href="http://softwareupdate.vmware.com/cds/vmw-desktop/fusion">vmtools</a></p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011445614.jpg" alt=""></p><h2 id="无U盘恢复版教程">无U盘恢复版教程</h2><ol><li>创建ESP分区，建议2G</li><li>将EFI和恢复版系统文件夹拷贝进ESP分区</li><li>启动安装，中间大概重启2-3次</li><li>安装完成</li><li>将EFI文件拷贝进系统盘的ESP分区</li></ol><h2 id="关闭啰嗦模式">关闭啰嗦模式</h2><p>No2.关闭 -v 跑代码（关闭啰嗦模式）</p><p>NVRAM-随机访问寄存器设置 --&gt; 添加 --&gt; UUID：7C436110-AB2A-4BBB-A880-FE41995C9F82</p><p>查找键：<code>boot-args</code></p><p>删除值：<code>-v</code></p><h2 id="切换默认启动磁盘">切换默认启动磁盘</h2><p>启动界面按<code>Ctrl</code>+<code>Enter</code></p><h2 id="声卡设置">声卡设置</h2><p>DeviceProperties-设备属性设置</p><p>设备ID：<code>PciRoot(0x0)/Pci(0x1b,0x0)</code>必须存在，否则会无法识别耳机</p><h2 id="显卡设置">显卡设置</h2><p>DeviceProperties-设备属性设置</p><p>设备ID：<code>PciRoot(0x0)/Pci(0x2,0x0)</code>必须存在，否则会无法驱动显卡</p><h2 id="添加UEFI引导项">添加UEFI引导项</h2><p>「注意」使用 Clover 引导时，启动文件可选择 BOOTX64.efi 也可以选择 CLOVERX64.efi；但使用 OpenCore 引导时，启动文件必须选择 BOOTx64.efi，否则会造成莫名其妙的问题，切记切记！</p><h1>系统优化</h1><p><a href="https://www.jianshu.com/p/526975ef197a">mac OS 防止开机自动挂载磁盘/USB等外设 - 简书 (jianshu.com)</a></p><h2 id="启动参数说明">启动参数说明</h2><ul><li>-wegnoegpu 关闭外置GPU</li></ul><h2 id="打补丁教程">打补丁教程</h2><p><a href="https://zhuanlan.zhihu.com/p/158786596">【黑苹果系列】小白教程之DSD补丁篇 | 7分钟教你优雅定制最关键的OC补丁(clover通用) - 知乎 (zhihu.com)</a></p><h2 id="补丁说明">补丁说明</h2><ul><li>SSDT-OC-XOSI.aml 操作系统补丁，能解决OC无法引导windows。</li><li>SSDT-plug.aml 加载CPU原生电源管理（开启节能四项），必须</li><li><a href="https://link.zhihu.com/?target=https://dortania.github.io/Getting-Started-With-ACPI/Universal/ec-fix.html">SSDT-EC-USBX</a>（同SSDT-EC）：禁用EC（Embedded Controller）和修复USB充电问题，可选</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬件检测</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Tools/HardwareCheck/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Tools/HardwareCheck/</url>
      
        <content type="html"><![CDATA[<h1>硬件检测</h1><h2 id="硬盘速度">硬盘速度</h2><h3 id="MacOS">MacOS</h3><ul><li>DiskSpeedTest</li></ul><h3 id="windows">windows</h3><ul><li><p>ASSSD</p></li><li><p>CrystalDisk</p></li></ul><p><a href="https://www.laobuluo.com/6188.html">十大磁盘检测工具</a></p><p><a href="https://drivers.softpedia.com/dyn-search.php?search_term=Z97-D3H">D3H驱动下载</a></p><p><a href="https://drivers.softpedia.com/get/BIOS/?utm_source=spd&amp;utm_campaign=postdl_redir">驱动下载</a></p><p><a href="http://www.xitongcheng.com/jiaocheng/dnrj_article_52835.html">更新驱动教程</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VPN</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Tools/VPN/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Tools/VPN/</url>
      
        <content type="html"><![CDATA[<h1>自动化所</h1><table><thead><tr><th>Address</th><th><a href="http://vpn.ia.ac.cn">http://vpn.ia.ac.cn</a></th></tr></thead><tbody><tr><td>Account</td><td><a href="mailto:vpn1.nlprmmc@nlpr.ia.ac.cn">vpn1.nlprmmc@nlpr.ia.ac.cn</a></td></tr><tr><td>Password</td><td>vpn1@2019</td></tr></tbody></table><blockquote><p>Address:     <a href="http://vpn.ia.ac.cn">http://vpn.ia.ac.cn</a><br>Account:     <a href="mailto:vpn1.nlprmmc@nlpr.ia.ac.cn">vpn1.nlprmmc@nlpr.ia.ac.cn</a><br>Password:   vpn1@2019</p></blockquote><p><a href="http://download.sangfor.com.cn/download/product/sslvpn/pkg/mac_ec_sp/EasyConnect.dmg">EasyConnect下载地址</a></p><p><a href="https://202.197.228.8/portal/#!/down_client">https://202.197.228.8/portal/#!/down_client</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows常用软件</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Windows/windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Windows/windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>Everything</p><h1>FTP工具</h1><p><a href="https://www.filezilla.cn">FileZilla</a></p><h1>Office</h1><h2 id="office2021">office2021</h2><p>Microsoft Office 2021 ProPlus 专业增强版 简体中文版：<a href="https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-cn/ProPlus2021Retail.img">ProPlus2021Retail.img</a></p><p>Microsoft Visio 2021 Pro 专业版 简体中文版：<a href="https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-cn/VisioPro2021Retail.img">VisioPro2021Retail</a></p><p>Microsoft Project 2021 Pro 专业版 简体中文版：<a href="https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-cn/ProjectPro2021Retail.img">ProjectPro2021Retail</a></p><p>IMG格式的镜像文件在Windows 10~11里可以直接使用资源管理器挂载和打开，亦可使用7-Zip进行解压和提取，打开后直接运行根目录的Setup.exe即可安装。</p><h1>GIF</h1><p><a href="https://soft.3dmgame.com/down/173746.html">GifCam</a></p><h1>TextEditor</h1><p>Notepad++</p><p>emditor</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++基础知识</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Language/C++/C++/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Language/C++/C++/</url>
      
        <content type="html"><![CDATA[<h1>基础</h1><h1>STL</h1><h2 id="string">string</h2><h3 id="基本操作">基本操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s.empty()</span><br><span class="line">s.size()</span><br></pre></td></tr></table></figure><p>读写一行字符串：<code>getline(cin, line)</code></p><blockquote><p>atoi(char) 头文件 #include <cstdlib><br><code>atoi(line.c_str())</code>记住要转为C风格字符串</p></blockquote><h3 id="处理string中的字符">处理string中的字符</h3><p>头文件：<code>#include &lt;cctype&gt;</code></p><blockquote><p>是否是字符数字：<code> isalnum(c)</code><br>是否是字母：<code>isalpha(c)</code><br>是否是小写字母：<code>islower(c)</code><br>是否是大写字母：<code>isupper(c)</code><br>是否是数字：<code>isdigit(c)</code><br>是否是16进制数字：<code>isxdigit(c)</code><br>转小写字母：<code>tolower(c)</code><br>转大写字母：<code>toupper(c)</code><br>是否是标点符号：<code>ispunct(c)</code></p></blockquote><h4 id="Demo-code">Demo code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string input;</span><br><span class="line">    <span class="built_in">getline</span>(cin,input);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;sentence：&quot;</span>+input&lt;&lt;endl;</span><br><span class="line">    string s=<span class="string">&quot;Hello World!!!&quot;</span>;</span><br><span class="line">    <span class="type">int</span> cnt_punct=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c :s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">ispunct</span>(c))</span><br><span class="line">        &#123;</span><br><span class="line">            ++cnt_punct;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cnt_punct&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>string.split()</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Stringsplit</span><span class="params">(<span class="type">const</span> string&amp; str, <span class="type">const</span> <span class="type">char</span> split, vector&lt;string&gt;&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="string">&quot;&quot;</span>)      <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//在字符串末尾也加入分隔符，方便截取最后一段</span></span><br><span class="line">    string strs = str + split;</span><br><span class="line">    <span class="type">size_t</span> pos = strs.<span class="built_in">find</span>(split);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 若找不到内容则字符串搜索函数返回 npos</span></span><br><span class="line">    <span class="keyword">while</span> (pos != strs.npos)</span><br><span class="line">    &#123;</span><br><span class="line">        string temp = strs.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">        res.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        <span class="comment">//去掉已分割的字符串,在剩下的字符串中进行分割</span></span><br><span class="line">        strs = strs.<span class="built_in">substr</span>(pos + <span class="number">1</span>, strs.<span class="built_in">size</span>());</span><br><span class="line">        pos = strs.<span class="built_in">find</span>(split);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用字符串分割</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Stringsplit</span><span class="params">(<span class="type">const</span> string&amp; str, <span class="type">const</span> string&amp; splits, vector&lt;string&gt;&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="string">&quot;&quot;</span>)      <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//在字符串末尾也加入分隔符，方便截取最后一段</span></span><br><span class="line">    string strs = str + splits;</span><br><span class="line">    <span class="type">size_t</span> pos = strs.<span class="built_in">find</span>(splits);</span><br><span class="line">    <span class="type">int</span> step = splits.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 若找不到内容则字符串搜索函数返回 npos</span></span><br><span class="line">    <span class="keyword">while</span> (pos != strs.npos)</span><br><span class="line">    &#123;</span><br><span class="line">        string temp = strs.<span class="built_in">substr</span>(<span class="number">0</span>, pos);</span><br><span class="line">        res.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        <span class="comment">//去掉已分割的字符串,在剩下的字符串中进行分割</span></span><br><span class="line">        strs = strs.<span class="built_in">substr</span>(pos + step, strs.<span class="built_in">size</span>());</span><br><span class="line">        pos = strs.<span class="built_in">find</span>(splits);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;string&gt; strList;</span><br><span class="line">    <span class="function">string <span class="title">str</span><span class="params">(<span class="string">&quot;This-is-a-test&quot;</span>)</span></span>;</span><br><span class="line">    <span class="built_in">Stringsplit</span>(str, <span class="string">&#x27;-&#x27;</span>, strList);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> s : strList)</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;string&gt; strList2;</span><br><span class="line">    <span class="function">string <span class="title">str2</span><span class="params">(<span class="string">&quot;This%20is%20a%20test&quot;</span>)</span></span>;</span><br><span class="line">    <span class="built_in">Stringsplit</span>(str2, <span class="string">&quot;%20&quot;</span>, strList2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> s : strList2)</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/2236.html">C++ string详解，C++字符串详解</a></p><p><a href="https://www.jianshu.com/p/7b0e25d6c2c8">C++ string的常用操作</a></p><h2 id="List-双向链表">List 双向链表</h2><p><a href="http://c.biancheng.net/view/6892.html">C++ list（STL list）容器完全攻略（超级详细）</a></p><h2 id="Array">Array</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;array&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    array&lt;<span class="type">int</span>, 4&gt; values&#123;&#125;;</span><br><span class="line">    <span class="comment">//初始化 values 容器为 &#123;0,1,2,3&#125;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; values.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        values.<span class="built_in">at</span>(i) = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用 get() 重载函数输出指定位置元素</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in">get</span>&lt;<span class="number">3</span>&gt;(values) &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//如果容器不为空，则输出容器中所有的元素</span></span><br><span class="line">    <span class="keyword">if</span> (!values.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> val = values.<span class="built_in">begin</span>(); val &lt; values.<span class="built_in">end</span>(); val++) &#123;</span><br><span class="line">            cout &lt;&lt; *val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/6688.html">C++ array(STL array)容器用法详解</a></p><h2 id="vector">vector</h2><p>尾部添加元素：<code>push_back()</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; vals,sub;</span><br><span class="line">    vals.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    vals.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    vals.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    sub.<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">    sub.<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">    vals.<span class="built_in">insert</span>(vals.<span class="built_in">begin</span>()+<span class="number">1</span>,sub.<span class="built_in">begin</span>(), sub.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> a:vals) cout&lt;&lt;a&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/6749.html">C++ STL vector容器详解</a></p><h2 id="Queue">Queue</h2><p>queue 和 stack 有一些成员函数相似，但在一些情况下，工作方式有些不同：</p><ul><li><p>front()：返回 queue 中第一个元素的引用。如果 queue 是常量，就返回一个常引用；如果 queue 为空，返回值是未定义的。</p></li><li><p>back()：返回 queue 中最后一个元素的引用。如果 queue 是常量，就返回一个常引用；如果 queue 为空，返回值是未定义的。</p></li><li><p>push(const T&amp; obj)：在 queue 的尾部添加一个元素的副本。这是通过调用底层容器的成员函数 push_back() 来完成的。</p></li><li><p>push(T&amp;&amp; obj)：以移动的方式在 queue 的尾部添加元素。这是通过调用底层容器的具有右值引用参数的成员函数 push_back() 来完成的。</p></li><li><p>pop()：删除 queue 中的第一个元素。</p></li><li><p>size()：返回 queue 中元素的个数。</p></li><li><p>empty()：如果 queue 中没有元素的话，返回 true。</p></li><li><p>emplace()：用传给 emplace() 的参数调用 T 的构造函数，在 queue 的尾部生成对象。</p></li><li><p>swap(queue<T> &amp;other_q)：将当前 queue 中的元素和参数 queue 中的元素交换。它们需要包含相同类型的元素。也可以调用全局函数模板 swap() 来完成同样的操作。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    deque&lt;<span class="type">double</span>&gt; values &#123;<span class="number">1.5</span>, <span class="number">2.5</span>, <span class="number">3.5</span>, <span class="number">4.5</span>&#125;; </span><br><span class="line">    <span class="function">queue&lt;<span class="type">double</span>&gt; <span class="title">numbers</span><span class="params">(values)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        numbers.<span class="built_in">push</span>(i); <span class="comment">//队尾添加元素</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!numbers.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt;numbers.<span class="built_in">front</span>() &lt;&lt; <span class="string">&quot; &quot;</span>; <span class="comment">// 查询队首</span></span><br><span class="line">        numbers.<span class="built_in">pop</span>();  <span class="comment">// 弹出队首</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/479.html">C++ queue(STL queue)用法详</a><strong><a href="http://c.biancheng.net/view/479.html">解</a></strong></p><h2 id="deque-双边队列">deque 双边队列</h2><p><a href="http://c.biancheng.net/view/6860.html">C++ STL deque容器（详解版）</a></p><h2 id="stack">stack</h2><p>下面是 stack 容器可以提供的一套完整操作：</p><ul><li><p>top()：返回一个栈顶元素的引用，类型为 T&amp;。如果栈为空，返回值未定义。</p></li><li><p>push(const T&amp; obj)：可以将对象副本压入栈顶。这是通过调用底层容器的 push_back() 函数完成的。</p></li><li><p>push(T&amp;&amp; obj)：以移动对象的方式将对象压入栈顶。这是通过调用底层容器的有右值引用参数的 push_back() 函数完成的。</p></li><li><p>pop()：弹出栈顶元素。</p></li><li><p>size()：返回栈中元素的个数。</p></li><li><p>empty()：在栈中没有元素的情况下返回 true。</p></li><li><p>emplace()：用传入的参数调用构造函数，在栈顶生成对象。</p></li><li><p>swap(stack<T> &amp; other_stack)：将当前栈中的元素和参数中的元素交换。参数所包含元素的类型必须和当前栈的相同。对于 stack 对象有一个特例化的全局函数 swap() 可以使用。</p></li></ul><h3 id="Demo-code-2">Demo code</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    list&lt;string&gt; ls&#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;python&quot;</span>,<span class="string">&quot;go&quot;</span>,<span class="string">&quot;c++&quot;</span>&#125;;</span><br><span class="line">    stack&lt;string,list&lt;string&gt;&gt; <span class="built_in">st</span>(ls);</span><br><span class="line">    st.<span class="built_in">emplace</span>(<span class="string">&quot;ruby&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(!st.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;st.<span class="built_in">top</span>()&lt;&lt;endl;</span><br><span class="line">        st.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/478.html">C++ stack(STL stack)用法详解</a></p><h2 id="map">map</h2><p>底层用的红黑树，会自动按照key排序，如果不需要排序，建议使用<code>unordered_map</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    map&lt;string, <span class="type">int</span>&gt; myMap&#123; &#123;<span class="string">&quot;c&quot;</span>,<span class="number">10</span>&#125;,&#123;<span class="string">&quot;d&quot;</span>,<span class="number">20</span>&#125; &#125;;</span><br><span class="line">    map&lt;string, <span class="type">int</span>&gt;<span class="built_in">newMap</span>(++myMap.<span class="built_in">begin</span>(), myMap.<span class="built_in">end</span>());</span><br><span class="line">    myMap.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(<span class="string">&quot;java&quot;</span>,<span class="number">30</span>));    </span><br><span class="line">    myMap.<span class="built_in">emplace</span>(<span class="built_in">pair</span>&lt;string, <span class="type">int</span>&gt;(<span class="string">&quot;go&quot;</span>, <span class="number">5</span>));</span><br><span class="line">    myMap.<span class="built_in">emplace</span>(<span class="built_in">make_pair</span>(<span class="string">&quot;C++&quot;</span>,<span class="number">40</span>));</span><br><span class="line">    <span class="keyword">auto</span> itera = myMap.<span class="built_in">find</span>(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(itera!= myMap.<span class="built_in">end</span>())&#123;</span><br><span class="line">        cout&lt;&lt;itera-&gt;second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> p : myMap)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;p.first&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;p.second&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/7173.html">C++ STL map容器详解</a></p><p><a href="http://c.biancheng.net/view/7231.html">C++ STL unordered_map容器用法详解</a></p><h2 id="Set">Set</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    set&lt;string&gt; sets&#123;<span class="string">&quot;c++&quot;</span>,<span class="string">&quot;java&quot;</span>,<span class="string">&quot;go&quot;</span>&#125;;</span><br><span class="line">    sets.<span class="built_in">insert</span>(<span class="string">&quot;python&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> a : sets)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    sets.<span class="built_in">erase</span>();  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/stl/set/">C++ set容器（STL set容器）</a></p><p><a href="http://c.biancheng.net/view/7192.html">C++ STL set容器完全攻略（超级详细）</a></p><h2 id="泛型算法">泛型算法</h2><p>#include <algorithm></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swap(a,b)</span><br></pre></td></tr></table></figure><p>reverse()</p><p>sort()</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;array&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    array&lt;<span class="type">int</span>,7&gt; a&#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    array&lt;<span class="type">int</span>,4&gt; b&#123;<span class="number">2</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t:a)</span><br><span class="line">        cout&lt;&lt;t&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),[](<span class="type">int</span> a, <span class="type">int</span> b) -&gt; <span class="type">bool</span> &#123; <span class="keyword">return</span> a &gt; b; &#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t:a)</span><br><span class="line">        cout&lt;&lt;t&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t:a)</span><br><span class="line">        cout&lt;&lt;t&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/view/607.html">C++ unique(STL unique)算法详解</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;array&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="comment">// int a[] = &#123;1,2,3,7,6,3,4&#125;;</span></span><br><span class="line">    array&lt;<span class="type">int</span>,7&gt; a&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">sizeof</span>(a)/<span class="built_in">sizeof</span>(<span class="type">int</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">sort</span>(<span class="built_in">begin</span>(a), <span class="built_in">end</span>(a));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t:a)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;t&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">auto</span> end_iter = <span class="built_in">unique</span>(<span class="built_in">begin</span>(a), <span class="built_in">end</span>(a));</span><br><span class="line">    <span class="built_in">copy</span>(<span class="built_in">begin</span>(a), <span class="built_in">end</span>(a), ostream_iterator&lt;<span class="type">int</span>&gt;&#123;cout, <span class="string">&quot; &quot;</span>&#125;);</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t:a)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;t&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ylaoda/p/11412081.html">常用算法</a></p><h2 id="Lamda">Lamda</h2><p><a href="http://c.biancheng.net/view/3741.html">C++11 lambda表达式精讲</a></p><p><a href="https://www.cnblogs.com/DswCnblog/p/5629165.html">C++11 lambda表达式</a></p><p>min_element()</p><p>partition()</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partition(nums.<span class="keyword">begin</span>(), nums.<span class="keyword">end</span>(), [](<span class="keyword">const</span> int n)&#123; <span class="keyword">return</span> n&amp;<span class="number">1</span>; &#125;);</span><br></pre></td></tr></table></figure><h1>面试宝典</h1><p><a href="https://blog.csdn.net/qq_35034604/article/details/107959429">史上最全的C++面试宝典（合集）</a></p><p><a href="https://blog.csdn.net/y601500359/article/details/105262815">C/C++面试宝典2020版(最新版)</a></p><h1>待定</h1><h6 id="HelloWorld">HelloWorld</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;HelloWorld!&quot;</span>&lt;&lt;endl;    </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="输入输出">输入输出</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string input;</span><br><span class="line">    <span class="comment">// Hello World!</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">getline</span>(cin,input))</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;sentence：&quot;</span>+input&lt;&lt;endl;</span><br><span class="line">        vector&lt;string&gt;  strs;</span><br><span class="line">              </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello World&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础知识</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Language/Java/Java/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Language/Java/Java/</url>
      
        <content type="html"><![CDATA[<h1>basic Language</h1><p>HelloWorld</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HelloChina</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="泛型">泛型</h2><p><a href="https://www.cnblogs.com/liuyongyu/p/12457195.html">和的区别</a></p><h2 id="常见类">常见类</h2><p><a href="https://baijiahao.baidu.com/s?id=1653790035315010634&amp;wfr=spider&amp;for=pc">ThreadLocal</a></p><h1>Framework</h1><h2 id="spring-boot">spring boot</h2><p><a href="https://blog.csdn.net/diaoling1990/article/details/82356747">新建项目</a></p><h2 id="Groovy">Groovy</h2><p><a href="https://www.jianshu.com/p/e8dec95c4326">Groovy 语言快速入门</a></p><h1>常见问题</h1><p><a href="https://blog.csdn.net/qq8693/article/details/86166953">SpringBoot+MyBatis整合中的坑以及Property ‘sqlSessionFactory’ or ‘sqlSessionTemplate’ are required错误详解</a></p><h1>Reference</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python入门</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Language/Python/Python/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Language/Python/Python/</url>
      
        <content type="html"><![CDATA[<h1>入门</h1><h2 id="参考资料">参考资料</h2><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017024645952992">廖雪峰python教程</a></p><p><a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/index.html">cookbook</a></p><p><a href="http://c.biancheng.net/view/2380.html">答疑</a></p><h2 id="基础">基础</h2><ul><li><a href="https://www.cnblogs.com/rgxx/p/10899440.html">f-string格式化</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k=<span class="number">123.45</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;123:5.1f&quot;</span>)</span><br></pre></td></tr></table></figure><p>[Python 中下划线的 5 种含义 | 菜鸟教程 (<a href="http://runoob.com">runoob.com</a>)](<a href="https://www.runoob.com/w3cnote/python-5-underline.html#:~:text=%E4%B8%8B%E5%88%92%E7%BA%BF%E5%89%8D%E7%BC%80%E7%9A%84%E5%90%AB%E4%B9%89%E6%98%AF%E5%91%8A%E7%9F%A5%E5%85%B6%E4%BB%96%E7%A8%8B%E5%BA%8F%E5%91%98%EF%BC%9A%E4%BB%A5%E5%8D%95%E4%B8%AA%E4%B8%8B%E5%88%92%E7%BA%BF%E5%BC%80%E5%A4%B4%E7%9A%84%E5%8F%98%E9%87%8F%E6%88%96%E6%96%B9%E6%B3%95%E4%BB%85%E4%BE%9B%E5%86%85%E9%83%A8%E4%BD%BF%E7%94%A8%E3%80%82">https://www.runoob.com/w3cnote/python-5-underline.html#:~:text=下划线前缀的含义是告知其他程序员：以单个下划线开头的变量或方法仅供内部使用。</a> 该约定在PEP 8中有定义。 这不是Python强制规定的。 Python不像Java那样在&quot;私有&quot;和&quot;公共&quot;变量之间有很强的区别。 这就像有人提出了一个小小的下划线警告标志，说： “嘿，这不是真的要成为类的公共接口的一部分。 不去管它就好。,” 如果你实例化此类，并尝试访问在__init__构造函数中定义的foo和_bar属性，会发生什么情况？ 让我们来看看： 你会看到_bar中的单个下划线并没有阻止我们&quot;进入&quot;类并访问该变量的值。 这是因为Python中的单个下划线前缀仅仅是一个约定 - 至少相对于变量和方法名而言。 但是，前导下划线的确会影响从模块中导入名称的方式。)</p><h2 id="常用">常用</h2><h3 id="time">time</h3><ul><li><a href="https://www.cnblogs.com/qi-yuan-008/p/12418822.html">python求时间差</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, date</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">elapse</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">        time1 = datetime.now()</span><br><span class="line">        temp = func(*args, **kw)</span><br><span class="line">        time2 = datetime.now()</span><br><span class="line">        elapse = (time2-time1).microseconds/<span class="number">1000</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;time2&#125;</span>-FunctionName:<span class="subst">&#123;func.__name__:&#125;</span>-Elapse:<span class="subst">&#123;elapse:<span class="number">.3</span>f&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> temp</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@elapse</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----Test-----&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>问答</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Language/Python/matplotlib/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Language/Python/matplotlib/</url>
      
        <content type="html"><![CDATA[<h2 id="绘制曲线图">绘制曲线图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">train_losses, train_accuracy = [], []</span><br><span class="line">val_losses, val_accuracy = [], []</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    epoch_loss, epoch_accuracy = fit(epoch, model, train_loader, phase=<span class="string">&#x27;training&#x27;</span>)</span><br><span class="line">    val_epoch_loss, val_epoch_accuracy = fit(epoch, model, test_loader, phase=<span class="string">&#x27;validation&#x27;</span>)</span><br><span class="line">    train_losses.append(epoch_loss)</span><br><span class="line">    train_accuracy.append(epoch_accuracy)</span><br><span class="line">    val_losses.append(val_epoch_loss)</span><br><span class="line">    val_accuracy.append(val_epoch_accuracy)</span><br><span class="line"></span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(train_losses) + <span class="number">1</span>), train_losses, marker=<span class="string">&quot;o&quot;</span>, color=<span class="string">&quot;blue&quot;</span>, label=<span class="string">&#x27;training loss&#x27;</span>)</span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(val_losses) + <span class="number">1</span>), val_losses, <span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;validation loss&#x27;</span>)</span><br><span class="line">plt.legend() </span><br><span class="line">plt.show()</span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(train_accuracy) + <span class="number">1</span>), train_accuracy, <span class="string">&#x27;bo&#x27;</span>, label=<span class="string">&#x27;train accuracy&#x27;</span>)</span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(val_accuracy) + <span class="number">1</span>), val_accuracy, <span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;val accuracy&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_40683253/article/details/87376085">Matplotlib - 折线图 plot() 所有用法详解</a></p><p><a href="https://blog.csdn.net/sinat_36219858/article/details/79800460">matplotlib.pyplot.plot()参数详解</a></p><p><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html">官方资料</a></p><h3 id="绘制正余弦">绘制正余弦</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot as plt</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">x_len = <span class="number">50</span></span><br><span class="line">train_losses = [math.sin(i/x_len*<span class="number">2</span>*math.pi) <span class="keyword">for</span> i in <span class="keyword">range</span>(x_len)]</span><br><span class="line">val_losses = [math.cos(i/x_len*<span class="number">2</span>*math.pi) <span class="keyword">for</span> i in <span class="keyword">range</span>(x_len)]</span><br><span class="line"></span><br><span class="line">plt.plot(<span class="keyword">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(train_losses) + <span class="number">1</span>), train_losses,marker=<span class="string">&quot;o&quot;</span>, color=<span class="string">&quot;blue&quot;</span>, lineStyle=<span class="string">&quot;-&quot;</span>, label=<span class="string">&#x27;training loss&#x27;</span>)</span><br><span class="line">plt.plot(<span class="keyword">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(val_losses) + <span class="number">1</span>), val_losses, color=<span class="string">&quot;red&quot;</span>, label=<span class="string">&#x27;validation loss&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python环境配置</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Language/Python/python-env-configurate/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Language/Python/python-env-configurate/</url>
      
        <content type="html"><![CDATA[<h1>一、anaconda</h1><h2 id="基础-2">基础</h2><p><a href="https://blog.csdn.net/ha_ha_ha233/article/details/87475799">Anaconda安装</a></p><p><a href="http://www.360doc.com/content/18/1209/11/11881101_800396689.shtml">conda和pip比较</a></p><p><strong>创建Python虚拟环境</strong></p><p>使用 conda create -n your_env_name python=X.X（2.7、3.6等） anaconda 命令创建python版本为X.X、名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件下找到。</p><p><code>conda create -n cs python=3.7</code></p><h2 id="常用功能代码">常用功能代码</h2><p><a href="https://www.jianshu.com/p/7265011ba3f2">conda 创建/删除/重命名 环境</a></p><p><strong>查看已有环境</strong></p><p><code>conda env list</code></p><p><strong>切换环境：</strong></p><ul><li><p>windows: <code>conda activate xxx(env name)</code></p></li><li><p>linux: <code>source activate xxx(env name)</code></p></li></ul><p><strong>查看当前环境安装包</strong>：</p><p><code>conda list</code></p><p><strong>查看包版本</strong></p><p><code>conda list PackageName</code></p><p><strong>复制环境</strong></p><p><code>conda create -n NEWNAME --clone OLDNAME</code></p><p><strong>删除环境</strong></p><p><code>conda remove -n NAME --all</code></p><p><strong>卸载安装包</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda uninstall XXX</span><br><span class="line">conda remove XXX</span><br><span class="line">pip uninstall  XXX</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wanttifa/article/details/92845377">更新卸载制定包</a></p><h1>二、virtualenv</h1><p><a href="https://blog.csdn.net/weixin_41521681/article/details/98070414">python虚拟环境： conda create与 virtualenv对比</a></p><p><strong>安装virtualenv</strong></p><p>​<code>pip install virtualenv</code></p><p><strong>创建虚拟环境</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir myproject</span><br><span class="line">cd myproject</span><br><span class="line">virtualenv venv</span><br></pre></td></tr></table></figure><blockquote><p>创建了一个名为myproject的文件夹，然后这里边创建虚拟环境venv。</p></blockquote><p>在创建virtualenv时增加–no-site-packages 选项的virtualenv就不会读取系统包，如下：</p><p><code>virtualenv nowamagic_venv --no-site-packages</code></p><p>–distribute选项使virtualenv使用新的基于发行版的包管理系统而不是 setuptools 获得的包。 你现在需要知道的就是 --distribute 选项会自动在新的虚拟环境中安装 pip ，这样就不需要手动安装了。 当你成为一个更有经验的Python开发者，你就会明白其中细节。</p><p><code>virtualenv --distribute nowamagic_venv</code></p><p><strong>激活虚拟环境</strong></p><p>Linux: <code> venv/bin/activate</code> 或者<code>source $ENV_BASE_DIR/$ENVIRONMENT_NAME/bin/activate</code></p><p>没有实验，所以暂时写两种方法，如果此时进入到venv虚拟环境文件夹下，可以source bin/activate</p><p>Windows:$ <code>venv\scripts\activate</code></p><p><strong>退出环境</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vim常用命令详解</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Linux/LinuxCmd/vim/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Linux/LinuxCmd/vim/</url>
      
        <content type="html"><![CDATA[<h1>菜鸟教程</h1><h1>Linux vi/vim</h1><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p><p>但是目前我们使用比较多的是 vim 编辑器。</p><p>vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p><p>相关文章：<a href="https://www.runoob.com/w3cnote/all-vim-cheatsheat.html">史上最全Vim快捷键键位图 — 入门到进阶</a></p><hr><h2 id="什么是-vim？">什么是 vim？</h2><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p><p>连 vim 的官方网站 (<a href="https://www.vim.org/">https://www.vim.org/</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p><p>vim 键盘图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif" alt="img"></p><hr><h2 id="vi-vim-的使用">vi/vim 的使用</h2><p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）<strong>和</strong>底线命令模式（Last line mode）</strong>。 这三种模式的作用分别是：</p><h3 id="命令模式：">命令模式：</h3><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul><li><strong>i</strong> 切换到输入模式，以输入字符。</li><li><strong>x</strong> 删除当前光标所在处的字符。</li><li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><h3 id="输入模式">输入模式</h3><p>在命令模式下按下i就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及Shift组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</li><li><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><h3 id="底线命令模式">底线命令模式</h3><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><p>按ESC键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204021859468.png" alt=""></p><hr><h2 id="vi-vim-使用实例">vi/vim 使用实例</h2><h3 id="使用-vi-vim-进入一般模式">使用 vi/vim 进入一般模式</h3><p>如果你想要使用 vi 来建立一个名为 runoob.txt 的文件时，你可以这样做：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim runoob.txt</span><br></pre></td></tr></table></figure><p>直接输入 <strong>vi 文件名</strong> 就能够进入 vi 的一般模式了。请注意，记得 vi 后面一定要加文件名，不管该文件存在与否！</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204021900098.png" alt=""></p><h3 id="按下-i-进入输入模式-也称为编辑模式-，开始编辑文字">按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</h3><p>在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！</p><p>在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。</p><p>这个时候，键盘上除了 <strong>Esc</strong> 这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204021900532.png" alt=""></p><h3 id="按下-ESC-按钮回到一般模式">按下 ESC 按钮回到一般模式</h3><p>好了，假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下 <strong>Esc</strong> 这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！</p><h3 id="在一般模式中按下-wq-储存后离开-vi">在一般模式中按下 <strong>:wq</strong> 储存后离开 vi</h3><p>OK，我们要存档了，存盘并离开的指令很简单，输入 <strong>:wq</strong> 即可保存离开！</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204021900443.png" alt=""></p><p>OK! 这样我们就成功创建了一个 runoob.txt 的文件。</p><h2 id="vi-vim-按键说明">vi/vim 按键说明</h2><p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p><h3 id="第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等">第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</h3><table><thead><tr><th style="text-align:left">移动光标的方法</th><th></th></tr></thead><tbody><tr><td style="text-align:left">h 或 向左箭头键(←)</td><td>光标向左移动一个字符</td></tr><tr><td style="text-align:left">j 或 向下箭头键(↓)</td><td>光标向下移动一个字符</td></tr><tr><td style="text-align:left">k 或 向上箭头键(↑)</td><td>光标向上移动一个字符</td></tr><tr><td style="text-align:left">l 或 向右箭头键(→)</td><td>光标向右移动一个字符</td></tr><tr><td style="text-align:left">如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 “30j” 或 “30↓” 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可！</td><td></td></tr><tr><td style="text-align:left">[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td style="text-align:left">[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td style="text-align:left">[Ctrl] + [d]</td><td>屏幕『向下』移动半页</td></tr><tr><td style="text-align:left">[Ctrl] + [u]</td><td>屏幕『向上』移动半页</td></tr><tr><td style="text-align:left">+</td><td>光标移动到非空格符的下一行</td></tr><tr><td style="text-align:left">-</td><td>光标移动到非空格符的上一行</td></tr><tr><td style="text-align:left">n<space></td><td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。</td></tr><tr><td style="text-align:left">0 或功能键[Home]</td><td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td></tr><tr><td style="text-align:left">$ 或功能键[End]</td><td>移动到这一行的最后面字符处(常用)</td></tr><tr><td style="text-align:left">H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td style="text-align:left">M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td style="text-align:left">L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td style="text-align:left">G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td style="text-align:left">nG</td><td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td style="text-align:left">gg</td><td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td style="text-align:left">n<Enter></td><td>n 为数字。光标向下移动 n 行(常用)</td></tr><tr><td style="text-align:left">搜索替换</td><td></td></tr><tr><td style="text-align:left">/word</td><td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)</td></tr><tr><td style="text-align:left">?word</td><td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td style="text-align:left">n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td style="text-align:left">N</td><td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr><tr><td style="text-align:left">使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td><td></td></tr><tr><td style="text-align:left">:n1,n2s/word1/word2/g</td><td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s/vbird/VBIRD/g』。(常用)</td></tr><tr><td style="text-align:left"><strong>:1,$s/word1/word2/g</strong> 或 <strong>:%s/word1/word2/g</strong></td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td style="text-align:left"><strong>:1,$s/word1/word2/gc</strong> 或 <strong>:%s/word1/word2/gc</strong></td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr><tr><td style="text-align:left">删除、复制与贴上</td><td></td></tr><tr><td style="text-align:left">x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td style="text-align:left">nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td style="text-align:left">dd</td><td>剪切游标所在的那一整行(常用)，用 p/P 可以粘贴。</td></tr><tr><td style="text-align:left">ndd</td><td>n 为数字。剪切光标所在的向下 n 行，例如 20dd 则是剪切 20 行(常用)，用 p/P 可以粘贴。</td></tr><tr><td style="text-align:left">d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td style="text-align:left">dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td style="text-align:left">d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td style="text-align:left">d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td style="text-align:left">yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td style="text-align:left">nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td style="text-align:left">y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td style="text-align:left">yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td style="text-align:left">y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td style="text-align:left">y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td style="text-align:left">p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td style="text-align:left">J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td style="text-align:left">c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td style="text-align:left">u</td><td>复原前一个动作。(常用)</td></tr><tr><td style="text-align:left">[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td style="text-align:left">这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！</td><td></td></tr><tr><td style="text-align:left">.</td><td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr></tbody></table><h3 id="第二部分：一般模式切换到编辑模式的可用的按钮说明">第二部分：一般模式切换到编辑模式的可用的按钮说明</h3><table><thead><tr><th style="text-align:left">进入输入或取代的编辑模式</th><th></th></tr></thead><tbody><tr><td style="text-align:left">i, I</td><td>进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td></tr><tr><td style="text-align:left">a, A</td><td>进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td style="text-align:left">o, O</td><td>进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)</td></tr><tr><td style="text-align:left">r, R</td><td>进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td style="text-align:left">上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</td><td></td></tr><tr><td style="text-align:left">[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table><h3 id="第三部分：一般模式切换到指令行模式的可用的按钮说明">第三部分：一般模式切换到指令行模式的可用的按钮说明</h3><table><thead><tr><th style="text-align:left">指令行的储存、离开等指令</th><th></th></tr></thead><tbody><tr><td style="text-align:left">:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td style="text-align:left">:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td style="text-align:left">:q</td><td>离开 vi (常用)</td></tr><tr><td style="text-align:left">:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td style="text-align:left">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td><td></td></tr><tr><td style="text-align:left">:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td style="text-align:left">ZZ</td><td>这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)</td></tr><tr><td style="text-align:left">ZQ</td><td>不保存，强制退出。效果等同于 <strong>:q!</strong>。</td></tr><tr><td style="text-align:left">:w [filename]</td><td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td style="text-align:left">:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td style="text-align:left">:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td style="text-align:left">:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr><tr><td style="text-align:left">vim 环境的变更</td><td></td></tr><tr><td style="text-align:left">:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td style="text-align:left">:set nonu</td><td>与 set nu 相反，为取消行号！</td></tr></tbody></table><p>特别注意，在 vi/vim 中，数字是很有意义的！数字通常代表重复做几次的意思！ 也有可能是代表去到第几个什么什么的意思。</p><p>举例来说，要删除 50 行，则是用 『50dd』 对吧！ 数字加在动作之前，如我要向下移动 20 行呢？那就是『20j』或者是『20↓』即可。</p><h1>📝总结</h1><ol><li>光标移动:</li></ol><blockquote><p>基础模式下的 h j k  l 对应小键盘 左 下 上 右</p></blockquote><ol start="2"><li>移动操作:</li></ol><blockquote><p>0: 移至行首<br>$: 移至行尾<br>gg: 移至全文首行<br>G: 移至全文末行<br>nG: 移至第n行<br>ctrl + g: 查看当前行数<br>nw: 往前进n个单词并停在词头<br>ne: 往前进n个单词并停在词尾<br>ctrl+O: 后退一次的光标位置<br>ctrl+I: 前进一次的光标位置</p></blockquote><ol start="3"><li>删除操作:</li></ol><blockquote><p>dd: 删除(剪切)整行 ( ndd: 删除向下n行)<br>x: 删除光标处字符<br>dnw:删除n个单词<br>de: 从光标删到词末<br>d$ : 从光标删到行末</p></blockquote><ol start="4"><li>16进制编辑</li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换16进制</span></span><br><span class="line">:%!xxd</span><br><span class="line"><span class="comment"># 改变回来</span></span><br><span class="line">:%!xxd -r</span><br></pre></td></tr></table></figure><ol start="5"><li><p>插入操作:<br>o: 当前行下方插入空行并进入插入模式 O: 当前行上方插入一行并进入插入模式 A: 当前光标所在行尾处插入 a: 当前光标后一位处插入 i: 当前光标处插入</p></li><li><p>修改操作:<br>r : 替换光标所在处字符 R: 连续替换光标所在处字符 cw: 修改单词到词尾 c$: 修改内容到行尾 ndd + p: 成行的剪切+粘贴 :s/old/new: 将所在行的第一个old换成new :s/old/new/g: 将所在行的所有old换成new :%s/old/new/g: 将所在文本的所有old换成new :%s/old/new/gc: 将所在文本的所有old换成new并逐一请示</p></li><li><p>撤销/恢复操作:<br>u: 撤销一步操作 U: 撤销所在行的操作 ctrl + r: 恢复(可撤销掉撤销操作)</p></li><li><p>查询操作:<br>%: 旋停在括号上可用, 配对括号定位 /待查单词: 显示所有待查单词, 从第一个目标单词开始 ?待查单词: 显示所有待查单词, 与 /逆向 n: /式中为向后查找相同的单词 N: /式中为向前查找相同的单词 /待查单词c: 仅本次查询忽略大小写 :set ic: 查询忽略大小写(ignore case) :set noic: 恢复查询大小写敏感模式 :set hls is: 查询高亮 :nohlsearch: 取消高亮</p></li><li><p>vim内暂时使用shell命令(借助末行模式)<br>:!ls : 暂时查看当前vim运行目录下的文件 :w BACKUP: 当前文件内容另备份于BACKUP :r OTHERS: 将文件OTHERS中内容插入到光标旋停行 :help w: 分屏查看帮助文档, :q!可以退出帮助文档</p></li><li><p>可视功能v的用法<br>v + h j k l选中区域 + y + p : 复制粘贴 v + h j k l选中区域 + d + p : 剪切粘贴 v + h j k l选中区域 + :w BACKUP: 将选中文本内容保存于BACKUP中</p></li><li><p>创建启动脚本vimrc</p></li><li><p>开始编辑 vimrc 文件，具体命令取决于您所使用的操作系统：<br>:edit ~/.vimrc 这是 Unix 系统所使用的命令<br>:edit $VIM/_vimrc 这是 MS-Windows 系统所使用的命令</p></li><li><p>接着读取 vimrc 示例文件的内容：<br>:r $VIMRUNTIME/vimrc_example.vim</p></li><li><p>保存文件，命令为：<br>:write<br>下次您启动 Vim 时，编辑器就会有了语法高亮的功能。<br>您可以把您喜欢的各种设置添加到这个 vimrc 文件中。<br>要了解更多信息请输入 :help vimrc-intro</p></li></ol><ul><li>摘自vimtutor第七讲第二节<br>其他内容:</li></ul><ol><li>输入 :help 或者按 <F1> 键或 <Help> 键可以打开帮助窗口。</li><li>输入 :help cmd 可以找到关于 cmd 命令的帮助。</li><li>输入 CTRL-W CTRL-W 可以使您在窗口之间跳转。</li><li>输入 :q 以关闭帮助窗口</li><li>您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。</li><li>当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。按 <TAB> 可以使用一个补全。</li></ol><p><strong>在命令状态下对当前行用== （连按=两次）, 或对多行用n==（n是自然数）表示自动缩进从当前行起的下面n行。你可以试试把代码缩进任意打乱再用n==排版，相当于一般IDE里的code format。使用gg=G可对整篇代码进行排版。</strong></p><h4 id="vim-选择文本，删除，复制，粘贴">vim 选择文本，删除，复制，粘贴</h4><p>文本的选择，对于编辑器来说，是很基本的东西，也经常被用到，总结如下：</p><p>v   从光标当前位置开始，光标所经过的地方会被选中，再按一下v结束。</p><p>V   从光标当前行开始，光标经过的行都会被选中，再按一下Ｖ结束。</p><p>Ctrl + v  从光标当前位置开始，选中光标起点和终点所构成的矩形区域，再按一下Ｃtrl + v结束。</p><p>ggVG 选中全部的文本， 其中gg为跳到行首，V选中整行，G末尾</p><p>选中后就可以用编辑命令对其进行编辑，如<br>d  删除</p><p>y  复制 （默认是复制到&quot;寄存器）</p><p>p  粘贴 （默认从&quot;寄存器取出内容粘贴）</p><p>&quot;+y   复制到系统剪贴板(也就是vim的+寄存器）</p><p>&quot;+p  从系统剪贴板粘贴</p><h4 id="vim命令总结">vim命令总结</h4><h5 id="删除">删除</h5><p>1.删除字符<br>要删除一个字符，只需要将光标移到该字符上按下&quot;x&quot;。</p><p>2.删除一行<br>删除一整行内容使用&quot;dd&quot;命令。删除后下面的行会移上来填补空缺。</p><p>3.删除换行符<br>在Vim中你可以把两行合并为一行，也就是说两行之间的换行符被删除了：命令是&quot;J&quot;。</p><p>4.撤销<br>如果你误删了过多的内容。显然你可以再输入一遍，但是命令&quot;u&quot; 更简便，它可以撤消上一次的操作。</p><p>5.重做<br>如果你撤消了多次，你还可以用CTRL-R(重做)来反转撤消的动作。换句话说，它是对撤消的撤消。撤消命令还有另一种形式，&quot;U&quot;命令，它一次撤消对一行的全部操作。第二次使用该命令则会撤消前一个&quot;U&quot;的操作。用&quot;u&quot;和CTRL-R你可以找回任何一个操作状态。</p><p>6.追加<br>&quot;i&quot;命令可以在当前光标之前插入文本。<br>&quot;a&quot;命令可以在当前光标之后插入文本。<br>&quot;o&quot;命令可以在当前行的下面另起一行，并使当前模式转为Insert模式。<br>&quot;O&quot;命令(注意是大写的字母O)将在当前行的上面另起一行。</p><p>7.使用命令计数<br>假设你要向上移动9行。这可以用&quot;kkkkkkkkk&quot;或&quot;9k&quot;来完成。事实上，很多命令都可以接受一个数字作为重复执行同一命令的次数。比如刚才的例子，要在行尾追加三个感叹号，当时用的命令是&quot;a!!!&quot;。另一个办法是用&quot;3a!“命令。3说明该命令将被重复执行3次。同样，删除3个字符可以用&quot;3x”。指定的数字要紧挨在它所要修饰的命令前面。</p><p>8.退出<br>要退出Vim，用命令&quot;ZZ&quot;。该命令保存当前文件并退出Vim。</p><p>9.放弃编辑<br>丢弃所有的修改并退出，用命令&quot;:q!“。用”:e!&quot;命令放弃所有修改并重新载入该文件的原始内容。</p><p>10.以Word为单位的移动<br>使用&quot;w&quot;命令可以将光标向前移动一个word的首字符上；比如&quot;3w&quot;将光标向前移动3个words。&quot;b&quot;命令则将光标向后移动到前一个word的首字符上。<br>“e&quot;命令会将光标移动到下一个word的最后一个字符。命令&quot;ge”，它将光标移动到前一个word的最后一个字符上。、</p><p>11.移动到行首或行尾<br>&quot;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mtext>命令将光标移动到当前行行尾。如果你的键盘上有一个键，它的作用也一样。</mtext><msup><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">&quot;</mi></msup><mtext>命令将光标移动到当前行的第一个非空白字符上。</mtext><mi mathvariant="normal">&quot;</mi><mn>0</mn><mi mathvariant="normal">&quot;</mi><mtext>命令则总是把光标移动到当前行的第一个字符上。键也是如此。</mtext><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">&quot;命令将光标移动到当前行行尾。如果你的键盘上有一个键，它的作用也一样。&quot;^&quot;命令将光标移动到当前行的第一个非空白字符上。&quot;0&quot;命令则总是把光标移动到当前行的第一个字符上。键也是如此。&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord">&quot;</span><span class="mord cjk_fallback">命令将光标移动到当前行行尾。如果你的键盘上有一个键，它的作用也一样。</span><span class="mord"><span class="mord">&quot;</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">&quot;</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">命令将光标移动到当前行的第一个非空白字符上。</span><span class="mord">&quot;0&quot;</span><span class="mord cjk_fallback">命令则总是把光标移动到当前行的第一个字符上。键也是如此。</span><span class="mord">&quot;</span></span></span></span>&quot;命令还可接受一个计数，如&quot;1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mtext>会将光标移动到当前行行尾，</mtext><mi mathvariant="normal">&quot;</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">&quot;会将光标移动到当前行行尾，&quot;2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord cjk_fallback">会将光标移动到当前行行尾，</span><span class="mord">&quot;2</span></span></span></span>&quot;则会移动到下一行的行尾，如此类推。“0&quot;命令却不能接受类似这样的计数，命令”^&quot;前加上一个计数也没有任何效果。</p><p>12.移动到指定字符上<br>命令&quot;fx&quot;在当前行上查找下一个字符x（向右方向），可以带一个命令计数&quot;F&quot;命令向左方向搜索。“tx&quot;命令形同&quot;fx&quot;命令，只不过它不是把光标停留在被搜索字符上，而是在它之前的一个字符上。提示：“t&quot;意为&quot;To”。该命令的反方向版是&quot;Tx”。这4个命令都可以用&quot;;“来重复。以”,&quot;也是重复同样的命令，但是方向与原命令的方向相反。</p><p>13.以匹配一个括号为目的移动<br>用命令&quot;%“跳转到与当前光标下的括号相匹配的那一个括号上去。如果当前光标在”(“上，它就向前跳转到与它匹配的”)“上，如果当前在”)“上，它就向后自动跳转到匹配的”(&quot;上去.</p><p>14.移动到指定行<br>用&quot;G&quot;命令指定一个命令计数，这个命令就会把光标定位到由命令计数指定的行上。比如&quot;33G&quot;就会把光标置于第33行上。没有指定命令计数作为参数的话, &quot;G&quot;会把光标定位到最后一行上。“gg&quot;命令是跳转到第一行的快捷的方法。<br>另一个移动到某行的方法是在命令”%&quot;之前指定一个命令计数比如&quot;50%&quot;将会把光标定位在文件的中间. &quot;90%“跳到接近文件尾的地方。<br>命令&quot;H”,“M”,“L”,分别将光标跳转到第一行，中间行，结尾行部分。</p><p>15.告诉你当前的位置<br>使用CTRL-G命令。“set number&quot;在每行的前面显示一个行号。相反关闭行号用命令”:set nonumber&quot;。&quot;:set ruler&quot;在Vim窗口的右下角显示当前光标位置。</p><p>16.滚屏<br>CTRL-U显示文本的窗口向上滚动了半屏。CTRL-D命令将窗口向下移动半屏。一次滚动一行可以使用CTRL-E(向上滚动)和CTRL-Y(向下滚动)。要向前滚动一整屏使用命令CTRL-F。另外CTRL-B是它的反向版。&quot;zz&quot;命令会把当前行置为屏幕正中央，&quot;zt&quot;命令会把当前行置于屏幕顶端，&quot;zb&quot;则把当前行置于屏幕底端.</p><p>17.简单搜索<br>&quot;/string&quot;命令可用于搜索一个字符串。要查找上次查找的字符串的下一个位置,使用&quot;n&quot;命令。如果你知道你要找的确切位置是目标字符串的第几次出现，还可以在&quot;n&quot;之前放置一个命令计数。&quot;3n&quot;会去查找目标字符串的第3次出现。<br>&quot;?“命令与”/“的工作相同，只是搜索方向相反.“N&quot;命令会重复前一次查找，但是与最初用”/“或”?“指定的搜索方向相反。<br>如果查找内容忽略大小写，则用命令&quot;set ignorecase”, 返回精确匹配用命令&quot;set noignorecase” 。</p><p>18.在文本中查找下一个word<br>把光标定位于这个word上然后按下&quot;<em>“键。Vim将会取当前光标所在的word并将它作用目标字符串进行搜索。”#“命令是”</em>&quot;的反向版。还可以在这两个命令前加一个命令计数:&quot;3*&quot;查找当前光标下的word的第三次出现。</p><p>19.查找整个word<br>如果你用&quot;/the&quot;来查找Vim也会匹配到&quot;there&quot;。要查找作为独立单词的&quot;the&quot;使用如下命令：“/the&gt;”。“&gt;“是一个特殊的记法，它只匹配一个word的结束处。近似地，”&lt;“匹配到一个word的开始处。这样查找作为一个word的&quot;the&quot;就可以用:”/”。</p><p>20.高亮显示搜索结果<br>开启这一功能用&quot;:set hlsearch&quot;，关闭这一功能：“:set nohlsearch”。如果只是想去掉当前的高亮显示，可以使用下面的命令：“:nohlsearch”(可以简写为noh)。</p><p>21.匹配一行的开头与结尾<br>^ 字符匹配一行的开头。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>字符匹配一行的末尾。所以</mtext><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">/</mi><mi>w</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">字符匹配一行的末尾。  所以&quot;/was</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">字符匹配一行的末尾。所以</span><span class="mord">&quot;/</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span></span></span></span>&quot;只匹配位于一行末尾的单词was，所以&quot;/^was&quot;只匹配位于一行开始的单词was。</p><p>22.匹配任何的单字符<br>.这个字符可以匹配到任何字符。比如&quot;c.m&quot;可以匹配任何前一个字符是c，后一个字符是m的情况，不管中间的字符是什么。</p><p>23.匹配特殊字符<br>放一个反斜杠在特殊字符前面。如果你查找&quot;ter。“，用命令”/ter\。&quot;</p><p>24.使用标记<br>当你用&quot;G&quot;命令从一个地方跳转到另一个地方时，Vim会记得你起跳的位置。这个位置在Vim中是一个标记。使用命令&quot; <code>&quot;可以使你跳回到刚才的出发点。 </code>命令可以在两点之间来回跳转。CTRL-O命令是跳转到你更早些时间停置光标的位置(提示:O意为older). CTRL-I则是跳回到后来停置光标的更新的位置(提示：I在键盘上位于O前面)。<br>注:使用CTRL-I 与按下键一样。</p><p>25.具名标记<br>命令&quot;ma&quot;将当前光标下的位置名之为标记&quot;a&quot;。从a到z一共可以使用26个自定义的标记。要跳转到一个你定义过的标记，使用命令&quot; <code>marks &quot;marks就是定义的标记的名字。命令&quot; 'a &quot;使你跳转到a所在行的行首，&quot; </code>a “会精确定位a所在的位置。命令：”:marks&quot;用来查看标记的列表。<br>命令delm！删除所有标记。</p><p>26.操作符命令和位移<br>“dw&quot;命令可以删除一个word，“d4w&quot;命令是删除4个word，依此类推。类似有&quot;d2e”、“d$”。此类命令有一个固定的模式：操作符命令+位移命令。首先键入一个操作符命令。比如&quot;d&quot;是一个删除操作符。接下来是一个位移命。比如&quot;w”。这样任何移动光标命令所及之处，都是命令的作用范围。</p><p>27.改变文本<br>操作符命令是&quot;c&quot;，改变命令。它的行为与&quot;d&quot;命令类似，不过在命令执行后会进入Insert模式。比如&quot;cw&quot;改变一个word。或者，更准确地说，它删除一个word并让你置身于Insert模式。<br>&quot;cc&quot;命令可以改变整行。不过仍保持原来的缩进。<br>&quot;c<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">&quot;</mi><mtext>改变当前光标到行尾的内容。快捷命令：</mtext><mi>x</mi><mtext>代表</mtext><mi>d</mi><mi>l</mi><mo stretchy="false">(</mo><mtext>删除当前光标下的字符</mtext><mo stretchy="false">)</mo><mi>X</mi><mtext>代表</mtext><mi>d</mi><mi>h</mi><mo stretchy="false">(</mo><mtext>删除当前光标左边的字符</mtext><mo stretchy="false">)</mo><mi>D</mi><mtext>代表</mtext><mi>d</mi></mrow><annotation encoding="application/x-tex">&quot;改变当前光标到行尾的内容。 快捷命令：x 代表dl(删除当前光标下的字符)      X 代表dh(删除当前光标左边的字符)      D 代表d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">&quot;</span><span class="mord cjk_fallback">改变当前光标到行尾的内容。快捷命令：</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">代表</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord cjk_fallback">删除当前光标下的字符</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">代表</span><span class="mord mathnormal">d</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord cjk_fallback">删除当前光标左边的字符</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback">代表</span><span class="mord mathnormal">d</span></span></span></span>(删除到行尾的内容)<br>C 代表c$(修改到行尾的内容)<br>s 代表cl(修改一个字符)<br>S 代表cc(修改一整行)<br>命令&quot;3dw&quot;和&quot;d3w&quot;都是删除3个word。第一个命令&quot;3dw&quot;可以看作是删除一个word的操作执行3次；第二个命令&quot;d3w&quot;是一次删除3个word。这是其中不明显的差异。事实上你可以在两处都放上命令记数，比如，&quot;3d2w&quot;是删除两个word，重复执行3次，总共是6个word。</p><p>28.替换单个字符<br>&quot;r&quot;命令不是一个操作符命令。它等待你键入下一个字符用以替换当前光标下的那个字符。“r&quot;命令前辍以一个命令记数是将多个字符都替换为即将输入的那个字符。要把一个字符替换为一个换行符使用&quot;r”。它会删除一个字符并插入一个换行符。在此处使用命令记数只会删除指定个数的字符：&quot;4r&quot;将把4个字符替换为一个换行符。</p><p>29.重复改动<br>&quot;.“命令会重复上一次做出的改动。”.“命令会重复你做出的所有修改，除了&quot;u&quot;命令CTRL-R和以冒号开头的命令。”.&quot;需要在Normal模式下执行，它重复的是命令，而不是被改动的内容，</p><p>30.Visual模式<br>按&quot;v&quot;可以进入Visual模式。移动光标以覆盖你想操纵的文本范围。同时被选中的文本会以高亮显示。最后键入操作符命令。</p><p>31.移动文本<br>以&quot;d&quot;或&quot;x&quot;这样的命令删除文本时，被删除的内容还是被保存了起来。你还可以用p命令把它取回来。&quot;P&quot;命令是把被去回的内容放在光标之前，&quot;p&quot;则是放在光标之后。对于以&quot;dd&quot;删除的整行内容，&quot;P&quot;会把它置于当前行的上一行。&quot;p&quot;则是至于当前行的后一行。也可以对命令&quot;p&quot;和&quot;P&quot;命令使用命令记数。它的效果是同样的内容被取回指定的次数。这样一来&quot;dd&quot;之后的&quot;3p&quot;就可以把被删除行的3 份副本放到当前位置。<br>命令&quot;xp&quot;将光标所在的字符与后一个字符交换。</p><p>**32.**<strong>复制文本（VIM编辑器内复制）</strong><br>&quot;y&quot;操作符命令会把文本复制到一个寄存器3中。然后可以用&quot;p&quot;命令把它取回。因为&quot;y&quot;是一个操作符命令，所以你可以用&quot;yw&quot;来复制一个word. 同样可以使用命令记数。如下例中用&quot;y2w&quot;命令复制两个word，&quot;yy&quot;命令复制一整行，“Y&quot;也是复制整行的内容，复制当前光标至行尾的命令是&quot;y$”。</p><p>33.文本对象<br>“diw” 删除当前光标所在的word(不包括空白字符) “daw” 删除当前光标所在的word(包括空白字符)</p><p>34.快捷命令<br>x 删除当前光标下的字符(&quot;dl&quot;的快捷命令)<br>X 删除当前光标之前的字符(&quot;dh&quot;的快捷命令)<br>D 删除自当前光标至行尾的内容(&quot;d$&quot;的快捷命令)<br>dw 删除自当前光标至下一个word的开头<br>db 删除自当前光标至前一个word的开始<br>diw 删除当前光标所在的word(不包括空白字符)<br>daw 删除当前光标所在的word(包括空白字符)<br>dG 删除当前行至文件尾的内容<br>dgg 删除当前行至文件头的内容<br>如果你用&quot;c&quot;命令代替&quot;d&quot;这些命令就都变成更改命令。使用&quot;y&quot;就是yank命令，如此类推。</p><p>35.编辑另一个文件<br>用命令&quot;:edit foo.txt&quot;，也可简写为&quot;:e foo.txt&quot;。</p><p>36.文件列表<br>可以在启动Vim时就指定要编辑多个文件，用命令&quot;vim one.c two.c three.c&quot;。Vim将在启动后只显示第一个文件，完成该文件的编辑后，可以用令：“:next&quot;或”:n&quot;要保存工作成果并继续下一个文件的编辑，命令：“:wnext&quot;或”:wn&quot;可以合并这一过程。</p><p>37.显示当前正在编辑的文件<br>用命令&quot;:args&quot;。</p><p>38.移动到另一个文件<br>用命令&quot;:previous&quot; “:prev&quot;回到上一个文件,合并保存步骤则是”:wprevious&quot; “:wprev”。要移到最后一个文件&quot;:last&quot;,到第一个&quot;:first&quot;.不过没有&quot;:wlast&quot;或者&quot;:wfirst&quot;这样的命令。可以在&quot;:next&quot;和&quot;:previous&quot;命令前面使用一个命令计数。</p><p>39.编辑另一个文件列表<br>不用重新启动Vim，就可以重新定义一个文件列表。命令&quot;:args five.c six.c seven.h&quot;定义了要编辑的三个文件。</p><p>39.自动存盘<br>命令&quot;:set autowrite&quot;,“set aw”。自动把内容写回文件: 如果文件被修改过，在每个:next、:rewind、:last、:first、:previous、:stop、:suspend、:tag、:!、:make、CTRL-] 和 CTRL-^命令时进行。<br>命令&quot;:set autowriteall&quot;,“set awa”。和 ‘autowrite’ 类似，但也适用于&quot;:edit&quot;、“:enew”、“:quit”、“:qall”、“:exit”、“:xit”、“:recover” 和关闭 Vim 窗口。置位本选项也意味着 Vim 的行为就像打开 ‘autowrite’ 一样。</p><p>40.切换到另一文件<br>要在两个文件间快速切换，使用CTRL-^。</p><p>41.文件标记<br>以大写字母命名的标记。它们是全局标记，它们可以用在任何文件中。比如，正在编辑&quot;fab1.<a href="http://lib.csdn.net/base/javaee">Java</a>&quot;,用命令&quot;50%mF&quot;在文件的中间设置一个名为F的标记。然后在&quot;fab2.java&quot;文件中，用命令&quot;GnB&quot;在最后一行设置名为B的标记。在可以用&quot;F&quot;命令跳转到文件&quot;fab1.java&quot;的半中间。或者编辑另一个文件，“'B&quot;命令会再把你带回文件&quot;fab2.java&quot;的最后一行。<br>要知道某个标记所代表的位置是什么，可以将该标记的名字作为&quot;marks&quot;命令的参数”:marks M&quot;或者连续跟上几个参数&quot;:marks MJK&quot;<br>可以用CTRL-O和CTRL-I可以跳转到较早的位置和靠后的某位置。</p><p>42.查看文件<br>仅是查看文件，不向文件写入内容，可以用只读形式编辑文件。用命令：<br>vim -R file。如果是想强制性地避免对文件进行修改，可以用命令：<br>vim -M file。</p><p>43.更改文件名<br>将现有文件存成新的文件，用命令&quot;:sav(eas) move.c&quot;。如果想改变当前正在编辑的文件名，但不想保存该文件，就可以用命令：“:f(ile) move.c”。</p><p>44.分割一个窗口<br>打开一个新窗口最简单的办法就是使用命令：“:split”。CTRL-W 命令可以切换当前活动窗口。</p><p>45.关闭窗口<br>用命令：“close”.可以关闭当前窗口。实际上,任何退出文件编辑的命令&quot;:quit&quot;和&quot;ZZ&quot;都会关闭窗口，但是用&quot;:close&quot;可以阻止你关闭最后一个Vim，以免以意外地整个关闭了Vim。</p><p>46.关闭除当前窗口外的所有其他窗口<br>用命令：“:only”,关闭除当前窗口外的所有其它窗口。如果这些窗口中有被修改过的，你会得到一个错误信息，同时那个窗口会被留下来。</p><p>47.为另一个文件分隔出一个窗口<br>命令&quot;:split two.c&quot;可以打开第二个窗口同时在新打开的窗口中开始编辑作为<br>参数的文件。如果要打开一个新窗口并开始编辑一个空的缓冲区，使用命令:“:new”。</p><p>48.垂直分割<br>用命令&quot;:vsplit或：:vsplit two.c&quot;。同样有一个对应的&quot;:vnew&quot;命令，用于垂直分隔窗口并在其中打开一个新的空缓冲区。</p><p>49.切换窗口<br>CTRL-W h 到左边的窗口<br>CTRL-W j 到下面的窗口<br>CTRL-W k 到上面的窗口<br>CTRL-W l 到右边的窗口<br>CTRL-W t 到顶部窗口<br>CTRL-W b 到底部窗口</p><p>50.针对所有窗口操作的命令<br>“:qall&quot;放弃所有操作并退出，”:wall&quot;保存所有，&quot;:wqall&quot;保存所有并退出。</p><p>51.为每一个文件打开一个窗口<br>使用&quot;-o&quot;选项可以让Vim为每一个文件打开一个窗口：<br>“vim -o one.txt two.txt three.txt”。</p><p>52.使用vimdiff查看不同<br>“vimdiff main.c~ main.c”,另一种进入diff模式的办法可以在Vim运行中操作。编辑文件&quot;main.c&quot;，然后打开另一个分隔窗口显示其不同:<br>“:edit main.c”<br>“:vertical diffpatch main.c.diff”。<br>53.页签<br>命令&quot;:tabe(dit) thatfile&quot;在一个窗口中打开&quot;thatfile&quot;，该窗口占据着整个的Vim显示区域。命令&quot;:tab split/new&quot;结果是新建了一个拥有一个窗口的页签。以用&quot;gt&quot;命令在不同的页签间切换。</p><h3 id="个人总结">个人总结</h3><p>说明：以下黑色为vi和vim均有的一般功能，而红色为Vim（Vi Improved）所特有功能。Vim一般的Unix和<a href="http://lib.csdn.net/base/linux">Linux</a>下均有安装。<br>🖊 三种状态<br>Command： 任何输入都会作为编辑命令，而不会出现在屏幕上，任何输入都引起立即反映<br>Insert： 任何输入的数据都置于编辑寄存器，按ESC，可跳回command方式<br>Escape： 以“：”或者“/”为前导的指令，出现在屏幕的最下一行，任何输入都被当成特别指令。<br>🖊 离开vi<br>:q!  离开vi，并放弃刚在缓冲区内编辑的内容。<br>:wq  将缓冲区内的资料写入磁盘中，并离开vi。<br>:x  同wq。<br>（注意—— :X 是文件加密，一定要与:x存盘退出相区别）<br>🖊 进入输入模式<br>a (append) 由游标之后加入资料。<br>A  由该行之末加入资料。<br>i (insert)  由游标之前加入资料。<br>I  由该行之首加入资料。<br>o (open)  新增一行於该行之下供输入资料之用。<br>O  新增一行於该行之上供输入资料之用。<br>🖊 删除与修改<br>x  删除游标所在该字元。<br>X  删除游标所在之前一字元。<br>r  用接於此指令之后的字元取代(replace)游标所在字元。如：ra将游标所在字元以 a 取代之。<br>R  进入取代状态，直到《ESC》为止。<br>s  删除游标所在之字元，并进入输入模式直到《ESC》。<br>S  删除游标所在之该行资料，并进入输入模式直到《ESC》。<br>🖊光标的移动<br>m<a-z> 设置书签<a-z><br>‘<a-z> 移至书签<a-z>处<br>0  移至该行之首<br>$  移至该行之末。<br>e  移动到下个字的最後一个字母<br>w  移动到下个字的第一个字母。<br>b  移动到上个字的第一个字母。<br>^  移至该行的第一个字元处。<br>H  移至视窗的第一行。<br>M  移至视窗的中间那行。<br>L  移至视窗的最后一行。<br>G  移至该文件的最后一行。<br>+  移至下一列的第一个字元处。<br>- 移至上一列的第一个字元处。<br>:n  移至该文件的第 n 列。<br>n+  移至游标所在位置之后的第 n 列。<br>n-  移至游标所在位置之前的第 n 列。<br><Ctrl><g> 显示该行之行号、文件名称、文件中最末行之行号、游标所在行号占总行号之百分比。</p><p>（Vim） 光标移动基本用法小解：<br>(这只要组合上边的功能就可以明白了，不用再一一讲解了吧！)<br>ge   b  w     e<br>←  ←  —→    --→<br>This is-a line, with special/separated/words (and some more).<br>←- ←--  -----------------→   —→<br>GE  B    W   E</p><p>🖊 视窗的移动<br><Ctrl><f> 视窗往下卷一页。<br><Ctrl><b> 视窗往上卷一页。<br><Ctrl><d> 视窗往下卷半页。<br><Ctrl><u> 视窗往上卷半页。<br><Ctrl><e> 视窗往下卷一行。<br><Ctrl><y> 视窗往上卷一行。<br>🖊 剪切、复制、删除<br>Operator + Scope = command<br>🖊 Operator<br>d  剪切<br>y  复制。<br>p  粘帖，与 d 和 y 配和使用。可将最后d或y的资料放置於游标所在位置之行列下。<br>c  修改，类似delete与insert的组和。删除一个字组、句子等之资料，并插入新建资料。<br><em>🖊</em> Scope<br>e  由游标所在位置至该字串的最后一个字元。<br>w  由游标所在位置至下一个字串的第一个字元。<br>b  由游标所在位置至前一个字串的第一个字元。<br>$  由游标所在位置至该行的最后一个字元。<br>0  由游标所在位置至该行的第一个字元。<br> 整行动作<br>dd  删除整行。<br>D  以行为单位，删除游标后之所有字元。<br>cc  修改整行的内容。<br>yy  使游标所在该行复制到记忆体缓冲区。<br> 取消前一动作(Undo)<br>u  恢复最后一个指令之前的结果。<br>U  恢复游标该行之所有改变。<br>(vim) u  可以多次撤消指令，一次撤消一个操作，直至本次操作开始为止。<br>(vim) Ctrl+r 可以恢复撤消前内容，按多次可恢复多次。<br> 查找与替换<br>/字串  往游标之后寻找该字串。<br>?字串  往游标之前寻找该字串。<br>n  往下继续寻找下一个相同的字串。<br>N  往上继续寻找下一个相同的字串。<br>%  查找“(”，“)”，“{”，“}”的配对符。<br>s  搜寻某行列范围。<br>g  搜寻整个编辑缓冲区的资料。<br>:1,$s/old/new/g 将文件中所有的『old』改成『new』。<br>:10,20s/^/ / 将第10行至第20行资料的最前面插入5个空白。<br>(vim)<br>/字符串  后边输入查询内容可保存至缓冲区中，可用↑↓进行以往内容选择。<br>另外：将光标移动在选定单词下方按*，则可以选中此单词作为查询字符，可以避免输入一长串字符的麻烦。<br>🖊 (vim) 大小写替换<br>首先用按v开启选择功能，然后用↑↓←→键来选定所要替换的字符，若是小写变大写，则按U;反之按u;<br>如果是选择单词，则可以在按v后，按w，最后按U/u,这样就可以将字符随意的改变大小写了，而不用删除后重新敲入。</p><p>🖊 资料的连接<br>J  句子的连接。将游标所在之下一行连接至游标该行的后面。<br>🖊 环境的设定<br>:set all 可设置的环境变量列表<br>:set  环境变量的当前值<br>:set nu  设定资料的行号。<br>:set nonu 取消行号设定。<br>:set ai  自动内缩。<br>:set noai  取消自动内缩。<br>(vim)<br>:set ruler 会在屏幕右下角显示当前光标所处位置，并随光移动而改变，占用屏幕空间较小，使用也比较方便，推荐使用。<br>:set hlsearch 在使用查找功能时，会高亮显示所有匹配的内容。<br>:set nohlsearch 关闭此功能。<br>:set incsearch 使Vim在输入字符串的过程中，光标就可定位显示匹配点。<br>:set nowrapscan 关闭查找自动回环功能，即查找到文件结尾处，结束查找；默认状态是自动回环</p><p>🖊ex指令<br>🖊读写资料<br>:10,20w test 将第10行至第20行的资料写入test文件。<br>:10,20w&gt;&gt;test 将第10行至第20行的资料加在test文件之后。<br>:r test  将test文件的资料读入编辑缓冲区的最后。<br>:e [filename] 编辑新的文件。<br>:e! [filename] 放弃当前修改的文件，编辑新的文件。<br>:sh  进入shell环境，使用exit退出，回到编辑器中。</p><p>:!cmd 运行命令cmd后，返回到编辑器中。<br>🖊 删除、复制及搬移<br>:10,20d  删除第10行至第20行的资料。<br>:10d  删除第10行的资料。<br>:%d  删除整个编辑缓冲区。<br>:10,20co30 将第10行至第20行的资料复制至第30行之后。<br>:10,20mo30 将第10行至第20行的资料搬移至第30行之后。</p><h5 id="删除行">删除行</h5><h6 id="如何在VIM中删除某一行："><strong>如何在VIM中删除某一行：</strong></h6><p>在VIM的命令模式下，使用dd，即可删除光标所在的行。</p><h6 id="如何在VIM中删除多行："><strong>如何在VIM中删除多行：</strong></h6><p>比如要删除8-17行，在VIM模式下，输入:8,17d，即可将8-17行全部删除。</p><h6 id="如何在VIM中显示行号："><strong>如何在VIM中显示行号：</strong></h6><p>在VIM命令模式下，输入:set nu。</p><h6 id="误删后如何恢复："><strong>误删后如何恢复：</strong></h6><p>在VIM命令模式下，输入u。（与u相反的操作 <strong>Ctrl-r</strong>）</p><h1>Reference</h1><ol><li><a href="https://www.runoob.com/linux/linux-vim.html">菜鸟教程</a></li><li><a href="https://www.cnblogs.com/cheng88/p/10487870.html">https://www.cnblogs.com/cheng88/p/10487870.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS在命令行中打开Sublime Text 3</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Tools/effience/MacOS%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E6%89%93%E5%BC%80Sublime%20Text%203/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Tools/effience/MacOS%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E6%89%93%E5%BC%80Sublime%20Text%203/</url>
      
        <content type="html"><![CDATA[<h1>配置</h1><p>在终端中输入命令来创建软链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sv <span class="string">&quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&quot;</span> /usr/local/bin/subl</span><br></pre></td></tr></table></figure><p>如果Sublime Text是版本v2，则使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sv <span class="string">&quot;/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl&quot;</span> /usr/local/bin/subl</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h1>使用</h1><p>在命令行执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subl text.cpp</span><br></pre></td></tr></table></figure><p>就可以直接打开文件啦。</p><h1>Reference</h1><ol><li><a href="https://gist.github.com/martinbuberl/5823ed247d279d1a2d06">Launch Sublime Text from the command line on OSX</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 20.04 安装vncserver</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Tools/effience/Ubuntu%2020.04%20%E5%AE%89%E8%A3%85vncserver/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Tools/effience/Ubuntu%2020.04%20%E5%AE%89%E8%A3%85vncserver/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-ubuntu-18-04">18安装教程</a></p><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">apt update</span><br><span class="line">sudo apt install xfce4 xfce4-goodies</span><br><span class="line">sudo apt install tightvncserver</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Picgo</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/Basic/Picgo/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/Basic/Picgo/</url>
      
        <content type="html"><![CDATA[<p>github图床token：</p><p>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</p><p>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</p><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011529732.png" alt=""></p><p>Azure图床Token：</p><blockquote><p>f6sojl3lhkb5li6et4f6lju5iero3prmrhnwutbu7cvekvqdmc3a</p></blockquote><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011529733.png" alt=""></p><p>gitee图床Token:</p><blockquote><p>20cb20695f760aab0584df65c7b58fac<br>d25228266c2bf8f75073d220518dd7e4</p></blockquote><p><img src="https://raw.githubusercontent.com/ConanSteve/images/master/blog/202204011529734.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>隐马尔科夫模型HMM（四）维特比算法解码隐藏状态序列</title>
      <link href="/2022/02/01/Notebooks/ComputerScience/MachineLearning/HMM/%E9%9A%90%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E6%A8%A1%E5%9E%8BHMM%EF%BC%88%E5%9B%9B%EF%BC%89%E7%BB%B4%E7%89%B9%E6%AF%94%E7%AE%97%E6%B3%95%E8%A7%A3%E7%A0%81%E9%9A%90%E8%97%8F%E7%8A%B6%E6%80%81%E5%BA%8F%E5%88%97/"/>
      <url>/2022/02/01/Notebooks/ComputerScience/MachineLearning/HMM/%E9%9A%90%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E6%A8%A1%E5%9E%8BHMM%EF%BC%88%E5%9B%9B%EF%BC%89%E7%BB%B4%E7%89%B9%E6%AF%94%E7%AE%97%E6%B3%95%E8%A7%A3%E7%A0%81%E9%9A%90%E8%97%8F%E7%8A%B6%E6%80%81%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>隐马尔科夫模型HMM（四）维特比算法解码隐藏状态序列</p><p>在本篇我们会讨论HMM模型最后一个问题的求解，即即给定模型和观测序列，求给定观测序列条件下，最可能出现的对应的隐藏状态序列。在阅读本篇前，建议先阅读这个系列的第一篇以熟悉HMM模型。</p><p>HMM模型的解码问题最常用的算法是维特比算法，当然也有其他的算法可以求解这个问题。同时维特比算法是一个通用的求序列最短路径的动态规划算法，也可以用于很多其他问题，比如之前讲到的<a href="http://www.cnblogs.com/pinard/p/6677078.html">文本挖掘的分词原理</a>中我们讲到了单独用维特比算法来做分词。</p><p>本文关注于用维特比算法来解码HMM的的最可能隐藏状态序列。</p><p>在HMM模型的解码问题中，给定模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi mathvariant="normal">Π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lambda = (A, B, \Pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Π</span><span class="mclose">)</span></span></span></span>和观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>o</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>o</mi><mi>T</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">O =\{o_1,o_2,...o_T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，求给定观测序列O条件下，最可能出现的对应的状态序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">{</mo><msubsup><mi>i</mi><mn>1</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><msubsup><mi>i</mi><mn>2</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>i</mi><mi>T</mi><mo>∗</mo></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I^*= \{i_1^*,i_2^*,...i_T^*\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0253em;vertical-align:-0.2753em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>,即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>I</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(I^*|O)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)</span></span></span></span>要最大化。</p><p>一个可能的近似解法是求出观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>在每个时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>最可能的隐藏状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>i</mi><mi>t</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">i_t^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9357em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>然后得到一个近似的隐藏状态序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">{</mo><msubsup><mi>i</mi><mn>1</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><msubsup><mi>i</mi><mn>2</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>i</mi><mi>T</mi><mo>∗</mo></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I^*= \{i_1^*,i_2^*,...i_T^*\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0253em;vertical-align:-0.2753em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。要这样近似求解不难，利用<a href="http://www.cnblogs.com/pinard/p/6955871.html">隐马尔科夫模型HMM（二）前向后向算法评估观察序列概率</a>中第五节的定义：在给定模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span>和观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>时，在时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>处于状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的概率是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>γ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gamma_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>，这个概率可以通过HMM的前向算法与后向算法计算。这样我们有：$$i_t^* = arg \max_{1 \leq i \leq N}[\gamma_t(i)], ; t =1,2,…T$$</p><p>近似算法很简单，但是却不能保证预测的状态序列是整体是最可能的状态序列，因为预测的状态序列中某些相邻的隐藏状态可能存在转移概率为0的情况。</p><p>而维特比算法可以将HMM的状态序列作为一个整体来考虑，避免近似算法的问题，下面我们来看看维特比算法进行HMM解码的方法。</p><p>既然是动态规划算法，那么就需要找到合适的局部状态，以及局部状态的递推公式。在HMM中，维特比算法定义了两个局部状态用于递推。</p><p>第一个局部状态是在时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>隐藏状态为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>所有可能的状态转移路径<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">i_1,i_2,...i_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的概率最大值。记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>:$$\delta_t(i) = \max_{i_1,i_2,…i_{t-1}};P(i_t=i, i_1,i_2,…i_{t-1},o_t,o_{t-1},…o_1|\lambda),; i =1,2,…N$$</p><p>由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>的定义可以得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>的递推表达式：$$\begin{align} \delta_{t+1}(i) &amp; = \max_{i_1,i_2,…i_{t}};P(i_{t+1}=i, i_1,i_2,…i_{t},o_{t+1},o_{t},…o_1|\lambda) \ &amp; = \max_{1 \leq j \leq N};[\delta_t(j)a_{ji}]b_i(o_{t+1})\end{align}$$</p><p>第二个局部状态由第一个局部状态递推得到。我们定义在时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>隐藏状态为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的所有单个状态转移路径<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>i</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i_1,i_2,...,i_{t-1},i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>中概率最大的转移路径中第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个节点的隐藏状态为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>,其递推表达式可以表示为：$$\Psi_t(i) = arg ; \max_{1 \leq j \leq N};[\delta_{t-1}(j)a_{ji}]$$</p><p>有了这两个局部状态，我们就可以从时刻0一直递推到时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，然后利用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>记录的前一个最可能的状态节点回溯，直到找到最优的隐藏状态序列。</p><p>现在我们来总结下维特比算法的流程：</p><p>输入：HMM模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi mathvariant="normal">Π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lambda = (A, B, \Pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Π</span><span class="mclose">)</span></span></span></span>，观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>o</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>o</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=(o_1,o_2,...o_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>输出：最有可能的隐藏状态序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">{</mo><msubsup><mi>i</mi><mn>1</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><msubsup><mi>i</mi><mn>2</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>i</mi><mi>T</mi><mo>∗</mo></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I^*= \{i_1^*,i_2^*,...i_T^*\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0253em;vertical-align:-0.2753em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><ol start="2"><li><p>进行动态规划递推时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">t=2,3,...T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>时刻的局部状态：$$\delta_{t}(i) = \max_{1 \leq j \leq N};[\delta_{t-1}(j)a_{ji}]b_i(0_{t}),;i=1,2…N$$$$\Psi_t(i) = arg ; \max_{1 \leq j \leq N};[\delta_{t-1}(j)a_{ji}],;i=1,2…N$$</p></li><li><p>计算时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>最大的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta_{T}(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>,即为最可能隐藏状态序列出现的概率。计算时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>最大的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_t(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>,即为时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>最可能的隐藏状态。$$P* = \max_{1 \leq j \leq N}\delta_{T}(i)$$$$i_T^* = arg ; \max_{1 \leq j \leq N};[\delta_{T}(i)]$$</p></li><li><p>利用局部状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ψ</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ψ</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>开始回溯。对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><mi>T</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>T</mi><mo>−</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t=T-1,T-2,...,1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span></span></span></span>：$$i_t^* = \Psi_{t+1}(i_{t+1}^*)$$</p></li></ol><p>最终得到最有可能的隐藏状态序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">{</mo><msubsup><mi>i</mi><mn>1</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><msubsup><mi>i</mi><mn>2</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>i</mi><mi>T</mi><mo>∗</mo></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I^*= \{i_1^*,i_2^*,...i_T^*\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0253em;vertical-align:-0.2753em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p>我们的观察集合是:$$V={红，白}，M=2$$</p><p>我们的状态集合是：$$Q ={盒子1，盒子2，盒子3}， N=3 $$</p><p>而观察序列和状态序列的长度为3.</p><p>初始状态分布为：$$\Pi = (0.2,0.4,0.4)^T$$</p><p>状态转移概率分布矩阵为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A = \left( \begin{array} {ccc} 0.5 &amp; 0.2 &amp; 0.3 \\ 0.3 &amp; 0.5 &amp; 0.2 \\ 0.2 &amp; 0.3 &amp;0.5 \end{array} \right) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.397em;"><span class="pstrut" style="height:3.155em;"></span><span style="height:0.016em;width:0.875em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='0.016em' style='width:0.875em' viewBox='0 0 875 16' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V16 H291z M291 0 H417 V16 H291z'/></svg></span></span><span style="top:-4.05em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.3</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.3</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.397em;"><span class="pstrut" style="height:3.155em;"></span><span style="height:0.016em;width:0.875em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='0.016em' style='width:0.875em' viewBox='0 0 875 16' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V16 H457z M457 0 H583 V16 H457z'/></svg></span></span><span style="top:-4.05em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>观测状态概率矩阵为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.3</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">B = \left( \begin{array} {ccc} 0.5 &amp; 0.5 \\ 0.4 &amp; 0.6 \\ 0.7 &amp; 0.3 \end{array} \right) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.397em;"><span class="pstrut" style="height:3.155em;"></span><span style="height:0.016em;width:0.875em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='0.016em' style='width:0.875em' viewBox='0 0 875 16' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V16 H291z M291 0 H417 V16 H291z'/></svg></span></span><span style="top:-4.05em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.4</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.6</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.397em;"><span class="pstrut" style="height:3.155em;"></span><span style="height:0.016em;width:0.875em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='0.016em' style='width:0.875em' viewBox='0 0 875 16' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V16 H457z M457 0 H583 V16 H457z'/></svg></span></span><span style="top:-4.05em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>球的颜色的观测序列:$$O={红，白，红}$$</p><p>按照我们上一节的维特比算法，首先需要得到三个隐藏状态在时刻1时对应的各自两个局部状态，此时观测状态为1：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mn>1</mn></msub><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0.2</mn><mo>×</mo><mn>0.5</mn><mo>=</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">\delta_1(1) = \pi_1b_1(o_1) = 0.2 \times 0.5 = 0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mn>2</mn></msub><msub><mi>b</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0.4</mn><mo>×</mo><mn>0.4</mn><mo>=</mo><mn>0.16</mn></mrow><annotation encoding="application/x-tex">\delta_1(2) = \pi_2b_2(o_1) = 0.4 \times 0.4 = 0.16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.16</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mn>3</mn></msub><msub><mi>b</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0.4</mn><mo>×</mo><mn>0.7</mn><mo>=</mo><mn>0.28</mn></mrow><annotation encoding="application/x-tex">\delta_1(3) = \pi_3b_3(o_1) = 0.4 \times 0.7 = 0.28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.28</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">Ψ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">Ψ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\Psi_1(1)=\Psi_1(2) =\Psi_1(3) =0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>现在开始递推三个隐藏状态在时刻2时对应的各自两个局部状态，此时观测状态为2：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><msub><mi>δ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo stretchy="false">]</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><mn>0.1</mn><mo>×</mo><mn>0.5</mn><mo separator="true">,</mo><mn>0.16</mn><mo>×</mo><mn>0.3</mn><mo separator="true">,</mo><mn>0.28</mn><mo>×</mo><mn>0.2</mn><mo stretchy="false">]</mo><mo>×</mo><mn>0.5</mn><mo>=</mo><mn>0.028</mn></mrow><annotation encoding="application/x-tex">\delta_2(1) = \max_{1\leq j \leq 3}[\delta_1(j)a_{j1}]b_1(o_2) = \max_{1\leq j \leq 3}[0.1 \times 0.5, 0.16 \times 0.3, 0.28\times 0.2] \times 0.5 = 0.028</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.28</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.028</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\Psi_2(1)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><msub><mi>δ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo stretchy="false">]</mo><msub><mi>b</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><mn>0.1</mn><mo>×</mo><mn>0.2</mn><mo separator="true">,</mo><mn>0.16</mn><mo>×</mo><mn>0.5</mn><mo separator="true">,</mo><mn>0.28</mn><mo>×</mo><mn>0.3</mn><mo stretchy="false">]</mo><mo>×</mo><mn>0.6</mn><mo>=</mo><mn>0.0504</mn></mrow><annotation encoding="application/x-tex">\delta_2(2) = \max_{1\leq j \leq 3}[\delta_1(j)a_{j2}]b_2(o_2) = \max_{1\leq j \leq 3}[0.1 \times 0.2, 0.16 \times 0.5, 0.28\times 0.3] \times 0.6 = 0.0504</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.28</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.0504</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\Psi_2(2)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><msub><mi>δ</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>3</mn></mrow></msub><mo stretchy="false">]</mo><msub><mi>b</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><mn>0.1</mn><mo>×</mo><mn>0.3</mn><mo separator="true">,</mo><mn>0.16</mn><mo>×</mo><mn>0.2</mn><mo separator="true">,</mo><mn>0.28</mn><mo>×</mo><mn>0.5</mn><mo stretchy="false">]</mo><mo>×</mo><mn>0.3</mn><mo>=</mo><mn>0.042</mn></mrow><annotation encoding="application/x-tex">\delta_2(3) = \max_{1\leq j \leq 3}[\delta_1(j)a_{j3}]b_3(o_2) = \max_{1\leq j \leq 3}[0.1 \times 0.3, 0.16 \times 0.2, 0.28\times 0.5] \times 0.3 = 0.042</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.28</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.5</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.042</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\Psi_2(3)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></span></p><p>继续递推三个隐藏状态在时刻3时对应的各自两个局部状态，此时观测状态为1：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><msub><mi>δ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo stretchy="false">]</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><mn>0.028</mn><mo>×</mo><mn>0.5</mn><mo separator="true">,</mo><mn>0.0504</mn><mo>×</mo><mn>0.3</mn><mo separator="true">,</mo><mn>0.042</mn><mo>×</mo><mn>0.2</mn><mo stretchy="false">]</mo><mo>×</mo><mn>0.5</mn><mo>=</mo><mn>0.00756</mn></mrow><annotation encoding="application/x-tex">\delta_3(1) = \max_{1\leq j \leq 3}[\delta_2(j)a_{j1}]b_1(o_3) = \max_{1\leq j \leq 3}[0.028 \times 0.5, 0.0504 \times 0.3, 0.042\times 0.2] \times 0.5 = 0.00756</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0.028</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.0504</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.042</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.00756</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\Psi_3(1)=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><msub><mi>δ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo stretchy="false">]</mo><msub><mi>b</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><mn>0.028</mn><mo>×</mo><mn>0.2</mn><mo separator="true">,</mo><mn>0.0504</mn><mo>×</mo><mn>0.5</mn><mo separator="true">,</mo><mn>0.042</mn><mo>×</mo><mn>0.3</mn><mo stretchy="false">]</mo><mo>×</mo><mn>0.4</mn><mo>=</mo><mn>0.01008</mn></mrow><annotation encoding="application/x-tex">\delta_3(2) = \max_{1\leq j \leq 3}[\delta_2(j)a_{j2}]b_2(o_3) = \max_{1\leq j \leq 3}[0.028 \times 0.2, 0.0504\times 0.5, 0.042\times 0.3] \times 0.4 = 0.01008</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0.028</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.0504</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.042</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01008</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\Psi_3(2)=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>δ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><msub><mi>δ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>3</mn></mrow></msub><mo stretchy="false">]</mo><msub><mi>b</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mn>3</mn></mrow></munder><mo stretchy="false">[</mo><mn>0.028</mn><mo>×</mo><mn>0.3</mn><mo separator="true">,</mo><mn>0.0504</mn><mo>×</mo><mn>0.2</mn><mo separator="true">,</mo><mn>0.042</mn><mo>×</mo><mn>0.5</mn><mo stretchy="false">]</mo><mo>×</mo><mn>0.7</mn><mo>=</mo><mn>0.0147</mn></mrow><annotation encoding="application/x-tex">\delta_3(3) = \max_{1\leq j \leq 3}[\delta_2(j)a_{j3}]b_3(o_3) = \max_{1\leq j \leq 3}[0.028 \times 0.3, 0.0504 \times 0.2, 0.042\times 0.5] \times 0.7 = 0.0147</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mtight">3</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0.028</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.0504</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0.2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.042</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.5</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.0147</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\Psi_3(3)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></span></p><p>此时已经到最后的时刻，我们开始准备回溯。此时最大概率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta_3(3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span></span></span></span>,从而得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>i</mi><mn>3</mn><mo>∗</mo></msubsup><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">i_3^* =3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9368em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></p><p>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>3</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\Psi_3(3)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>,所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>i</mi><mn>2</mn><mo>∗</mo></msubsup><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">i_2^* =3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9368em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>, 而又由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\Psi_2(3)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>,所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>i</mi><mn>1</mn><mo>∗</mo></msubsup><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">i_1^* =3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9368em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>。从而得到最终的最可能的隐藏状态序列为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(3,3,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><p>如果大家看过之前写的<a href="http://www.cnblogs.com/pinard/p/6677078.html">文本挖掘的分词原理</a>中的维特比算法，就会发现这两篇之中的维特比算法稍有不同。主要原因是在中文分词时，我们没有观察状态和隐藏状态的区别，只有一种状态。但是维特比算法的核心是定义动态规划的局部状态与局部递推公式，这一点在中文分词维特比算法和HMM的维特比算法是相同的，也是维特比算法的精华所在。</p><p>维特比算法也是寻找序列最短路径的一个通用方法，和dijkstra算法有些类似，但是dijkstra算法并没有使用动态规划，而是贪心算法。同时维特比算法仅仅局限于求序列最短路径，而dijkstra算法是通用的求最短路径的方法。</p><p>（欢迎转载，转载请注明出处。欢迎沟通交流： <a href="mailto:liujianping-ok@163.com">liujianping-ok@163.com</a>）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多GPU训练</title>
      <link href="/2021/10/10/Notebooks/ComputerScience/Pytorch/train-by-ddp/"/>
      <url>/2021/10/10/Notebooks/ComputerScience/Pytorch/train-by-ddp/</url>
      
        <content type="html"><![CDATA[<p>对pytorch多GPU训练有一定的疑惑，这里做一个记录。<br>首先要对pytorch中的两种并行训练实现方式：1.DataParallel； 2.DDP有一定的认识。可参考:</p><p>Pytorch 中通过 torch.distributed 包提供分布式支持，包括 GPU 和 CPU 的分布式训练支持。Pytorch 分布式目前只支持 Linux。</p><p>在此之前，torch.nn.DataParallel 已经提供数据并行的支持，但是其不支持多机分布式训练，且底层实现相较于 distributed 的接口，有些许不足。</p><p>torch.distributed 的优势如下：</p><p><strong>每个进程对应一个独立的训练过程</strong>，且只对梯度等少量数据进行信息交换。<br>在每次迭代中，每个进程具有自己的 <strong>optimizer</strong> ，并独立完成所有的优化步骤，进程内与一般的训练无异。</p><p>在各进程梯度计算完成之后，各进程需要将梯度进行汇总平均，然后再由 rank=0 的进程，将其 broadcast 到所有进程。之后，各进程用该梯度来更新参数。</p><p>由于 <strong>各进程中的模型，初始参数一致</strong> (初始时刻进行一次 broadcast)，而每次用于更新参数的梯度也一致，因此，各进程的模型参数始终保持一致。</p><p>而在 DataParallel 中，全程维护一个 optimizer，对各 GPU 上梯度进行求和，而在主 GPU 进行参数更新，之后再将模型参数 broadcast 到其他 GPU。</p><p>相较于 DataParallel，torch.distributed 传输的数据量更少，因此速度更快，效率更高。</p><p>distributed的方式会在每个GPU上单独放一个 <strong>模型副本，optimizer副本，不同的dataloader</strong></p><h2 id="1-rank">1. rank</h2><ul><li>rank：<br>表示进程序号，用于进程间通讯，表征进程优先级。rank = 0 的主机为 master 节点。</li><li>local_rank：<br>进程内， <strong>GPU 编号</strong>， <strong>非显式参数</strong>，由 <strong>torch.distributed.launch</strong> 内部指定。比方说， rank = 3，local_rank = 0 表示第 3 个进程内的第 1 块 GPU。</li></ul><h2 id="2-init-process-group初始化">2. init_process_group初始化</h2><p>分布式训练的时候，有多种初始化方式，参考链接的第二篇文章。比较常用的是nccl的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.distributed.init_process_group(backend=&#x27;nccl&#x27;, init_method=&#x27;env://&#x27;)  # distributed backend</span><br></pre></td></tr></table></figure><h2 id="3-DistributedSampler">3. DistributedSampler</h2><p><strong>多GPU训练的时候，采用DDP的方式，每个GPU上都有一个模型副本，正确的情况应该是每个GPU上送入不同的数据，前向，求loss，整合loss，反向梯度</strong><br>pytorch中有DistributedSampler实现对单个dataset进行多GPU分发。详情看后面的例子</p><p><strong>应该还要将对应的数据放到不同的GPU上，比如用：input = <a href="http://input.to">input.to</a>(device)</strong></p><h2 id="4-DistributedDataParallel">4. DistributedDataParallel</h2><p>模型封装：</p><ul><li>将模型放到对应的GPU上</li><li>对模型进行封装</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;模型搬移到GPU：&quot;</span>, device)</span><br><span class="line">model.to(device)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> torch.cuda.device_count() &gt; <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Let&#x27;s use&quot;</span>, torch.cuda.device_count(), <span class="string">&quot;GPUs!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型封装的gpu：&quot;</span>, local_rank)</span><br><span class="line">    model = torch.nn.parallel.DistributedDataParallel(model,</span><br><span class="line">                                                      device_ids=[local_rank],</span><br><span class="line">                                                      output_device=local_rank)</span><br></pre></td></tr></table></figure><h2 id="5-例子">5. 例子</h2><p>这里用一个简单的例子对以上的几个方面进行测试，单机多卡的情况。<br><strong><a href="http://test.py">test.py</a></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset, DataLoader</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> torch.utils.data.distributed <span class="keyword">import</span> DistributedSampler</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_args</span>():</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Train Multitask network&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--sync-bn&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;use SyncBatchNorm, only available in DDP mode&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--local_rank&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=-<span class="number">1</span>, <span class="built_in">help</span>=<span class="string">&#x27;DDP parameter, do not modify&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--conf-thres&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>, default=<span class="number">0.001</span>, <span class="built_in">help</span>=<span class="string">&#x27;object confidence threshold&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--iou-thres&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>, default=<span class="number">0.6</span>, <span class="built_in">help</span>=<span class="string">&#x27;IOU threshold for NMS&#x27;</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line">args = parse_args()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;local_rank: &quot;</span>, args.local_rank)</span><br><span class="line"></span><br><span class="line">torch.distributed.init_process_group(backend=<span class="string">&#x27;nccl&#x27;</span>, init_method=<span class="string">&#x27;env://&#x27;</span>)</span><br><span class="line"></span><br><span class="line">input_size = <span class="number">5</span></span><br><span class="line">output_size = <span class="number">2</span></span><br><span class="line">batch_size = <span class="number">4</span></span><br><span class="line">data_size = <span class="number">40</span></span><br><span class="line"></span><br><span class="line">local_rank = torch.distributed.get_rank()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;local rank: &quot;</span>, local_rank)</span><br><span class="line">torch.cuda.set_device(local_rank)</span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span>, local_rank)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;device: &quot;</span>, device)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RandomDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, size, length</span>):</span><br><span class="line">        self.<span class="built_in">len</span> = length</span><br><span class="line">        self.data = torch.randn(length, size).to(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, index</span>):</span><br><span class="line">        <span class="keyword">return</span> self.data[index]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.<span class="built_in">len</span></span><br><span class="line"></span><br><span class="line">dataset = RandomDataset(input_size, data_size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;length dataset: &quot;</span> , <span class="built_in">len</span>(dataset))</span><br><span class="line"></span><br><span class="line">sampler = <span class="built_in">iter</span>(DistributedSampler(dataset))</span><br><span class="line"></span><br><span class="line">listsampler = <span class="built_in">list</span>(sampler)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;list sampler len:&quot;</span>, <span class="built_in">len</span>(listsampler))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;list sampler&quot;</span>, listsampler)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sort sampler: &quot;</span>, <span class="built_in">sorted</span>(listsampler))</span><br><span class="line"></span><br><span class="line">rand_loader = DataLoader(dataset=dataset,</span><br><span class="line">                         batch_size=batch_size,</span><br><span class="line">                         sampler=DistributedSampler(dataset))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Model</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, input_size, output_size</span>):</span><br><span class="line">        <span class="built_in">super</span>(Model, self).__init__()</span><br><span class="line">        self.fc = nn.Linear(input_size, output_size)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = self.fc(<span class="built_in">input</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;  In Model: input size&quot;</span>, <span class="built_in">input</span>.size(),</span><br><span class="line">              <span class="string">&quot;output size&quot;</span>, output.size())</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">model = Model(input_size, output_size)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;模型搬移到GPU：&quot;</span>, device)</span><br><span class="line">model.to(device)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> torch.cuda.device_count() &gt; <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Let&#x27;s use&quot;</span>, torch.cuda.device_count(), <span class="string">&quot;GPUs!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型封装的gpu：&quot;</span>, local_rank)</span><br><span class="line">    model = torch.nn.parallel.DistributedDataParallel(model,</span><br><span class="line">                                                      device_ids=[local_rank],</span><br><span class="line">                                                      output_device=local_rank)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> rand_loader:</span><br><span class="line">    <span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">        input_var = data</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        input_var = data</span><br><span class="line"></span><br><span class="line">    output = model(input_var)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Outside: input size&quot;</span>, input_var.size(), <span class="string">&quot;output_size&quot;</span>, output.size())</span><br></pre></td></tr></table></figure><p>命令：<code>CUDA_VISIBLE_DEVICES=0,1 python -m torch.distributed.launch --nproc_per_node=2 test.py</code></p><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">*****************************************</span><br><span class="line">Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. </span><br><span class="line">*****************************************</span><br><span class="line">local_rank:  1</span><br><span class="line">local_rank:  0</span><br><span class="line">local rank:  0</span><br><span class="line">local rank:  1</span><br><span class="line">device:  device:  cuda:1</span><br><span class="line">cuda:0</span><br><span class="line">length dataset:  40</span><br><span class="line">length dataset:  40</span><br><span class="line">list sampler len: 20</span><br><span class="line">list sampler [16, 5, 14, 29, 26, 6, 25, 1, 32, 18, 0, 19, 36, 7, 38, 30, 12, 34, 22, 13]</span><br><span class="line">sort sampler:  [0, 1, 5, 6, 7, 12, 13, 14, 16, 18, 19, 22, 25, 26, 29, 30, 32, 34, 36, 38]</span><br><span class="line">list sampler len: 20</span><br><span class="line">list sampler [4, 21, 11, 39, 17, 2, 20, 24, 15, 28, 9, 10, 8, 27, 37, 31, 35, 3, 33, 23]</span><br><span class="line">sort sampler:  [2, 3, 4, 8, 9, 10, 11, 15, 17, 20, 21, 23, 24, 27, 28, 31, 33, 35, 37, 39]</span><br><span class="line">模型搬移到GPU：模型搬移到GPU：  cuda:1</span><br><span class="line">cuda:0</span><br><span class="line">Let&#x27;s use 2 GPUs!</span><br><span class="line">模型封装的gpu：Let&#x27;s use  12</span><br><span class="line"> GPUs!</span><br><span class="line">模型封装的gpu： 0</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br><span class="line">  In Model: input size torch.Size([4, 5]) output size torch.Size([4, 2])</span><br><span class="line">Outside: input size torch.Size([4, 5]) output_size torch.Size([4, 2])</span><br></pre></td></tr></table></figure><p>可以看到：</p><ul><li>local_rank是 <code>torch.distributed.launch</code>隐含指定的，这里我们指定了2块GPU，分别启动了2个两个线程，所以 <code>torch.distributed.launch</code>会将local_rank设为0，1</li><li>两个DistributedSampler是len(dataset)的一半，切二者的index数是不重合的</li><li>模型是单独分配到某个GPU，再进行封装的。</li></ul><h2 id="reference">reference</h2><ol><li><a href="https://blog.csdn.net/u011622208/article/details/120682874">Origin</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何在苹果M1芯片 (Apple Silicon) 上安装 JDK 环境 - Winson LO</title>
      <link href="/2021/03/09/Notebooks/ComputerScience/Basic/install-jdk8-on-m1/"/>
      <url>/2021/03/09/Notebooks/ComputerScience/Basic/install-jdk8-on-m1/</url>
      
        <content type="html"><![CDATA[<p>【 <strong>最后更新于2021年8月12日</strong>】</p><p>M1 使用全新的系统架构，如果你正在使用搭载 M1 芯片的 Macbook 或 Mac mini 电脑，你一定会困惑如何解决 Java 开发环境的问题。截止2021年8月，甲骨文 (Oracle) 的 JDK 尚未针对苹果 M1 芯片进行适配。 因此如果将甲骨文 JDK 安装到 M1 芯片的 Mac 电脑上，Mac OS 将会使用 Rosetta 2 对其进行转译运行，导致生产力性能大幅下跌，同时开发过程中还可能会遇到兼容性问题。</p><p>如果想以原生的方式在 M1 芯片的电脑上运行 Java，我们可以选择使用 Azul Zulu 的 Java JDK 来解决改问题。</p><p>Zulu JDK 支持的 Java 版本有：8，9，10，11，12，13，14，15。</p><p>本次安装我们将选择较为通用的 JDK 8 来搭建环境。</p><p>本教程所使用 Mac 之配置详情如下：</p><ul><li><p>Mac mini ( M1, 2020 )</p></li><li><p>16 GB 内存</p></li><li><p>512 GB 存储内存</p></li><li><p>macOS Big Sur 11.2.1</p></li></ul><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/mac-mini-config.png?x86153" alt="mac-mini-config.png (586×313) (winsonlo.com)"></p><h2 id="从-Zulu-JDK-官方网站下载-JDK-安装包">从 Zulu JDK 官方网站下载 JDK 安装包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Java Version: 对应 Java 版本，如：Java 8 (LTS)</span><br><span class="line">Operating Systems: 选择 macOS</span><br><span class="line">Architecture: 选择 ARM 64-bit</span><br><span class="line">Java Package: JDK</span><br></pre></td></tr></table></figure><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/08/zulu-jdk8-download-selection.png" alt="zulu-jdk8-download-selection.png (1473×663) (winsonlo.com)"></p><p>本次我将选择 Java 8 (LTS) 的 “8u282b08Zulu: 8.52.0.23” 版本，同时以 .dmg 安装包的方式安装以获得更加便捷的安装体验。</p><p>你可<a href="https://cdn.azul.com/zulu/bin/zulu8.52.0.23-ca-jdk8.0.282-macosx_x64.dmg">点击这里</a>直接下载。 <em>（链接对应 JDK 版本号: 8u282b08Zulu: 8.52.0.23，格式为 dmg 安装包，如需最新版本或其他格式的安装方式，请直接前往官方下载页面下载。）</em></p><p>***注意：**请选择 ARM 64-bit(ARMv8) 版本的安装包，切勿选择 x86 64-bit 版本，否则所安装的 JDK 环境后续运行时，Mac 将调用 Rosetta 2 将其转译，使其运行速度变得极为缓慢，性能大幅度下跌。</p><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/image-28.png" alt="image-28.png (1197×354) (winsonlo.com)"></p><h2 id="运行-Zulu-JDK-8-安装包">运行 Zulu JDK 8 安装包</h2><p>下载完毕后，你将得到一个 Zulu JDK 的安装包，双击以打开并运行它。安装包打开后，双击右边的按钮。</p><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/image-29.png?x86153" alt="image-29.png (600×509) (winsonlo.com)"></p><p>直接点击「继续」以进入下一步</p><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/image-30.png?x86153" alt="image-30.png (620×444) (winsonlo.com)"></p><p>选择你希望安装 JDK 的硬盘，通常就是你默认的 Mac 系统盘。然后点击「继续」以进入下一步。</p><p>继续点击「安装」，确认将 Zulu JDK 8 安装到 Mac 上。</p><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/image-31.png?x86153" alt="image-31.png (620×444) (winsonlo.com)"></p><p>点击「安装」后，你需要输入你 Mac 的密码或使用 Apple Watch 以授权安装器将 Zulu JDK 8 安装到你的 Mac 上。</p><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/image-32.png?x86153" alt="image-32.png (446×126) (winsonlo.com)"></p><p>授权完成后，安装器将会自动将 Zulu JDK 8 安装到你的 Mac 上。</p><h2 id="大功告成">大功告成</h2><p>安装器结束安装后，你将会见到「安装成功」的提示页面。此时，前往 Mac 的终端，并输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>执行命令后，当你看到如下输出，则证明 Zulu JDK 8 已成功安装在你的 Mac 上。</p><p><img src="https://www.winsonlo.com/wp-content/uploads/2021/03/image-38.png?x86153" alt="image-38.png (654×371) (winsonlo.com)"></p><p>安装完 Zulu JDK 8 后，你可以在搭载 M1 芯片的 Mac 上搭建并部署相关开发环境。</p><h2 id="开发环境的搭建">开发环境的搭建</h2><p>欢迎前往查看 M1 (Apple Silicon) 开发环境部署的教程。</p><p><a href="https://www.winsonlo.com/it/howto/apache-netbeans-12-on-m1/">《如何在苹果M1芯片 (Apple Silicon) 上安装 Apache Netbeans 12 以搭建 Web 开发环境》</a></p><h2 id="JDR-环境的安装">JDR 环境的安装</h2><p>Azul zulu 同时提供可运行在 M1 芯片上 JDR，安装方法与安装 JDK 相似，前往<a href="https://www.azul.com/downloads/?package=jre">下载页面</a>选择对应版本的安装包即可。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 安装 Java jdk 环境配置</title>
      <link href="/2020/07/07/Notebooks/ComputerScience/Basic/install-jdk8-on-mac/"/>
      <url>/2020/07/07/Notebooks/ComputerScience/Basic/install-jdk8-on-mac/</url>
      
        <content type="html"><![CDATA[<h3 id="安装-Java-jdk">安装 Java jdk</h3><ul><li><a href="#1-1">1、验证</a></li></ul><ul><li><a href="#-jdk-2">是否有 jdk</a></li></ul><ul><li><a href="#2-6">2、下载</a></li></ul><ul><li><a href="#macjava-7">获取Mac版本的Java安装包</a></li></ul><ul><li><a href="#3-12">3、安装</a><ul><li><a href="#dmg-13">双击已经下载好的dmg文件进行安装</a></li><li><a href="#pkg-15">双击.pkg文件</a></li><li><a href="#-17">安装完成</a></li></ul></li><li><a href="#4-19">4、环境配置</a><ul><li><a href="#macjdk-22">Mac在安装jdk的时候自动配置好了</a></li><li><a href="#-24">验证是否成功</a></li></ul></li><li><a href="#5macjdk-30">5、Mac下查看已安装的jdk版本及其安装目录</a></li></ul><h1>1、验证</h1><h2 id="是否有-jdk">是否有 jdk</h2><p>判断当前Mac是否安装了jdk<br>如果出现以下情况表示还未安装jdk<br><img src="https://img-blog.csdnimg.cn/20200707152333604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""></p><h1><a name="2_6">;</a>  2、下载</h1><h2 id="获取Mac版本的Java安装包">获取Mac版本的Java安装包</h2><p>推荐地址：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>这边是8u251版本，下载的时候可能需要注册一个Oracle账户登录后，才可以进行下载<br><img src="https://img-blog.csdnimg.cn/20200707151549467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""><br>备注：下载的时间比较久，在mac上的下载会比较慢</p><h1><a name="3_12">;</a>  3、安装</h1><h2 id="双击已经下载好的dmg文件进行安装">双击已经下载好的dmg文件进行安装</h2><p><img src="https://img-blog.csdnimg.cn/2020070715223888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="a-name-pkg-15-a-双击-pkg文件"><a name="pkg_15">;</a> 双击.pkg文件</h2><p><img src="https://img-blog.csdnimg.cn/20200707152720204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="安装完成">安装完成</h2><p><img src="https://img-blog.csdnimg.cn/20200707152609916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""></p><h1><a name="4_19">;</a>  4、环境配置</h1><p>1、MAC的环境变量的配置都是在终端理进行，按键盘&quot;Ctrl + 空格&quot;组合键，调出Spotlight搜索，在这里可以快速启动终端，输入 <code>ter&amp;#xFF08;terminal.app&amp;#xFF09;</code>,然后回车，即可打开终端：<br><img src="https://img-blog.csdnimg.cn/2020070716222455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="Mac在安装jdk的时候自动配置好了">Mac在安装jdk的时候自动配置好了</h2><p>所以省略了配置环境的步骤</p><h2 id="验证是否成功">验证是否成功</h2><p>在终端输入 <code>java</code>，验证是否成功安装了java。显示以下信息表示正确<br><img src="https://img-blog.csdnimg.cn/20200707163710353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""><br>接下来输入 <code>javac</code>验证是否成功配置好环境变量。显示以下信息表示正确。<br><img src="https://img-blog.csdnimg.cn/20200707163842538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""><br>如果没有配置成功，可以手动找到JDK的本地安装目录，然后进行配置</p><h1><a name="5macjdk_30">;</a>  5、Mac下查看已安装的jdk版本及其安装目录</h1><p>可以通过在命令行输入 <code>java -version</code>查看是否安装了jdk</p><p>按键盘&quot;Ctrl + 空格&quot;组合键，调出Spotlight搜索输入 <code>ter&amp;#xFF08;terminal.app&amp;#xFF09;</code>，打开终端输入： <code>/usr/libexec/java_home -V</code></p><p>注意：输入命令参数区分大小写(-v是不对的，必须是-V)</p><p>如图：3个红框内依次为：输入命令； 当前Mac已安装jdk目录； Mac默认使用的jdk版本；<br><img src="https://img-blog.csdnimg.cn/20200707163423642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1aml1YmE=,size_16,color_FFFFFF,t_70" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zsh git readme</title>
      <link href="/2010/01/01/Notebooks/ComputerScience/Basic/git-zsh-readme/"/>
      <url>/2010/01/01/Notebooks/ComputerScience/Basic/git-zsh-readme/</url>
      
        <content type="html"><![CDATA[<h1>git plugin</h1><p>The git plugin provides many <a href="#aliases">aliases</a> and a few useful <a href="#functions">functions</a>.</p><p>To use it, add <code>git</code> to the plugins array in your zshrc file:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(... git)</span><br></pre></td></tr></table></figure><h2 id="Aliases">Aliases</h2><table><thead><tr><th style="text-align:left">Alias</th><th style="text-align:left">Command</th></tr></thead><tbody><tr><td style="text-align:left">g</td><td style="text-align:left">git</td></tr><tr><td style="text-align:left">ga</td><td style="text-align:left">git add</td></tr><tr><td style="text-align:left">gaa</td><td style="text-align:left">git add --all</td></tr><tr><td style="text-align:left">gapa</td><td style="text-align:left">git add --patch</td></tr><tr><td style="text-align:left">gau</td><td style="text-align:left">git add --update</td></tr><tr><td style="text-align:left">gav</td><td style="text-align:left">git add --verbose</td></tr><tr><td style="text-align:left">gap</td><td style="text-align:left">git apply</td></tr><tr><td style="text-align:left">gapt</td><td style="text-align:left">git apply --3way</td></tr><tr><td style="text-align:left">gb</td><td style="text-align:left">git branch</td></tr><tr><td style="text-align:left">gba</td><td style="text-align:left">git branch -a</td></tr><tr><td style="text-align:left">gbd</td><td style="text-align:left">git branch -d</td></tr><tr><td style="text-align:left">gbda</td><td style="text-align:left">git branch --no-color --merged | grep -vE “^([+<em>]|\s</em>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>g</mi><mi>i</mi><msub><mi>t</mi><mi>m</mi></msub><mi>a</mi><mi>i</mi><msub><mi>n</mi><mi>b</mi></msub><mi>r</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">(git_main_branch)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">ai</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>(git_develop_branch))\s*$)” | xargs git branch -d 2&gt;/dev/null</td></tr><tr><td style="text-align:left">gbD</td><td style="text-align:left">git branch -D</td></tr><tr><td style="text-align:left">gbl</td><td style="text-align:left">git blame -b -w</td></tr><tr><td style="text-align:left">gbnm</td><td style="text-align:left">git branch --no-merged</td></tr><tr><td style="text-align:left">gbr</td><td style="text-align:left">git branch --remote</td></tr><tr><td style="text-align:left">gbs</td><td style="text-align:left">git bisect</td></tr><tr><td style="text-align:left">gbsb</td><td style="text-align:left">git bisect bad</td></tr><tr><td style="text-align:left">gbsg</td><td style="text-align:left">git bisect good</td></tr><tr><td style="text-align:left">gbsr</td><td style="text-align:left">git bisect reset</td></tr><tr><td style="text-align:left">gbss</td><td style="text-align:left">git bisect start</td></tr><tr><td style="text-align:left">gc</td><td style="text-align:left">git commit -v</td></tr><tr><td style="text-align:left">gc!</td><td style="text-align:left">git commit -v --amend</td></tr><tr><td style="text-align:left">gcn!</td><td style="text-align:left">git commit -v --no-edit --amend</td></tr><tr><td style="text-align:left">gca</td><td style="text-align:left">git commit -v -a</td></tr><tr><td style="text-align:left">gca!</td><td style="text-align:left">git commit -v -a --amend</td></tr><tr><td style="text-align:left">gcan!</td><td style="text-align:left">git commit -v -a --no-edit --amend</td></tr><tr><td style="text-align:left">gcans!</td><td style="text-align:left">git commit -v -a -s --no-edit --amend</td></tr><tr><td style="text-align:left">gcam</td><td style="text-align:left">git commit -a -m</td></tr><tr><td style="text-align:left">gcas</td><td style="text-align:left">git commit -a -s</td></tr><tr><td style="text-align:left">gcasm</td><td style="text-align:left">git commit -a -s -m</td></tr><tr><td style="text-align:left">gcsm</td><td style="text-align:left">git commit -s -m</td></tr><tr><td style="text-align:left">gcb</td><td style="text-align:left">git checkout -b</td></tr><tr><td style="text-align:left">gcf</td><td style="text-align:left">git config --list</td></tr><tr><td style="text-align:left">gcl</td><td style="text-align:left">git clone --recurse-submodules</td></tr><tr><td style="text-align:left">gccd</td><td style="text-align:left">git clone --recurse-submodules “@" && cd "(basename $_ .git)”</td></tr><tr><td style="text-align:left">gclean</td><td style="text-align:left">git clean -id</td></tr><tr><td style="text-align:left">gpristine</td><td style="text-align:left">git reset --hard &amp;&amp; git clean -dffx</td></tr><tr><td style="text-align:left">gcm</td><td style="text-align:left">git checkout $(git_main_branch)</td></tr><tr><td style="text-align:left">gcd</td><td style="text-align:left">git checkout $(git_develop_branch)</td></tr><tr><td style="text-align:left">gcmsg</td><td style="text-align:left">git commit -m</td></tr><tr><td style="text-align:left">gco</td><td style="text-align:left">git checkout</td></tr><tr><td style="text-align:left">gcor</td><td style="text-align:left">git checkout --recurse-submodules</td></tr><tr><td style="text-align:left">gcount</td><td style="text-align:left">git shortlog -sn</td></tr><tr><td style="text-align:left">gcp</td><td style="text-align:left">git cherry-pick</td></tr><tr><td style="text-align:left">gcpa</td><td style="text-align:left">git cherry-pick --abort</td></tr><tr><td style="text-align:left">gcpc</td><td style="text-align:left">git cherry-pick --continue</td></tr><tr><td style="text-align:left">gcs</td><td style="text-align:left">git commit -S</td></tr><tr><td style="text-align:left">gd</td><td style="text-align:left">git diff</td></tr><tr><td style="text-align:left">gdca</td><td style="text-align:left">git diff --cached</td></tr><tr><td style="text-align:left">gdcw</td><td style="text-align:left">git diff --cached --word-diff</td></tr><tr><td style="text-align:left">gdct</td><td style="text-align:left">git describe --tags $(git rev-list --tags --max-count=1)</td></tr><tr><td style="text-align:left">gds</td><td style="text-align:left">git diff --staged</td></tr><tr><td style="text-align:left">gdt</td><td style="text-align:left">git diff-tree --no-commit-id --name-only -r</td></tr><tr><td style="text-align:left">gdnolock</td><td style="text-align:left">git diff $@ “:(exclude)package-lock.json” “:(exclude)*.lock”</td></tr><tr><td style="text-align:left">gdup</td><td style="text-align:left">git diff @{upstream}</td></tr><tr><td style="text-align:left">gdv</td><td style="text-align:left">git diff -w $@ | view -</td></tr><tr><td style="text-align:left">gdw</td><td style="text-align:left">git diff --word-diff</td></tr><tr><td style="text-align:left">gf</td><td style="text-align:left">git fetch</td></tr><tr><td style="text-align:left">gfa</td><td style="text-align:left">git fetch --all --prune</td></tr><tr><td style="text-align:left">gfg</td><td style="text-align:left">git ls-files | grep</td></tr><tr><td style="text-align:left">gfo</td><td style="text-align:left">git fetch origin</td></tr><tr><td style="text-align:left">gg</td><td style="text-align:left">git gui citool</td></tr><tr><td style="text-align:left">gga</td><td style="text-align:left">git gui citool --amend</td></tr><tr><td style="text-align:left">ggf</td><td style="text-align:left">git push --force origin $(current_branch)</td></tr><tr><td style="text-align:left">ggfl</td><td style="text-align:left">git push --force-with-lease origin $(current_branch)</td></tr><tr><td style="text-align:left">ggl</td><td style="text-align:left">git pull origin $(current_branch)</td></tr><tr><td style="text-align:left">ggp</td><td style="text-align:left">git push origin $(current_branch)</td></tr><tr><td style="text-align:left">ggpnp</td><td style="text-align:left">ggl &amp;&amp; ggp</td></tr><tr><td style="text-align:left">ggpull</td><td style="text-align:left">git pull origin “$(git_current_branch)”</td></tr><tr><td style="text-align:left">ggpur</td><td style="text-align:left">ggu</td></tr><tr><td style="text-align:left">ggpush</td><td style="text-align:left">git push origin “$(git_current_branch)”</td></tr><tr><td style="text-align:left">ggsup</td><td style="text-align:left">git branch --set-upstream-to=origin/$(git_current_branch)</td></tr><tr><td style="text-align:left">ggu</td><td style="text-align:left">git pull --rebase origin $(current_branch)</td></tr><tr><td style="text-align:left">gpsup</td><td style="text-align:left">git push --set-upstream origin $(git_current_branch)</td></tr><tr><td style="text-align:left">ghh</td><td style="text-align:left">git help</td></tr><tr><td style="text-align:left">gignore</td><td style="text-align:left">git update-index --assume-unchanged</td></tr><tr><td style="text-align:left">gignored</td><td style="text-align:left">git ls-files -v | grep “^[[:lower:]]”</td></tr><tr><td style="text-align:left">git-svn-dcommit-push</td><td style="text-align:left">git svn dcommit &amp;&amp; git push github $(git_main_branch):svntrunk</td></tr><tr><td style="text-align:left">gk</td><td style="text-align:left">gitk --all --branches &amp;!</td></tr><tr><td style="text-align:left">gke</td><td style="text-align:left">gitk --all $(git log -g --pretty=%h) &amp;!</td></tr><tr><td style="text-align:left">gl</td><td style="text-align:left">git pull</td></tr><tr><td style="text-align:left">glg</td><td style="text-align:left">git log --stat</td></tr><tr><td style="text-align:left">glgp</td><td style="text-align:left">git log --stat -p</td></tr><tr><td style="text-align:left">glgg</td><td style="text-align:left">git log --graph</td></tr><tr><td style="text-align:left">glgga</td><td style="text-align:left">git log --graph --decorate --all</td></tr><tr><td style="text-align:left">glgm</td><td style="text-align:left">git log --graph --max-count=10</td></tr><tr><td style="text-align:left">glo</td><td style="text-align:left">git log --oneline --decorate</td></tr><tr><td style="text-align:left">glol</td><td style="text-align:left">git log --graph --pretty=‘%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)&lt;%an&gt;%Creset’</td></tr><tr><td style="text-align:left">glols</td><td style="text-align:left">git log --graph --pretty=‘%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)&lt;%an&gt;%Creset’ --stat</td></tr><tr><td style="text-align:left">glod</td><td style="text-align:left">git log --graph --pretty=‘%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)&lt;%an&gt;%Creset’</td></tr><tr><td style="text-align:left">glods</td><td style="text-align:left">git log --graph --pretty=‘%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)&lt;%an&gt;%Creset’ --date=short</td></tr><tr><td style="text-align:left">glola</td><td style="text-align:left">git log --graph --pretty=‘%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)&lt;%an&gt;%Creset’ --all</td></tr><tr><td style="text-align:left">glog</td><td style="text-align:left">git log --oneline --decorate --graph</td></tr><tr><td style="text-align:left">gloga</td><td style="text-align:left">git log --oneline --decorate --graph --all</td></tr><tr><td style="text-align:left">glp</td><td style="text-align:left">git log --pretty=&lt;format&gt;</td></tr><tr><td style="text-align:left">gm</td><td style="text-align:left">git merge</td></tr><tr><td style="text-align:left">gmom</td><td style="text-align:left">git merge origin/$(git_main_branch)</td></tr><tr><td style="text-align:left">gmtl</td><td style="text-align:left">git mergetool --no-prompt</td></tr><tr><td style="text-align:left">gmtlvim</td><td style="text-align:left">git mergetool --no-prompt --tool=vimdiff</td></tr><tr><td style="text-align:left">gmum</td><td style="text-align:left">git merge upstream/$(git_main_branch)</td></tr><tr><td style="text-align:left">gma</td><td style="text-align:left">git merge --abort</td></tr><tr><td style="text-align:left">gp</td><td style="text-align:left">git push</td></tr><tr><td style="text-align:left">gpd</td><td style="text-align:left">git push --dry-run</td></tr><tr><td style="text-align:left">gpf</td><td style="text-align:left">git push --force-with-lease</td></tr><tr><td style="text-align:left">gpf!</td><td style="text-align:left">git push --force</td></tr><tr><td style="text-align:left">gpoat</td><td style="text-align:left">git push origin --all &amp;&amp; git push origin --tags</td></tr><tr><td style="text-align:left">gpr</td><td style="text-align:left">git pull --rebase</td></tr><tr><td style="text-align:left">gpu</td><td style="text-align:left">git push upstream</td></tr><tr><td style="text-align:left">gpv</td><td style="text-align:left">git push -v</td></tr><tr><td style="text-align:left">gr</td><td style="text-align:left">git remote</td></tr><tr><td style="text-align:left">gra</td><td style="text-align:left">git remote add</td></tr><tr><td style="text-align:left">grb</td><td style="text-align:left">git rebase</td></tr><tr><td style="text-align:left">grba</td><td style="text-align:left">git rebase --abort</td></tr><tr><td style="text-align:left">grbc</td><td style="text-align:left">git rebase --continue</td></tr><tr><td style="text-align:left">grbd</td><td style="text-align:left">git rebase $(git_develop_branch)</td></tr><tr><td style="text-align:left">grbi</td><td style="text-align:left">git rebase -i</td></tr><tr><td style="text-align:left">grbm</td><td style="text-align:left">git rebase $(git_main_branch)</td></tr><tr><td style="text-align:left">grbom</td><td style="text-align:left">git rebase origin/$(git_main_branch)</td></tr><tr><td style="text-align:left">grbo</td><td style="text-align:left">git rebase --onto</td></tr><tr><td style="text-align:left">grbs</td><td style="text-align:left">git rebase --skip</td></tr><tr><td style="text-align:left">grev</td><td style="text-align:left">git revert</td></tr><tr><td style="text-align:left">grh</td><td style="text-align:left">git reset</td></tr><tr><td style="text-align:left">grhh</td><td style="text-align:left">git reset --hard</td></tr><tr><td style="text-align:left">groh</td><td style="text-align:left">git reset origin/$(git_current_branch) --hard</td></tr><tr><td style="text-align:left">grm</td><td style="text-align:left">git rm</td></tr><tr><td style="text-align:left">grmc</td><td style="text-align:left">git rm --cached</td></tr><tr><td style="text-align:left">grmv</td><td style="text-align:left">git remote rename</td></tr><tr><td style="text-align:left">grrm</td><td style="text-align:left">git remote remove</td></tr><tr><td style="text-align:left">grs</td><td style="text-align:left">git restore</td></tr><tr><td style="text-align:left">grset</td><td style="text-align:left">git remote set-url</td></tr><tr><td style="text-align:left">grss</td><td style="text-align:left">git restore --source</td></tr><tr><td style="text-align:left">grst</td><td style="text-align:left">git restore --staged</td></tr><tr><td style="text-align:left">grt</td><td style="text-align:left">cd “$(git rev-parse --show-toplevel || echo .)”</td></tr><tr><td style="text-align:left">gru</td><td style="text-align:left">git reset –</td></tr><tr><td style="text-align:left">grup</td><td style="text-align:left">git remote update</td></tr><tr><td style="text-align:left">grv</td><td style="text-align:left">git remote -v</td></tr><tr><td style="text-align:left">gsb</td><td style="text-align:left">git status -sb</td></tr><tr><td style="text-align:left">gsd</td><td style="text-align:left">git svn dcommit</td></tr><tr><td style="text-align:left">gsh</td><td style="text-align:left">git show</td></tr><tr><td style="text-align:left">gsi</td><td style="text-align:left">git submodule init</td></tr><tr><td style="text-align:left">gsps</td><td style="text-align:left">git show --pretty=short --show-signature</td></tr><tr><td style="text-align:left">gsr</td><td style="text-align:left">git svn rebase</td></tr><tr><td style="text-align:left">gss</td><td style="text-align:left">git status -s</td></tr><tr><td style="text-align:left">gst</td><td style="text-align:left">git status</td></tr><tr><td style="text-align:left">gsta</td><td style="text-align:left">git stash push</td></tr><tr><td style="text-align:left">gsta</td><td style="text-align:left">git stash save</td></tr><tr><td style="text-align:left">gstaa</td><td style="text-align:left">git stash apply</td></tr><tr><td style="text-align:left">gstc</td><td style="text-align:left">git stash clear</td></tr><tr><td style="text-align:left">gstd</td><td style="text-align:left">git stash drop</td></tr><tr><td style="text-align:left">gstl</td><td style="text-align:left">git stash list</td></tr><tr><td style="text-align:left">gstp</td><td style="text-align:left">git stash pop</td></tr><tr><td style="text-align:left">gsts</td><td style="text-align:left">git stash show --text</td></tr><tr><td style="text-align:left">gstu</td><td style="text-align:left">git stash --include-untracked</td></tr><tr><td style="text-align:left">gstall</td><td style="text-align:left">git stash --all</td></tr><tr><td style="text-align:left">gsu</td><td style="text-align:left">git submodule update</td></tr><tr><td style="text-align:left">gsw</td><td style="text-align:left">git switch</td></tr><tr><td style="text-align:left">gswc</td><td style="text-align:left">git switch -c</td></tr><tr><td style="text-align:left">gswm</td><td style="text-align:left">git switch $(git_main_branch)</td></tr><tr><td style="text-align:left">gswd</td><td style="text-align:left">git switch $(git_develop_branch)</td></tr><tr><td style="text-align:left">gts</td><td style="text-align:left">git tag -s</td></tr><tr><td style="text-align:left">gtv</td><td style="text-align:left">git tag | sort -V</td></tr><tr><td style="text-align:left">gtl</td><td style="text-align:left">gtl(){ git tag --sort=-v:refname -n -l ${1}* }; noglob gtl</td></tr><tr><td style="text-align:left">gunignore</td><td style="text-align:left">git update-index --no-assume-unchanged</td></tr><tr><td style="text-align:left">gunwip</td><td style="text-align:left">git log -n 1 | grep -q -c “--wip--” &amp;&amp; git reset HEAD~1</td></tr><tr><td style="text-align:left">gup</td><td style="text-align:left">git pull --rebase</td></tr><tr><td style="text-align:left">gupv</td><td style="text-align:left">git pull --rebase -v</td></tr><tr><td style="text-align:left">gupa</td><td style="text-align:left">git pull --rebase --autostash</td></tr><tr><td style="text-align:left">gupav</td><td style="text-align:left">git pull --rebase --autostash -v</td></tr><tr><td style="text-align:left">glum</td><td style="text-align:left">git pull upstream $(git_main_branch)</td></tr><tr><td style="text-align:left">gwch</td><td style="text-align:left">git whatchanged -p --abbrev-commit --pretty=medium</td></tr><tr><td style="text-align:left">gwip</td><td style="text-align:left">git add -A; git rm $(git ls-files --deleted) 2&gt; /dev/null; git commit --no-verify --no-gpg-sign -m “–wip-- [skip ci]”</td></tr><tr><td style="text-align:left">gam</td><td style="text-align:left">git am</td></tr><tr><td style="text-align:left">gamc</td><td style="text-align:left">git am --continue</td></tr><tr><td style="text-align:left">gams</td><td style="text-align:left">git am --skip</td></tr><tr><td style="text-align:left">gama</td><td style="text-align:left">git am --abort</td></tr><tr><td style="text-align:left">gamscp</td><td style="text-align:left">git am --show-current-patch</td></tr></tbody></table><h3 id="Main-branch-preference">Main branch preference</h3><p>Following the recent push for removing racially-charged words from our technical vocabulary, the git plugin favors using<br>a branch name other than <code>master</code>. In this case, we favor the shorter, neutral and descriptive term <code>main</code>. This means<br>that any aliases and functions that previously used <code>master</code>, will use <code>main</code> if that branch exists. We do this via the<br>function <code>git_main_branch</code>.</p><h3 id="Deprecated-aliases">Deprecated aliases</h3><p>These are aliases that have been removed, renamed, or otherwise modified in a way that may, or may not, receive further support.</p><table><thead><tr><th style="text-align:left">Alias</th><th style="text-align:left">Command</th><th style="text-align:left">Modification</th></tr></thead><tbody><tr><td style="text-align:left">gap</td><td style="text-align:left"><code>git add --patch</code></td><td style="text-align:left">new alias <code>gapa</code></td></tr><tr><td style="text-align:left">gcl</td><td style="text-align:left"><code>git config --list</code></td><td style="text-align:left">new alias <code>gcf</code></td></tr><tr><td style="text-align:left">gdc</td><td style="text-align:left"><code>git diff --cached</code></td><td style="text-align:left">new alias <code>gdca</code></td></tr><tr><td style="text-align:left">gdt</td><td style="text-align:left"><code>git difftool</code></td><td style="text-align:left">no replacement</td></tr><tr><td style="text-align:left">ggpull</td><td style="text-align:left"><code>git pull origin $(current_branch)</code></td><td style="text-align:left">new alias <code>ggl</code> (<code>ggpull</code> still exists for now though)</td></tr><tr><td style="text-align:left">ggpur</td><td style="text-align:left"><code>git pull --rebase origin $(current_branch)</code></td><td style="text-align:left">new alias <code>ggu</code> (<code>ggpur</code> still exists for now though)</td></tr><tr><td style="text-align:left">ggpush</td><td style="text-align:left"><code>git push origin $(current_branch)</code></td><td style="text-align:left">new alias <code>ggp</code> (<code>ggpush</code> still exists for now though)</td></tr><tr><td style="text-align:left">gk</td><td style="text-align:left"><code>gitk --all --branches</code></td><td style="text-align:left">now aliased to <code>gitk --all --branches</code></td></tr><tr><td style="text-align:left">glg</td><td style="text-align:left"><code>git log --stat --max-count = 10</code></td><td style="text-align:left">now aliased to <code>git log --stat --color</code></td></tr><tr><td style="text-align:left">glgg</td><td style="text-align:left"><code>git log --graph --max-count = 10</code></td><td style="text-align:left">now aliased to <code>git log --graph --color</code></td></tr><tr><td style="text-align:left">gwc</td><td style="text-align:left"><code>git whatchanged -p --abbrev-commit --pretty = medium</code></td><td style="text-align:left">new alias <code>gwch</code></td></tr></tbody></table><h2 id="Functions">Functions</h2><h3 id="Current">Current</h3><table><thead><tr><th style="text-align:left">Command</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left"><code>grename &lt;old&gt; &lt;new&gt;</code></td><td style="text-align:left">Rename <code>old</code> branch to <code>new</code>, including in origin remote</td></tr><tr><td style="text-align:left">current_branch</td><td style="text-align:left">Return the name of the current branch</td></tr><tr><td style="text-align:left">git_current_user_name</td><td style="text-align:left">Returns the <code>user.name</code> config value</td></tr><tr><td style="text-align:left">git_current_user_email</td><td style="text-align:left">Returns the <code>user.email</code> config value</td></tr><tr><td style="text-align:left">git_main_branch</td><td style="text-align:left">Returns the name of the main branch: <code>main</code> if it exists, <code>master</code> otherwise</td></tr><tr><td style="text-align:left">git_develop_branch</td><td style="text-align:left">Returns the name of the develop branch: <code>dev</code>, <code>devel</code>, <code>development</code> if they exist, <code>develop</code> otherwise</td></tr></tbody></table><h3 id="Work-in-Progress-WIP">Work in Progress (WIP)</h3><p>These features allow to pause a branch development and switch to another one (<em>“Work in Progress”</em>,  or wip). When you want to go back to work, just unwip it.</p><table><thead><tr><th style="text-align:left">Command</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">work_in_progress</td><td style="text-align:left">Echoes a warning if the current branch is a wip</td></tr><tr><td style="text-align:left">gwip</td><td style="text-align:left">Commit wip branch</td></tr><tr><td style="text-align:left">gunwip</td><td style="text-align:left">Uncommit wip branch</td></tr></tbody></table><h3 id="Deprecated-functions">Deprecated functions</h3><table><thead><tr><th style="text-align:left">Command</th><th style="text-align:left">Description</th><th style="text-align:left">Reason</th></tr></thead><tbody><tr><td style="text-align:left">current_repository</td><td style="text-align:left">Return the names of the current remotes</td><td style="text-align:left">Didn’t work properly. Use <code>git remote -v</code> instead (<code>grv</code> alias)</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
